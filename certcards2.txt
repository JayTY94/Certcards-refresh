





1
JavaScript Concepts
You Don’t Know JS: A series of books by Kyle Simpson that dives deep into the core mechanisms of JavaScript, enhancing understanding.





2
JavaScript Concepts
Redux: A predictable state container for JavaScript apps, managing application state with a single source of truth and enabling time-travel debugging.





3
JavaScript Concepts
Modularization: Organizing code into reusable, maintainable modules or components, enhancing code clarity and facilitating collaboration.





4
JavaScript Concepts
NestJS: A progressive Node.js framework built with TypeScript, designed for building scalable and maintainable server-side applications.





5
JavaScript Concepts
Node.js: A JavaScript runtime built on Chrome's V8 engine, enabling server-side scripting and building scalable network applications.





6
PnP Powershell
Update-PnPListItem (PnP.PowerShell)
Modifies an existing item in a SharePoint list. Allows updating fields and properties, supporting dynamic data management and automation.





7
PnP Powershell
Remove-PnPUserFromGroup (PnP.PowerShell)
Removes a user from a SharePoint group. Helps in maintaining accurate group memberships and enforcing access policies through scripts.





8
PnP Powershell
Azure AD App Registration
The process of registering an application in Azure Active Directory to obtain identifiers like client ID and tenant ID, enabling the app to authenticate and access Microsoft APIs.





9
PnP Powershell
OAuth 2.0 Authorization Code Flow
An interactive authentication method involving user login and authorization, suitable for applications that can securely handle client secrets and require delegated permissions.





10
PnP Powershell
SharePoint REST API
A set of web services provided by SharePoint to perform operations like CRUD actions on lists, libraries, and other SharePoint objects using standard HTTP methods.





11
Logging in Python
Q: What is a key benefit of using RotatingFileHandler from the logging.handlers module?

A: It rotates log files when they reach a certain size, such as maxBytes=5*1024*1024 (5 MB).
This prevents log files from growing indefinitely, managing disk space effectively.





12
Logging in Python
Q: What does the exc_info parameter do in logging methods like logger.error() from the logging module?

A: exc_info=True
This includes exception traceback information in the log message, aiding in debugging.





13
Logging in Python
Q: In TimedRotatingFileHandler from the logging.handlers module, what does the when parameter specify?

A: when='midnight'
This parameter sets the interval type for rotating logs, such as daily at midnight.





14
Logging in Python
Q: How can you configure multiple file handlers with different log levels for the same logger in Python's logging module?

A: Add multiple handlers to the logger, each with its own level and target file, such as one handler with level=INFO writing to 'info.log' and another with level=ERROR writing to 'error.log'.
This setup allows segregation of log messages based on severity levels across different files.





15
Logging in Python
Q: Why is it recommended to use named loggers (e.g., logging.getLogger(__name__)) instead of the root logger?

A: It allows for more granular control over logging behavior in different parts of an application.
Named loggers enable targeted configurations, such as setting different log levels or handlers for specific modules.





16
Powershell Modules
Select-Object

Definition: A cmdlet that selects specific properties of an object or set of objects.
Explanation: Often used to filter and display only the needed information. Example: Get-Module -ListAvailable | Select-Object Name, Version, Path.





17
Powershell Modules
Auto-Import

Definition: A feature in PowerShell that automatically imports a module when a cmdlet from that module is invoked.
Explanation: Starting from PowerShell 3.0, modules can be auto-imported, eliminating the need to manually run Import-Module for each module you use.





18
Powershell Modules
Scope (Installation)

Definition: Determines whether a module is installed for all users or just the current user.
Explanation: Controlled via the -Scope parameter in Install-Module. Options include CurrentUser and AllUsers.





19
Powershell Modules
Get-Module

Definition: A cmdlet that retrieves information about modules.
Explanation: Can list currently loaded modules or all available modules using parameters like -ListAvailable. Example: Get-Module -ListAvailable.





20
Powershell Modules
Format-List

Definition: A PowerShell cmdlet that formats the output as a list of properties.
Explanation: Used with other cmdlets to display detailed information. Example: Get-InstalledModule | Format-List * shows all properties of installed modules.





21
WSL + Kali Linux
WSLg (Windows Subsystem for Linux GUI)
A feature in WSL2 that allows graphical Linux applications to run natively on Windows, without requiring additional software like VNC or an X server.





22
WSL + Kali Linux
wsl with Docker
Docker can run on WSL 2, which enables you to run Linux containers directly on Windows. Docker Desktop for Windows integrates with WSL 2 to provide a seamless environment for both Docker and WSL.





23
WSL + Kali Linux
Tools for Troubleshooting GUI Apps on WSL:
xset: A command-line utility for managing X11 settings like display parameters and screen saver behavior.





24
WSL + Kali Linux
X11 (X Window System)
A graphical windowing system for Unix-like operating systems, providing the foundation for graphical user interfaces. X11 is typically used with Linux systems to handle display rendering and interaction.





25
WSL + Kali Linux
Xfwm4 (XFCE Window Manager)
The window manager for the XFCE desktop environment. It manages window placement, appearance, and focus within the XFCE session.





26
Vocab
Lacunary
adjective
SPA: LACK-yoo-nary
IPA: /ˈlækjʊnəri/

Characterized by gaps or missing portions, particularly in texts or manuscripts.
Example: The ancient manuscript was lacunary, with several sections of the text lost to time.





27
Vocab
Hieratic
adjective
SPA: hi-uh-RAT-ik
IPA: /ˌhaɪəˈrætɪk/

Relating to the simplified, cursive form of Egyptian hieroglyphs, used by priests in ancient Egypt for religious texts.
Example: The hieratic script was employed for everyday purposes in ancient Egypt, in contrast to the more elaborate hieroglyphic script.





28
Vocab
Intercalation
noun
SPA: in-ter-kay-LAY-shun
IPA: /ˌɪntəkəˈleɪʃən/

The insertion of an additional element, such as a day or month, into a calendar or text to maintain alignment or consistency.
Example: The intercalation of a leap day every four years ensures that the calendar stays synchronized with Earth's orbit.





29
Vocab
Scriptorium
noun
SPA: skrip-TOR-ee-um
IPA: /skrɪpˈtɔːrɪəm/

A room or place in medieval monasteries where manuscripts were copied, typically by hand.
Example: The scriptorium was the heart of manuscript production during the Middle Ages, where scribes worked diligently.





30
Vocab
Boustrophedonic
adjective
SPA: boo-struh-fee-DON-ik
IPA: /ˌbʊsˌtrɒfəˈdɒnɪk/

Of or relating to a style of writing in which the direction alternates from left to right on one line and right to left on the next, continuing in this manner throughout the text.
Example: The ancient script was written in a boustrophedonic manner, making it challenging to read for modern scholars.





31
Azure Functions + PP365
Azure SDK for Python
A collection of libraries provided by Microsoft to interact with Azure services using Python. The Azure SDK for Python simplifies the integration of Azure Functions with services like Azure Storage, Cosmos DB, and Azure Key Vault, providing robust and consistent APIs for developers.





32
Azure Functions + PP365
Service Bus Triggers
Triggers that activate Azure Functions in response to messages in Azure Service Bus queues or topics. Python functions with Service Bus triggers can process asynchronous messages, enabling decoupled and scalable communication between different parts of an application or between services.





33
Azure Functions + PP365
Azure Service Principal
An identity created for use with applications, hosted services, and automated tools to access Azure resources. Service principals enable secure, programmatic access to Azure services, acting as non-human users with specific permissions, essential for authenticating applications like Power Automate and Azure Functions.





34
Azure Functions + PP365
Environment Variables
Variables set in the operating environment that can be accessed by applications. In Python Azure Functions, environment variables are used to store configuration data, secrets, and connection strings securely, allowing functions to adapt to different environments without code changes.





35
Azure Functions + PP365
HTTP Triggers
A type of function trigger that activates an Azure Function in response to HTTP requests. Python Azure Functions with HTTP triggers can handle RESTful API calls, webhooks, and other HTTP-based interactions, making them suitable for building APIs and integrating with web services.





36
Open Source/GitHub
Maintainer

A person or group responsible for overseeing a repository, managing contributions, reviewing pull requests, and ensuring the project’s direction and quality.





37
Open Source/GitHub
Issue Triage

The process of reviewing and categorizing issues in the issue tracker, often involving labeling, prioritizing, and assigning tasks to contributors.





38
Open Source/GitHub
Issue Tracker

A system within a repository where bugs, feature requests, and tasks are reported, tracked, and managed by contributors and maintainers.





39
Open Source/GitHub
Virtual Environment

An isolated environment in Python that allows you to manage dependencies and packages for a project without affecting the global Python installation.





40
Open Source/GitHub
Downstream Repository

A fork or clone of an upstream repository, where contributors can make changes independently before contributing back.





41
Debugging in VS Code
1. Debugger
A tool used to inspect, control, and modify the execution of a program in order to identify and fix bugs.
2. Breakpoint
A marker set in a program that causes the execution to pause so that the developer can inspect the program’s state.





42
Debugging in VS Code
Tracepoint
Similar to a breakpoint, but instead of pausing execution, a tracepoint logs information about the execution of the program, such as variable values or function calls, without interrupting the flow.





43
Debugging in VS Code
Profiling
The process of analyzing the performance of a program, including memory usage, execution time, and function calls, to identify bottlenecks and optimize performance.





44
Debugging in VS Code
Exception Breakpoint
A breakpoint that pauses the program when a specific exception (error) is raised.





45
Debugging in VS Code
Debugger Attach
A process where the debugger attaches to a running program (either locally or remotely) without stopping it. This is useful for debugging production systems or processes that cannot be restarted.





46
Home Network Project
Front: What is Snort and how is it used in network security?

Back: Snort is an open-source network intrusion detection and prevention system (IDS/IPS). It analyzes network traffic in real-time, using predefined rules to detect malicious activities such as exploits, port scans, and unauthorized access attempts. Snort can be integrated into pfSense to enhance network security by identifying and responding to potential threats.





47
Home Network Project
Front: What is Service Mesh and how does it enhance microservices architecture?

Back: A Service Mesh is a dedicated infrastructure layer that manages service-to-service communication within a microservices architecture. It provides features like load balancing, service discovery, traffic management, security (encryption and authentication), and observability (monitoring and tracing), enhancing the reliability and efficiency of microservices interactions.





48
Home Network Project
What is the command to update and upgrade packages on a Debian-based system like Raspberry Pi OS?

bash
sudo apt update && sudo apt upgrade -y





49
Home Network Project
Front: What is TLS Termination and why is it used in reverse proxies?

Back: TLS Termination refers to the process of decrypting incoming TLS/SSL encrypted traffic at the reverse proxy level before forwarding it to backend servers. It offloads the computationally intensive decryption task from backend servers, improves performance, and allows for centralized management of SSL certificates.





50
Home Network Project
Front: What is Fail2Ban and how does it protect a network?

Back: Fail2Ban is an intrusion prevention software that monitors log files for suspicious activity, such as repeated failed login attempts. When such patterns are detected, Fail2Ban automatically updates firewall rules to temporarily or permanently ban offending IP addresses, protecting the network from brute-force attacks and unauthorized access.





51
PEP 8
Blank Lines for Separation: Use blank lines to separate top-level functions and class definitions, typically two blank lines. Within classes, use one blank line to separate methods. This separation improves code organization and readability.





52
PEP 8
One Import Per Line: Place each import statement on its own line to improve clarity and simplify version control diffs. Avoid combining multiple imports in a single line, which can make the code harder to read and maintain.





53
PEP 8
Prevent Circular Imports: Avoid scenarios where two modules depend on each other directly or indirectly. Refactor by combining modules, extracting common functionality, or using local imports within functions to defer the import until necessary.





54
PEP 8
Remove Unused Imports: Regularly clean your code by eliminating imports that are not utilized. Unused imports clutter the codebase, increase memory usage, and can lead to longer load times. Utilize linters like flake8 or pylint to identify and remove them.





55
PEP 8
Use Parentheses for Multi-Line Imports: When importing multiple objects from a module, enclose them within parentheses and list each on a separate line. This enhances readability and adheres to line length restrictions without using backslashes.





56
Azure AI Search
A search service runs one indexer job per search unit. If you need concurrent processing, make sure you have sufficient replicas. Indexers don't run in the background, so you might detect more query throttling than usual if the service is under pressure.





57
Azure AI Search
If you include a skillset, you'll need to specify output field mappings in the indexer definition. The output of a skillset is manifested internally as a tree structure referred to as an enriched document. Output field mappings allow you to select which parts of this tree to map into fields in your index.





58
Azure AI Search
Indexers don't have dedicated processing resources. Based on this, indexers' status may show as idle before running (depending on other jobs in the queue) and run times may not be predictable. Other factors define indexer performance as well, such as document size, document complexity, image analysis, among others.





59
Azure AI Search
Whether you use the REST API or an Azure SDK, the following document operations are supported for data import:
    Upload (think upsert)
    merge
    mergeOrUpload
    delete





60
Azure AI Search
You can have multiple indexers writing into the same index, and you can reuse the same data source for multiple indexers. However, an indexer can only consume one data source at a time, and can only write to a single index.





61
DNS
SRV (Service) Records
DNS records that specify the location (hostname and port) of servers for particular services within a domain. Essential for services like SIP (VoIP) or LDAP, they enable clients to discover service endpoints automatically.





62
DNS
Refresh Interval
The period following the No-Refresh Interval during which the timestamp on a DNS record can be updated. If a record is refreshed within this interval, it remains active; otherwise, it becomes eligible for scavenging.





63
DNS
Remove-DnsServerZone (PowerShell Cmdlet)
A PowerShell command used to delete an existing DNS zone from a Windows DNS Server. It allows administrators to remove obsolete or unnecessary zones efficiently through scripts or command-line operations.





64
DNS
DNS Scavenging
An automated process in Windows DNS that removes stale or outdated DNS records. It helps maintain DNS integrity by deleting records no longer valid, such as those from devices removed from the network or with changed IP addresses.





65
DNS
Forward Lookup Zones
DNS zones that translate hostnames to IP addresses. They are the most common type of DNS zones, enabling clients to resolve domain names to their corresponding IPv4 or IPv6 addresses.





66
OData
Fully qualified action and function names include a namespace or alias prefix. The Edm, odata and geo namespaces are reserved for the use of this specification.





67
OData
Metadata in OData describes the structure, data types, relationships, and other aspects of the data model. The $metadata endpoint provides the service’s data model and schema definitions using CSDL, essential for understanding available entities and their relationships.





68
OData
Annotations provide additional metadata about entities, properties, or relationships in the OData model. They enrich the data with information like display names, validation rules, and formatting instructions, enhancing both data semantics and client-side interactions.





69
OData
An ETag is a mechanism for concurrency control in OData, representing a version identifier for a resource. It ensures that updates or deletions are performed on the correct version of a record, preventing conflicts and maintaining data integrity.





70
OData
IsSideEffecting Annotation (Org.OData.Core.V1.IsSideEffecting)

Definition: An OData annotation that indicates an operation (action or function) may cause data changes on the server.
Context: Useful for clients to understand that the request cannot be treated as purely read-only or cached safely.





71
IW Migration
Linked Table Manager (in Access)
A feature in MS Access that helps you manage and refresh connections to external data sources. If a database is split, this tool reconnects front-end objects to back-end tables, ensuring smooth data retrieval and updates.





72
IW Migration
Transaction Handling (SQL Server)
A mechanism to ensure that a series of database operations either all succeed or all fail, maintaining data integrity. Using commands like BEGIN TRAN, COMMIT, and ROLLBACK, developers control atomic operations and safeguard against partial updates.





73
IW Migration
Check Constraints and Computed Columns (SQL Server)
Check constraints enforce custom rules on column values, ensuring data integrity at the database level. Computed columns derive their values from an expression referencing other columns, reducing redundant storage and improving data consistency.





74
IW Migration
Linked Server (SQL Server)
A configuration that allows SQL Server to run queries against remote data sources as if they were local tables. This enables federated queries, joining data across different servers and even different database platforms.





75
IW Migration
Linked Table Manager (Access)
A utility in Access to manage external data connections. It allows refreshing, updating, or changing the source of linked tables, ensuring that front-end objects always correctly reference tables in the back-end or external databases.





76
Audit Report Tracker (Sharepoint List)
Column (SharePoint Column)
Definition: A field in a SharePoint list that holds a specific type of data (e.g., text, number, date, choice).
Context: Columns define the structure of the data within a SharePoint list or library.





77
Audit Report Tracker (Sharepoint List)
Power Automate (Flow) Owner
Definition: A user who has full control over a Flow, including the ability to edit, run, and manage its settings.
Context: Necessary to inspect and modify automation workflows in Power Automate that are tied to SharePoint lists.





78
Audit Report Tracker (Sharepoint List)
Item (SharePoint List Item)
Definition: A single entry in a SharePoint list, containing values for each of the list’s columns.
Context: Each item typically represents a single entity, such as a task or document.





79
Audit Report Tracker (Sharepoint List)
List Administrator
Definition: A user with permissions to manage a specific SharePoint list, including adding columns, modifying views, and setting list-specific permissions.
Context: Has permissions to edit and configure a specific list within a site.





80
Audit Report Tracker (Sharepoint List)
List Columns Endpoint (for getting column information in a SharePoint list):

Endpoint: GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/columns
Description: Retrieves information about the columns in a specified list.





81
FSLogix
Cloud Cache uses storage providers based on the order of entries in CCDLocations.
Storage providers should be listed in order of proximity, then preference.
Only one (1) provider is used when data is hydrated from the storage provider.





82
FSLogix
Q: What is the main difference between FSLogix Profile Containers and traditional roaming profiles?
A: FSLogix uses VHDX containers to store user profiles, ensuring portability and faster logons, while traditional roaming profiles can become fragmented and inconsistent across multiple virtual machines.





83
FSLogix
During a user's session when the connection to any storage provider becomes unhealthy, FSLogix queues up all the changes and then flushes them to the providers when they return to a healthy state.





84
FSLogix
On a lazy asynchronous operation, Cloud Cache flushes the changes to all storage providers simultaneously as each provider is flushed on its own thread. FSLogix doesn't throttle this operation and utilizes as much throughput as the system will allow.





85
FSLogix
Q: What is the purpose of the Office 365 Container in FSLogix?
A: The Office 365 Container isolates and stores Office-specific data (like Outlook cache, OneDrive files, and Teams settings), improving performance and reducing load times for Office apps in virtual desktop environments.





86
Azure Functions + Visual Studio
An Azure Function is implemented as a static class (.NET). The class provides a static, asynchronous method named Run, which acts as the entry point for the class. The parameters passed to the Run method provide the context for the trigger. If it's an HTTP trigger, the function receives an HttpRequest object.





87
Azure Functions + Visual Studio
ASP.NET includes a variety of built-in security features such as request validation, input sanitization, SQL injection prevention, and protection against cross-site scripting (XSS) and cross-site request forgery (CSRF). HTTPS and encryption are also supported for secure communication.





88
Azure Functions + Visual Studio
ASP.NET Razor syntax is a streamlined way to integrate C# code into HTML pages. Razor allows developers to write dynamic web pages by combining HTML and server-side logic seamlessly.





89
Azure Functions + Visual Studio
The ASP.NET MVC architecture is based on the Model-View-Controller pattern, which separates the application into three components: Models (data), Views (UI), and Controllers (logic), providing a clean separation of concerns for better maintainability.





90
Azure Functions + Visual Studio
ASP.NET supports caching to improve performance by reducing database calls and loading times. You can cache data at different levels, such as in-memory caching, distributed caching, or output caching, to increase the responsiveness of your application.





91
Email Auth and Security
DMARC (Domain-based Message Authentication, Reporting & Conformance)

Builds on SPF and DKIM to provide domain owners with policies for handling unauthenticated emails.
Enables reporting on email authentication status and issues.
Protects against unauthorized use of a domain in email communications.





92
Email Auth and Security
Email Authentication Alignment

Ensuring that SPF and DKIM align with the domain specified in the email's "From" header.
Critical for DMARC to function correctly.
Provides consistent authentication results and improves email deliverability.





93
Email Auth and Security
Identifier Alignment

Ensuring that the domains used in SPF and DKIM authentication align with the domain in the email's "From" header.
Critical for DMARC to function correctly.
Can be achieved through relaxed alignment (subdomains are allowed) or strict alignment (exact match required).





94
Email Auth and Security
MUA (Mail User Agent)

An email client used by end-users to send, receive, and manage their emails.
Provides the interface for users to interact with their email accounts.
Examples include Microsoft Outlook, Mozilla Thunderbird, and Gmail.





95
Email Auth and Security
p=quarantine

A DMARC policy action.
Instructs receiving mail servers to treat unauthenticated emails with suspicion.
Typically places such emails in the spam or junk folder.





96
SharePoint
SharePoint REST API adheres to REST (Representational State Transfer) principles, which means it uses standard HTTP methods (GET, POST, PUT, DELETE) to perform operations on resources identified by URLs.





97
SharePoint
The __metadata property specifies the type information of the item being created or updated. This helps SharePoint understand the schema of the item, ensuring that the correct fields and data types are used.





98
SharePoint
The Content-Type header specifies the media type of the resource being sent to the server. When uploading a file, setting the correct Content-Type ensures that SharePoint correctly interprets the file type. For example, for a Word document, you might use application/vnd.openxmlformats-officedocument.wordprocessingml.document.





99
SharePoint
To retrieve the actual content of the file, you append /$value to the REST API endpoint. This instructs SharePoint to return the binary content of the file instead of its metadata.

GET https://contoso.sharepoint.com/sites/YourSite/_api/web/GetFileByServerRelativeUrl('/Documents/Report.docx')/$value
Headers:
  Accept: application/octet-stream





100
SharePoint
Uploading large files (typically over 4MB) requires a chunked upload approach. SharePoint REST API provides methods to upload files in slices or chunks, which helps manage large file sizes efficiently and avoids timeouts or memory issues.





101
Azure Functions
Reasons to choose WebJobs over Azure Functions

You have specific customizations that you want to make to the JobHost that aren't supported by Azure Functions.
You want to control your app's retry policies.
WebJobs only supports C# on Microsoft Windows.





102
Azure Functions
Fan out/fan in: This pattern runs multiple functions in parallel and waits for all the functions to finish. You can aggregate the results of the parallel executions or use them to compute a final result.





103
Azure Functions
2. Suppose your Azure Function has a blob trigger associated with it and you want it to execute only when png images are uploaded. Which of the following blob trigger Path values should you use? 

samples-workitems/{name}.png
The Path tells the blob trigger where it should monitor for changes, and if there are any filters applied. Adding a file extension to the Path specifies that uploaded files must have that file extension in order for the trigger to invoke the function.





104
Azure Functions
There are two types of managed identities:

System-assigned. Some Azure resources, such as virtual machines allow you to enable a managed identity directly on the resource.
User-assigned. You may also create a managed identity as a standalone Azure resource. You can create a user-assigned managed identity and assign it to one or more Azure Resources.





105
Azure Functions
You can use three durable function types: Client, Orchestrator, and Activity.





106
Terraform
Expressions and Operators:
Definition: Terraform uses expressions to compute values. These support arithmetic operations, string concatenation, and comparisons.
Usage: Allows dynamic configuration based on variable values or conditions.

Example:


"${var.a + var.b}"
"${var.env == "prod" ? "Production" : "Staging"}"





107
Terraform
Variable Declaration:
Use the variable block to declare variables. For example:

variable "env" {
  description = "The deployment environment"
  type        = string
}





108
Terraform
You can create and use Terraform modules that codify the standards for deploying and managing services in your organization, allowing teams to efficiently deploy services in compliance with your organization’s practices.





109
Terraform
Terraform Console:
Definition: An interactive command-line tool that lets you experiment with expressions and inspect your current Terraform state.
Usage: Run terraform console to evaluate expressions, test functions, or debug variable values interactively.





110
Terraform
Variable Interpolation:
The process of embedding variable values into strings. This is done using the ${} syntax inside double quotes.
Example:
"The environment is ${var.env}"





111
Todd Ideas
In Azure AI Document Intelligence, although prebuilt models deliver robust extraction out-of-the-box, they offer customization options such as field mapping and configuration adjustments, enabling developers to fine-tune output formats to align with unique business requirements.





112
Todd Ideas
In Azure AI Document Intelligence, all customers in the same region share the temporary storage. The customer’s data is logically isolated from other customers with their Azure subscription and API credentials.





113
Todd Ideas
In Azure AI Document Intelligence, you can integrate with Azure Functions to trigger document processing automatically upon upload, using serverless computing for cost-effective, event-driven workflows that streamline data extraction and real-time business logic.





114
Todd Ideas
In Azure AI Document Intelligence, the incoming data is processed in the same region where the Document Intelligence resource was created. When you submit your documents to a Document Intelligence operation, it starts the process of analyzing the document to extract all text and identify structure and key values in a document.





115
Todd Ideas
In Azure AI Document Intelligence, The results from prebuilt models come as JSON payloads with key-value pairs that include both the extracted data and confidence scores. Use confidence thresholds to filter out less reliable data, and design your application logic to accommodate any missing or unexpected fields.





116
Powershell
error during connect
Indicates the Docker CLI failed to connect to the Docker daemon, often due to the service not running or incorrect configuration.

//./pipe/dockerDesktopLinuxEngine
Refers to the Windows named pipe used for communicating with Docker Desktop's Linux container engine. Errors suggest the service isn’t available.





117
Powershell
az
The Azure CLI command-line tool for managing Azure resources like VMs, storage, and networks. It's cross-platform and integrates with scripting tools like PowerShell.





118
Powershell
Get-Service
Displays the status of Windows services. Useful for checking if a service (e.g., Docker Desktop) is running, stopped, or paused.





119
Powershell
-Force
Overrides warnings or confirmation prompts, ensuring the command proceeds without manual intervention. Common in scripting for reliability.





120
Powershell
NUL
A virtual file in Windows that discards written data. Commonly used in Command Prompt, NOT POWERSHELL to create empty files (e.g., copy NUL filename).





121
JavaScript Concepts
Bootstrap: A popular CSS framework with JavaScript components, facilitating responsive design and consistent styling across web applications.





122
JavaScript Concepts
Code Splitting: Breaking down code into smaller bundles that can be loaded on demand, reducing the amount of code loaded initially.





123
JavaScript Concepts
RESTful APIs: Architectural style for designing networked applications, using HTTP requests to access and manipulate data through standard endpoints.





124
JavaScript Concepts
Cypress: An end-to-end testing framework focused on improving developer experience with real-time reloading and debugging capabilities.





125
JavaScript Concepts
CI/CD Pipelines: Automated workflows for Continuous Integration and Continuous Deployment, using tools like GitHub Actions, Travis CI, and CircleCI to streamline development.





126
PnP Powershell
Token Caching
Stores OAuth tokens locally to reduce the need for repeated authentication requests. Enhances script performance and reduces latency in API interactions.





127
PnP Powershell
Client ID (client_id)
A unique identifier assigned to an Azure AD application upon registration. Used to identify the application during authentication processes.





128
PnP Powershell
Get-PnPGroup (PnP.PowerShell)
Retrieves information about SharePoint groups within a site. Assists in managing permissions and user access by programmatically handling group memberships.





129
PnP Powershell
New-PnPList (PnP.PowerShell)
Creates a new SharePoint list within a site. Supports specifying list templates, columns, and settings, facilitating automated list management.





130
PnP Powershell
Remove-PnPFile (PnP.PowerShell)
Deletes a specified file from a SharePoint library or folder. Useful for automating cleanup tasks or managing outdated documents programmatically.





131
Logging in Python
Q: What is the default formatter format string if none is specified in logging.basicConfig()?

A: '%(levelname)s:%(name)s:%(message)s'
This default format includes the log level, logger name, and the log message.





132
Logging in Python
Q: What is the primary purpose of TimedRotatingFileHandler from the logging.handlers module?

A: To rotate log files at specific timed intervals, such as daily or hourly (when='midnight').
This ensures that log files are segmented based on time, facilitating organized log management.





133
Logging in Python
Q: How do you add a custom filter to a logger or handler in Python's logging module?

A: Use the addFilter() method with a filter instance, e.g., logger.addFilter(SpecialFilter()).
This allows selective logging based on custom criteria defined within the filter.





134
Logging in Python
Q: How can you configure Python's logging to output messages to a file instead of the console?

A: Use FileHandler from the logging module with a filename like 'app.log'.
This directs log messages to the specified file instead of the standard console output.





135
Logging in Python
Q: Which function is used to log a message with level WARNING in Python's logging module?

A: logging.warning()
This function logs a message with a severity level of WARNING.





136
Powershell Modules
Get-Command

Definition: A cmdlet that retrieves all commands available in PowerShell, including those from modules.
Explanation: Can be filtered to show commands from a specific module using the -Module parameter. Example: Get-Command -Module Az.





137
Powershell Modules
Directory Path for Modules

Definition: The file system locations where PowerShell modules are stored.
Explanation: Common directories include C:\Program Files\PowerShell\Modules for all users and C:\Users\<Username>\Documents\PowerShell\Modules for individual users.





138
Powershell Modules
Import-Module

Definition: A cmdlet used to load a PowerShell module into the current session.
Explanation: Makes the module's cmdlets and functions available for use. Example: Import-Module -Name Az.





139
Powershell Modules
Module Manifest

Definition: See Module Manifest (.psd1) above.
Explanation: Provides metadata and configuration for modules, ensuring they load correctly with specified dependencies and exported commands.





140
Powershell Modules
Get-InstalledModule

Definition: A cmdlet that retrieves modules installed on the system.
Explanation: Useful for managing and updating modules. Example: Get-InstalledModule | Update-Module updates all installed modules.





141
WSL + Kali Linux
WSL Performance Tuning
For better performance, particularly when running heavier workloads or containers, use a .wslconfig file to adjust resource allocation for WSL 2 (memory, CPU, etc.).
Example .wslconfig:
makefile
Copy code
[wsl2]
memory=4GB
processors=2





142
WSL + Kali Linux
12. wsl --mount
A feature introduced with WSL 2, this allows you to mount physical disks in WSL as Linux file systems. Useful for accessing raw disks like external drives directly within WSL.
13. wsl --no-launch
Prevents WSL from automatically launching the default Linux shell after a distribution is installed.





143
WSL + Kali Linux
WSL Networking
Accessing Windows Network Services from WSL: WSL allows you to access Windows network services and vice versa. For example, you can access a Windows-hosted HTTP server in WSL at localhost:port.
wsl.exe Networking: When WSL 2 is in use, it runs a virtualized network adapter with a different IP address than the host machine, but WSL 2 allows seamless access to services running on the host.





144
WSL + Kali Linux
wsl --import <distro> <install-location> <tarball>
Imports a WSL distribution from a .tar file into the specified install location. This is useful for migrating or creating a custom Linux environment.





145
WSL + Kali Linux
wsl Command
The primary command-line interface for interacting with WSL instances. It is used to manage and run Linux distributions on Windows.
Common options:
wsl --set-default <distro>: Sets the default Linux distribution for running wsl commands.
wsl --terminate <distro>: Terminates a running WSL distribution.
wsl --shutdown: Stops all running WSL instances.





146
Vocab
Paleography
noun
SPA: pay-lee-AW-gruh-fee
IPA: /ˌpæliˈɒɡrəfi/

The study of ancient or historical handwriting, particularly as it pertains to deciphering, reading, and dating manuscripts.
Example: The paleography of medieval texts helps historians understand the evolution of written language.





147
Vocab
Grapheme
noun
SPA: GRAP-heem
IPA: /ˈɡræfiːm/

The smallest unit of written language that carries meaning, such as a letter, a numeral, or a punctuation mark.
Example: The letter "a" in the alphabet is a grapheme that represents a specific phoneme in many languages.





148
Vocab
Anacoluthon
noun
SPA: an-uh-koh-LOO-thon
IPA: /ˌænəkəˈluːθɒn/

A grammatical construction in which a sentence begins in one way but ends in another, often disrupting the expected syntax or logical sequence.
Example: His speech was full of anacoluthons, making it difficult to follow his intended argument.





149
Vocab
Palimpsest
noun
SPA: PAL-imps-est
IPA: /ˈpælɪmpsɛst/

A manuscript or document that has been written on, scraped off, and reused, often revealing traces of previous writings beneath the surface.
Example: Archaeologists discovered an ancient palimpsest where earlier texts were still legible under the more recent writing.





150
Vocab
Logogram
noun
SPA: LOG-oh-gram
IPA: /ˈləʊɡəʊɡræm/

A written character or symbol that represents a word or morpheme, rather than a sound, commonly found in languages like Chinese.
Example: Chinese characters are logograms, each representing a concept or word rather than a phonetic sound.





151
Azure Functions + PP365
Dynamic Content
Data dynamically pulled from triggers or previous actions in Power Automate flows. Dynamic content allows flows to be flexible and responsive to varying input data, enabling customized and context-aware operations when interacting with services like Azure Functions and Dataverse.





152
Azure Functions + PP365
local.settings.json
A configuration file used during local development of Azure Functions. It stores environment variables, connection strings, and other settings required to run functions locally. This file is not deployed to Azure, ensuring that sensitive information remains secure during development.





153
Azure Functions + PP365
Function App Plan
The hosting plan for Azure Functions that determines compute resources, scaling behavior, and pricing. Python Azure Functions can be hosted on different plans, such as Consumption Plans for automatic scaling or Premium Plans for enhanced performance and features, allowing developers to choose based on application needs.





154
Azure Functions + PP365
Client Credentials Grant
An OAuth 2.0 authentication flow where an application uses its own credentials (client ID and secret) to obtain an access token. This grant type is used for server-to-server interactions, allowing applications like Azure Functions to authenticate with Azure AD without user involvement.





155
Azure Functions + PP365
Function App Settings
Configuration settings for an Azure Function App that control its behavior and integration with other services. For Python Azure Functions, settings can include environment variables, connection strings, and runtime configurations, enabling customization and secure management of function properties.





156
Open Source/GitHub
GitHub Actions

A feature on GitHub that allows automation of workflows, such as running tests or deploying code, in response to events like pull requests.





157
Open Source/GitHub
Changelog

A document that records all notable changes made to a project, including new features, bug fixes, and updates, providing transparency and history for users and contributors.





158
Open Source/GitHub
Contributor

An individual who contributes code, documentation, or other resources to an open source project, helping to improve and maintain the project’s quality.





159
Open Source/GitHub
Code of Conduct

Guidelines that outline expected behavior and interactions within a project’s community, promoting a respectful and inclusive environment.





160
Open Source/GitHub
CONTRIBUTING.md

A markdown file that outlines the process and guidelines for contributing to a project, including coding standards, commit messages, and pull request procedures.





161
Debugging in VS Code
Step Into
A debugging feature that allows you to enter a function call to examine its internal execution line by line.





162
Debugging in VS Code
Hot Reloading
A feature in some debuggers and IDEs that allows you to modify and reload parts of your code while the program is running, enabling you to see the changes in real time without restarting the application.





163
Debugging in VS Code
Reverse Debugging
A debugging technique where you can move backward through the program’s execution to examine the program's state before an issue occurred, often helpful for tracking down bugs that involve complex states.





164
Debugging in VS Code
Watch Expression
A tool in a debugger that allows you to monitor the value of a specific variable or expression during execution.





165
Debugging in VS Code
Code Coverage
The process of determining which parts of your code have been executed during testing or debugging, helping to identify untested areas and ensure comprehensive testing.





166
Home Network Project
Front: What is Docker Swarm and how does it differ from Kubernetes?

Back: Docker Swarm is Docker’s native clustering and orchestration tool for managing a group of Docker engines (nodes) as a single virtual system. It simplifies deploying and managing containerized applications across multiple hosts. Kubernetes, on the other hand, is a more feature-rich and widely adopted container orchestration platform developed by Google, offering advanced features like automated scaling, rolling updates, and self-healing, but with a steeper learning curve.





167
Home Network Project
Front: What is Prometheus and what is its role in network monitoring?

Back: Prometheus is an open-source monitoring and alerting toolkit designed for reliability and scalability. It collects and stores metrics from various services and systems, allowing users to query and analyze performance data to monitor the health and performance of their network and applications.





168
Home Network Project
Front: What is Bandwidth and how does it differ from Throughput?

Back:

Bandwidth: The maximum rate of data transfer across a network path, typically measured in Mbps or Gbps. It represents the network's capacity.
Throughput: The actual rate of successful data transfer achieved, often lower than the bandwidth due to factors like network congestion and protocol overhead.





169
Home Network Project
Front: Explain the difference between a Docker Image and a Docker Container.

Back:
Docker Image: A read-only template that contains the application and all its dependencies required to run it. Images are built from Dockerfiles and serve as the blueprint for containers.
Docker Container: A runnable instance of a Docker image. Containers are created from images and can be started, stopped, moved, and deleted independently.





170
Home Network Project
Front: How does Pi-hole utilize DNS Sinkholing to block ads?

Back: Pi-hole intercepts DNS queries for domains listed in its blocklists. Instead of resolving these domains to their legitimate IP addresses, Pi-hole returns a non-routable IP address (e.g., 0.0.0.0), preventing the ad content from loading on the client devices.





171
PEP 8
Spaces After Commas, Colons, and Semicolons: Insert a single space after commas, colons, and semicolons to separate elements and enhance readability. This applies to lists, function arguments, slicing, and control structures.

python
def func(a, b, c):
    pass





172
PEP 8
Organize Imports by Group: Group import statements into three categories separated by blank lines: Standard Library Imports, Third-Party Imports, and Local Application Imports. This clear separation helps in quickly identifying the source of each import.





173
PEP 8
Prefer Absolute Imports: Use full paths for imports starting from the project's root rather than relative imports. Absolute imports are more readable, less error-prone, and clearly indicate the module's location within the project structure.





174
PEP 8
Use __all__ to Define Public API: In your modules, define the __all__ list to explicitly specify which objects are public and should be imported when using from module import *. This controls the module's public interface and prevents unintended namespace pollution.





175
PEP 8
Automate Import Management: Employ tools such as isort to automatically sort and organize your import statements according to PEP 8 guidelines. Integrate these tools with your development workflow to maintain consistent and error-free import structures across your projects.





176
Azure AI Search
Depending on the data source, the indexer will try different operations to extract potentially indexable content:

When the document is a file with embedded images, such as a PDF, the indexer extracts text, images, and metadata. Indexers can open files from Azure Blob Storage, Azure Data Lake Storage Gen2, and SharePoint.





177
Azure AI Search
Indexers accept flattened row sets, such as a table or view, or items in a container or folder. In most cases, it creates one search document per row, record, or item.





178
Azure AI Search
After the first indexer run, you can rerun it on demand or set up a schedule.

You can monitor indexer status in the Azure portal or through Get Indexer Status API. You should also run queries on the index to verify the result is what you expected.





179
Azure AI Search
If AI enrichment or integrated vectorization are solution requirements, you must use the pull model (indexers) to load an index. Skillsets are attached to indexers and don't run independently.





180
Azure AI Search
A quick way to perform a preliminary check on the document upload is to use Search explorer in the Azure portal.
The explorer lets you query an index without having to write any code. The search experience is based on default settings, such as the simple syntax and default searchMode query parameter. Results are returned in JSON so that you can inspect the entire document.





181
DNS
Stub Zone
A DNS zone that contains only essential information about another zone's authoritative DNS servers. It facilitates efficient DNS resolution by allowing a DNS server to know where to forward queries for that specific zone without storing all DNS records.





182
DNS
Active Directory-Integrated Zones
DNS zones that store their data within the Active Directory database. This integration allows for secure dynamic updates and automatic replication of DNS data across all domain controllers, enhancing security and redundancy.





183
DNS
TSIG (Transaction SIGnature)
A security mechanism used to authenticate DNS messages, ensuring that zone transfers and other DNS communications are from trusted sources. TSIG uses shared secret keys and cryptographic signatures to verify the authenticity of DNS transactions.





184
DNS
DNS Manager
A graphical administrative tool in Windows Server used to manage DNS settings and zones. DNS Manager provides interfaces for creating and modifying DNS records, configuring zone properties, setting up forwarders, and implementing security measures.





185
DNS
Securing Zone Transfers
Measures taken to protect DNS zone data during transfers between DNS servers. This includes restricting transfers to authorized IP addresses and using security protocols like TSIG or IPsec to authenticate and encrypt the data, ensuring integrity and confidentiality.





186
OData
Namespaces

Definition: Unique identifiers (like MyCompany.CRM) that group related schemas and prevent naming conflicts in OData models.
Context: Used to differentiate entities, actions, and functions that may share common names but serve different domains or versions.





187
OData
OData-defined system query options are optionally prefixed with "$". Services may support additional custom query options not defined in the OData specification, but they MUST NOT begin with the "$" or "@" character and MUST NOT conflict with any OData-defined system query options defined in the OData version supported by the service.





188
OData
Batch Requests
- Definition: OData feature allowing multiple operations (queries/updates) to be combined into a single HTTP request.
- Context: Improves efficiency and reduces network overhead.





189
OData
Functions MUST NOT have side-effects. Functions can be invoked from a URL that addresses a resource or within an expression to a $filter or $orderby system query option.





190
OData
Instance annotations can be used to define additional information associated with a particular result, entity, property, or error; for example whether a property is read-only for a particular instance.





191
IW Migration
Database Backup and Restore (SSMS)
Built-in wizards and features in SQL Server Management Studio to safeguard data. They allow administrators to create full, differential, or transaction log backups and restore databases to a previous state, ensuring data recovery after failures.





192
IW Migration
VBA Modules (Access)
Visual Basic for Applications code libraries integrated within Access. Modules let developers write custom functions, event handlers, and business logic to enhance functionality beyond what macros offer, enabling more advanced data manipulation and validation.





193
IW Migration
SSIS (SQL Server Integration Services)
A platform for building enterprise-level data integration, transformation, and migration workflows. While not directly in SSMS, SSIS packages can orchestrate complex ETL operations, complementing Access-to-SQL-Server migrations and ongoing data maintenance.





194
IW Migration
SSMS Query Editor
A text-based interface in SQL Server Management Studio where you can write, run, and optimize SQL queries. It supports syntax highlighting, IntelliSense, and execution plans, helping users test logic, retrieve data, and troubleshoot issues efficiently.





195
IW Migration
Execution Plans (SQL Server)
Visual or textual representations of how the SQL Engine executes queries. They identify steps taken—like table scans, index seeks, or joins—helping developers and DBAs optimize performance, tune queries, and refine indexing strategies.





196
Audit Report Tracker (Sharepoint List)
Site Collection Administrator
Definition: A user with full control over a SharePoint site collection, including managing permissions, lists, libraries, and settings.
Context: Required to access and modify the structure, permissions, and content of a SharePoint site and its associated lists.





197
Audit Report Tracker (Sharepoint List)
Create List Item (for creating a new item in a SharePoint list):

Endpoint: POST https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/items
Description: Adds a new item to a specified SharePoint list.





198
Audit Report Tracker (Sharepoint List)
View (SharePoint View)
Definition: A pre-defined display of list data, which can filter, sort, and group information in a specific way.
Context: Views can be customized to show only specific columns, items, or data based on user needs.





199
Audit Report Tracker (Sharepoint List)
Permissions (SharePoint Permissions)
Definition: Settings that control what users can and cannot do in SharePoint (e.g., View, Edit, Delete).
Context: Permissions can be set at various levels such as the site, list, or item level.





200
Audit Report Tracker (Sharepoint List)
List Views Endpoint (for getting views in a SharePoint list):

Endpoint: GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/views
Description: Retrieves the views available in a specified SharePoint list.





201
FSLogix
Q: Where are FSLogix Profile Containers typically stored in Azure Virtual Desktop environments?
A: FSLogix Profile Containers are typically stored in Azure Files or network shares (SMB share) to allow consistent access across different virtual desktop sessions.





202
FSLogix
When the local cache doesn't contain the data requested by the file system, Cloud Cache hydrates (reads and copies) the data from 1 of the remote storage providers to the local cache. This operation is also part of the sign in process when populating the local cache for the user's profile.





203
FSLogix
Q: What happens to a FSLogix Profile Container when a user logs off?
A: When a user logs off, the changes made to the profile are saved back into the Profile Container (VHDX file), ensuring that all settings and data are retained for the next session.





204
FSLogix
A full VHD(x) clone is performed when Cloud Cache determines, at sign in, that a storage provider isn't at the same sequence. During this operation, all pending writes are kept in the local cache until all storage providers are at the same sequence. Once complete, the flush operation begins sending new data to the storage providers.





205
FSLogix
Cloud Cache uses the concept of a proxy file, represented as Profile_%username%.vhd though it isn't a true VHD file. The proxy file is used as a means to collect and process all I/O writes destined for the local cache. The I/O writes are buffered in memory and tracked via the proxy file before they're written out as block-level cache objects in the cache directory.





206
Azure Functions + Visual Studio
ASP.NET provides comprehensive authentication and authorization mechanisms, such as ASP.NET Identity, for managing users and roles. It supports external authentication providers like Google and Facebook, allowing you to integrate them into your application seamlessly.





207
Azure Functions + Visual Studio
ASP.NET uses a flexible routing system to map URLs to controllers and actions in ASP.NET MVC or ASP.NET Web API applications. This routing system supports custom URL patterns and simplifies URL management.





208
Azure Functions + Visual Studio
ASP.NET Web Forms is an older way to build web applications, focusing on drag-and-drop components and less code, while ASP.NET MVC offers greater flexibility, control, and a more maintainable approach to building web applications.





209
Azure Functions + Visual Studio
ASP.NET Core provides built-in Dependency Injection (DI) support, enabling you to manage dependencies in your application. This makes your code more modular, testable, and easier to maintain.





210
Azure Functions + Visual Studio
In all cases, a function is passed an ILogger parameter. The function can use this parameter to write log messages, which the function app writes to storage for later analysis.





211
Email Auth and Security
SMTP (Simple Mail Transfer Protocol)

The standard protocol used for sending emails across the internet.
Facilitates the transmission of email messages from senders to recipients via mail servers.
Includes commands like HELO/EHLO, MAIL FROM, RCPT TO, DATA, and QUIT.





212
Email Auth and Security
PGP (Pretty Good Privacy)

A data encryption and decryption program that provides cryptographic privacy and authentication.
Used for securing emails through encryption and digital signatures.
Combines symmetric and asymmetric encryption for robust security.





213
Email Auth and Security
Feedback Loops (FBL)

Mechanisms by which email service providers notify senders about spam complaints from recipients.
Allow senders to monitor and address spam-related issues, improving sender reputation and email deliverability.
Implemented through services like Return Path and Feedback Loop (FBL) agreements with ISPs.





214
Email Auth and Security
p=none

A DMARC policy action.
Requests no specific action be taken on unauthenticated emails.
Used for monitoring and gathering data without affecting email delivery.





215
Email Auth and Security
Aggregate Reports

Summary reports sent periodically (usually daily) to domain owners detailing email authentication results.
Provide insights into SPF and DKIM alignment and the overall effectiveness of DMARC policies.
Typically formatted in XML, containing data on email sources, authentication outcomes, and policy actions.





216
SharePoint
Which REST API endpoint would you use to check if a file named "Report.docx" exists in the "Documents" library of a SharePoint site?

/_api/web/GetFolderByServerRelativeUrl('/Documents')/Files('Report.docx')





217
SharePoint
How can you retrieve the metadata of a specific file, including its properties, using the SharePoint REST API?

GET /_api/web/GetFileByServerRelativeUrl('/Documents/Report.docx')?$expand=ListItemAllFields





218
SharePoint
Application Permissions (App-Only)
Definition: Permissions granted directly to the application, without user context. The app operates independently of any user.
Use Case: Ideal for background services, daemons, or automated scripts that need to run without user interaction.
Authentication Flow: Utilizes the Client Credentials Flow with client ID and client secret or certificate.





219
SharePoint
Delegated Permissions
Definition: Permissions granted to an application on behalf of a user. The app acts as the user and can only perform actions that the user is permitted to do.
Use Case: Suitable for scenarios where a user is present and can interactively sign in, such as desktop applications or web apps with user interfaces.
Authentication Flow: Typically involves interactive authentication methods like the Authorization Code Flow or Device Code Flow





220
SharePoint
For more advanced scenarios or to leverage modern authentication libraries, you can use the Microsoft Authentication Library (MSAL) in PowerShell. This approach provides enhanced security features and easier token management.

a. Install MSAL.PS Module
powershell
> Install-Module -Name MSAL.PS -Scope CurrentUser





221
Azure Functions
Managed identities for Azure resources is the new name for the service formerly known as Managed Service Identity (MSI).





222
Azure Functions
Activity functions are the basic units of work in a Durable Functions orchestration. An activity function contains the actual work performed by the tasks being orchestrated.





223
Azure Functions
2. Which of the following best describes the role of the Orchestrator function in a workflow? 
The Orchestrator Function is written in code. The function is used for describing how actions are executed and the order in which actions are executed.





224
Azure Functions
The name of the system-assigned service principal is always the same as the name of the Azure resource it's created for. For a deployment slot, the name of its system-assigned identity is <app-name>/slots/<slot-name>.





225
Azure Functions
Here are some of the benefits of using managed identities:

You don't need to manage credentials. Credentials aren’t even accessible to you.
You can use managed identities to authenticate to any resource that supports Microsoft Entra authentication, including your own applications.
Managed identities can be used at no extra cost.





226
Terraform
At a large organization, your centralized operations team may get many repetitive infrastructure requests. You can use Terraform to build a "self-serve" infrastructure model that lets product teams manage their own infrastructure independently.





227
Terraform
Debugging with TF_LOG:

Definition: Setting the TF_LOG environment variable enables detailed logging for troubleshooting.
Usage: Helps trace issues during plan or apply phases by providing verbose output.

Example:
export TF_LOG=DEBUG





228
Terraform
Ternary Operator (Conditional Expression):
A shorthand for conditional logic in interpolation.

Syntax:
${condition ? "true_value" : "false_value"}

Example:
${var.env == "prod" ? "Production" : "Non-production"}





229
Terraform
Provisioning infrastructure across multiple clouds increases fault-tolerance, allowing for more graceful recovery from cloud provider outages. However, multi-cloud deployments add complexity because each provider has its own interfaces, tools, and workflows. Terraform lets you use the same workflow to manage multiple providers and handle cross-cloud dependencies.





230
Terraform
Configuration Blocks:
These are the building blocks of Terraform code, such as resource, module, provider, and output blocks.





231
Todd Ideas
In Azure AI Document Intelligence, Prebuilt models enable you to add intelligent document processing to your apps and flows without having to train and build your own models.
Check | Extract relevant information from checks.
Credit card | Extract payment card information.
Invoice | Extract customer and vendor details.
Receipt | Extract sales transaction details.





232
Todd Ideas
In Azure AI Document Intelligence, document analysis (general extraction) models enable text extraction from forms and documents and return structured business-ready content ready for your organization's action, use, or development.

Read | Extract printed and handwritten text.
Layout | Extract text, tables, and document structure.





233
Todd Ideas
The most common way to authenticate access to Document Intelligence is by using the customer's Document Intelligence API key. Each request to the service URL must include an authentication header. This header passes along an API key (or token if applicable), which is used to validate your subscription for a service or group of services.





234
Todd Ideas
Connect Document Intelligence via REST APIs with external systems like CRM, ERP, or custom applications, facilitating real-time data exchange and business insights across diverse platforms in your technology ecosystem.





235
Todd Ideas
In Azure AI Document Intelligence, the service’s performance depends heavily on the quality of input documents. Ensure your documents are high resolution, correctly oriented, and preprocessed (e.g., noise reduction, skew correction) to enhance data extraction accuracy.





236
JavaScript Concepts
Template Literals: Enhanced string syntax using backticks, allowing embedded expressions and multi-line strings for better readability.





237
JavaScript Concepts
Component-Based Architecture: Building applications by encapsulating functionality into independent, reusable components, commonly used in frontend frameworks.





238
JavaScript Concepts
Next.js: A React framework for server-side rendering and static site generation, enhancing performance and SEO for React applications.





239
JavaScript Concepts
React: A library for building user interfaces using a component-based architecture, featuring JSX syntax and a virtual DOM for efficient rendering.





240
JavaScript Concepts
Webpack: A powerful module bundler that compiles JavaScript modules into a single bundle, optimizing assets for production.





241
PnP Powershell
Invoke-RestMethod Parameters
Key parameters include -Method (HTTP method), -Uri (API endpoint), -Headers (authentication and content type), and -Body (data payload), crucial for API interactions.





242
PnP Powershell
Invoke-RestMethod (Microsoft.PowerShell.Utility)
Sends HTTP and HTTPS requests to RESTful APIs and processes the responses. Commonly used for interacting directly with SharePoint REST API in PowerShell scripts.





243
PnP Powershell
SharePoint Site URL
The web address of a SharePoint site (e.g., https://accuityllp.sharepoint.com/sites/ASB), serving as the entry point for accessing site resources and APIs.





244
PnP Powershell
System.IO.Stream (System.IO)
Represents a sequence of bytes, such as a file. Used in PowerShell to handle file data streams for operations like uploading files to SharePoint.





245
PnP Powershell
AppInv.aspx
A SharePoint page used to grant app permissions to specific SharePoint sites, allowing custom or third-party apps to access site resources based on defined permissions.





246
Logging in Python
Q: Which logging level is appropriate for a message that indicates a minor problem that doesn't prevent the program from functioning?

A: WARNING
This level signals potential issues that may require attention but do not halt the application's execution.





247
Logging in Python
Q: Which parameter in logging.basicConfig() from the logging module specifies the format of log messages?

A: format='%(asctime)s - %(levelname)s - %(message)s'
This parameter sets the layout of each log message, including timestamp, severity level, and the message itself.





248
Logging in Python
Q: What is the default logging level in Python's logging module?

A: WARNING
This means that only messages with a severity of WARNING and above will be processed by default.





249
Logging in Python
Q: What does WatchedFileHandler from the logging.handlers module do differently compared to FileHandler?

A: It watches the log file for external modifications and automatically reopens it if the file is moved or deleted.
This is useful when external tools handle log rotation, ensuring continuous logging without interruption.





250
Logging in Python
Q: How can you configure logging using an external INI-style configuration file in Python's logging module?

A: Use logging.config.fileConfig('logging.ini') from the logging.config module
This function reads the logging configuration from an INI file, allowing for external and reusable configurations.





251
Powershell Modules
PowerShell Gallery

Definition: The central repository for PowerShell modules, scripts, and other resources.
Explanation: Accessible via the Find-Module and Install-Module cmdlets. Website: PowerShell Gallery.





252
Powershell Modules
PowerShell Module

Definition: A package that contains PowerShell cmdlets, functions, scripts, and other resources.
Explanation: Extends PowerShell’s functionality and can be shared or reused across different environments and users.





253
Powershell Modules
Update-Module

Definition: A cmdlet used to update an installed module to its latest version from the repository.
Explanation: Example: Update-Module -Name Az updates the Az module. To update all modules: Get-InstalledModule | Update-Module.





254
Powershell Modules
RequiredModules
Definition: A property in a module manifest that lists other modules required for the module to function.
Explanation: Ensures that dependencies are loaded before the module itself is imported. Example: (Get-InstalledModule -Name AzureRM).RequiredModules.





255
Powershell Modules
Module Path

Definition: The directories where PowerShell looks for modules.
Explanation: Can be viewed using the $env:PSModulePath environment variable. PowerShell searches these paths when importing modules.





256
WSL + Kali Linux
D-Bus
A message bus system that allows applications and services to communicate with each other, particularly in Linux-based systems. D-Bus is essential for managing things like user authentication and device notifications in desktop environments.





257
WSL + Kali Linux
/etc/wsl.conf
A configuration file in Linux distributions that allows you to control WSL behavior at the system level, such as automating the mount points for drives, configuring interop with Windows tools, and controlling networking options.





258
WSL + Kali Linux
wsl --update
Updates the WSL 2 Linux kernel, ensuring you are running the latest version with improved features, security fixes, and bug resolutions.





259
WSL + Kali Linux
wsl.exe and .bashrc
.bashrc is a script that runs every time you launch a new terminal in WSL. You can use it to set environment variables, customize the prompt, or configure any other startup behavior you want.





260
WSL + Kali Linux
/mnt Directory
In WSL, the /mnt directory is where your Windows file system is mounted. For example, C:\ is accessible at /mnt/c, D:\ at /mnt/d, etc. This allows you to access and work with files from both Windows and Linux environments seamlessly.





261
Vocab
Jane Eyre
Merino (muh-REE-noh)
A breed of sheep prized for its soft, fine wool, ideal for high-quality textiles. The term also refers to fabrics or garments made from this wool, valued for their warmth and luxurious texture.





262
Vocab
Lost in a Good Book
Wisteria: A climbing flowering plant with fragrant, cascading purple or white blooms, often grown on pergolas or trellises.





263
Vocab
Lost in a Good Book
Diatryma:  A genus of large flightless Eocene birds from Wyoming and New Mexico having much reduced wings, large head and powerful beak, and long massive legs and constituting with extinct related forms (as Gastornis) an order of birds probably most nearly related to the surviving cariamas and bustards





264
Vocab
Lost in a Good Book
Doric columns: A simple, sturdy style of Greek column with a plain capital and no base, emphasizing proportion and strength.





265
Vocab
Lost in a Good Book
Pelmet(s): A decorative framework or fabric cover above a window, concealing curtain fittings or rods.





266
Azure Functions + PP365
Managed Identity Credential Acquisition
The process by which an Azure service with a managed identity obtains an access token from Azure AD. This token is used to authenticate requests to other Azure services, ensuring secure and seamless communication without the need for manual credential management.





267
Azure Functions + PP365
host.json
A global configuration file for Azure Functions that defines settings applicable to all functions within a Function App. For Python developers, host.json can be used to configure logging, extensions, and other runtime behaviors, enabling centralized control over function execution.





268
Azure Functions + PP365
OAuth 2.0 Authentication Flow
A sequence of steps in the OAuth 2.0 protocol where an application obtains an access token from an authorization server. This flow involves redirecting users for consent, exchanging authorization codes for tokens, and securely accessing protected resources using the obtained tokens, enabling secure delegation of access.





269
Azure Functions + PP365
Function Proxies
A feature in Azure Functions that allows developers to create a façade over one or more functions or APIs. Function Proxies can manage routing, transformation, and composition of requests to Python Azure Functions, simplifying API management and enhancing security by abstracting backend services.





270
Azure Functions + PP365
Local Debugging
Running and testing Azure Functions on a local machine to identify and fix issues before deployment. Python developers use tools like Azure Functions Core Tools and VS Code to debug functions locally, allowing for rapid development and troubleshooting in a controlled environment.





271
Open Source/GitHub
Issue Assignee

A person designated to work on a specific issue, indicating responsibility and ownership for resolving the task or bug.





272
Open Source/GitHub
Code Review

The process where project maintainers and contributors examine changes proposed in a pull request to ensure code quality, functionality, and adherence to guidelines.





273
Open Source/GitHub
Hotfix

An urgent fix applied to a project to resolve critical bugs or security vulnerabilities, typically merged quickly into the main codebase.





274
Open Source/GitHub
Label

Tags assigned to issues or pull requests to categorize them, such as “good first issue,” “bug,” or “enhancement,” facilitating easier navigation and filtering.





275
Open Source/GitHub
Contribution Guidelines

A set of rules and best practices outlined by a project to ensure consistent and quality contributions from all contributors, often found in CONTRIBUTING.md.





276
Debugging in VS Code
Symbolic Debugging
A debugging technique that uses debug symbols (which provide additional information like variable names, function names, and line numbers) to make debugging more understandable and precise, often used in conjunction with compiled languages.





277
Debugging in VS Code
Watchpoint
A debugging feature that pauses execution when the value of a specific variable changes, similar to a breakpoint but focused on value changes rather than specific lines of code.





278
Debugging in VS Code
Conditional Breakpoint
A breakpoint that only pauses execution when a specific condition is met (e.g., when a variable reaches a certain value).





279
Debugging in VS Code
Remote Debugging
The process of debugging code running on a different machine or environment from your local computer.





280
Debugging in VS Code
Debugger API
An application programming interface (API) that allows developers to extend or automate debugging tools, often used to integrate debugging features into custom workflows or external tools.





281
Home Network Project
Front: What are Service Discovery and its importance in containerized environments?

Back: Service Discovery is the process of automatically detecting and locating services within a network, particularly in dynamic environments like container orchestration platforms. It enables containers to find and communicate with each other without manual configuration, facilitating scalability and efficient resource management.





282
Home Network Project
Front: What is SSL Certificate and why is it important for web services?

Back: An SSL Certificate is a digital certificate that authenticates the identity of a website and enables encrypted connections via SSL/TLS protocols. It ensures secure data transmission between the user's browser and the web server, protecting sensitive information from interception and tampering.





283
Home Network Project
Front: What is Rate Limiting and how does it help in preventing attacks?

Back: Rate Limiting restricts the number of requests a user or IP address can make to a service within a specific time frame. It helps prevent various attacks, such as brute-force attacks, denial-of-service (DoS) attacks, and abuse of APIs, by limiting the potential impact of malicious activities.





284
Home Network Project
How do you install Docker on a Raspberry Pi?

bash
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
sudo usermod -aG docker pi





285
Home Network Project
Front: Describe the primary function of Grafana in a monitoring stack.

Back: Grafana is an open-source platform for data visualization and analytics. It connects to various data sources like Prometheus, enabling users to create interactive and customizable dashboards to visualize metrics, monitor system performance, and gain insights into network and application behavior.





286
PEP 8
Spaces Around Assignment Operators: Use spaces around assignment operators (=) to differentiate them from keyword arguments and enhance clarity in variable assignments.

python
Copy code
total = 100





287
PEP 8
Alias Imports Judiciously: Use the as keyword to create aliases for long module names or to resolve naming conflicts. Ensure that aliases are clear and widely recognized (e.g., import numpy as np) to maintain code readability and consistency.





288
Azure AI Search
Indexers drive skillset execution and AI enrichment, where you can configure skills to integrate extra processing of content en route to an index. A few examples are OCR over image files, text split skill for data chunking, and calling embedding models to generate vectors for vector search.





289
Azure AI Search
You can run indexers on demand or on a recurring data refresh schedule that runs as often as every five minutes. More frequent updates preclude the use of indexers, requiring that you implement a 'push model' that simultaneously pushes data to both Azure AI Search and your external data source.





290
Azure AI Search
Integrated vectorization is an extension of the indexing and query pipelines in Azure AI Search. It adds the following capabilities:

Data chunking during indexing
Text-to-vector conversion during indexing
Text-to-vector conversion during queries





291
Azure AI Search
Push model is an approach that uses APIs to upload documents into an existing search index. You can upload documents in batches of up to 1000 per batch, or 16 MB per batch, whichever limit comes first.





292
DNS
Root Hints
A list of authoritative DNS servers for the root zone. Root hints are used by DNS servers to initiate recursive queries when resolving domain names, especially when no forwarders are configured.





293
DNS
Conditional Forwarding
A DNS configuration that directs queries for specific domain names to designated DNS servers instead of using default forwarders. It's useful for managing inter-office DNS resolution or directing queries for partner domains to their respective DNS servers.





294
DNS
DNS Zone Types
Different types of DNS zones include Primary, Secondary, Stub, and Active Directory-Integrated zones. Each type serves distinct roles in DNS management, such as data storage, redundancy, delegation, and integration with directory services.





295
DNS
DNS Policies
A feature in Windows DNS Server that allows administrators to define rules for how DNS queries are handled. Policies can filter queries or provide different responses based on criteria like client IP addresses, enabling scenarios like split-brain DNS.





296
DNS
No-Refresh Interval
In DNS scavenging, the period during which the timestamp on a DNS record cannot be updated. It prevents excessive DNS updates, helping determine when a record becomes stale and eligible for removal during scavenging.





297
OData
The set of annotations defined within a schema comprise a vocabulary. Shared vocabularies provide a powerful extensibility point for OData.

Metadata annotations can be used to define additional characteristics or capabilities of a metadata element, such as a service, entity type, property, function, action or parameter.





298
OData
Type Casting converts an entity from one type to another within inheritance hierarchies. In OData, it is facilitated by the @odata.type annotation, which specifies the target type for the cast, ensuring accurate data interpretation and processing.





299
OData
I found the workflows (actions and functions) in dataverse. I used this querystring.
https://accuity-sandbox.crm.dynamics.com/api/data/v9.2/workflows





300
OData
OData services SHOULD NOT require any query options to be specified in a request. Services SHOULD fail any request that contains query options that they do not understand and MUST fail any request that contains unsupported OData query options defined in the version of this specification supported by the service.





301
OData
Actions and Functions extend the set of operations that can be performed on or with a service or resource. Actions can have side-effects. For example, Actions can be used to modify data or to invoke custom operations.





302
IW Migration
Locking and Concurrency Control (SQL Server)
Techniques to manage simultaneous data access, preventing conflicts and ensuring consistency. Locks, isolation levels, and optimistic concurrency are tools that balance performance with data correctness when multiple users edit data simultaneously.





303
IW Migration
Forms (Access)
User-friendly interfaces for entering, displaying, and editing data in tables. They can incorporate buttons, dropdowns, and validation rules, making data input more efficient and consistent, and often serve as the primary user interaction layer.





304
IW Migration
Refactoring and Normalization (Access/SQL Server)
The process of reorganizing tables and fields to reduce redundancy and improve data integrity. Higher normalization forms minimize duplicate data and anomalies. This often improves long-term maintainability and eases migration to other systems.





305
IW Migration
Indexing (Access/SQL Server)
A strategy for improving data retrieval speeds by creating data structures (indexes) on certain fields. Proper indexing balances query performance gains against the overhead of maintaining those indexes during inserts, updates, and deletions.





306
Audit Report Tracker (Sharepoint List)
Permissions Endpoint (for managing list permissions in SharePoint):

Endpoint: GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/permissions
Description: Retrieves the permissions set for a specific SharePoint list.





307
Audit Report Tracker (Sharepoint List)
Graph Explorer
Definition: A tool provided by Microsoft that allows developers to test and experiment with Microsoft Graph API queries directly in the browser.
Context: It helps you quickly interact with Microsoft Graph APIs to retrieve or manipulate SharePoint data without writing full applications.





308
Audit Report Tracker (Sharepoint List)
Content Type (SharePoint)
Definition: A reusable set of columns (fields) and settings in SharePoint that define a specific kind of content (e.g., document, task).
Context: A list can have multiple content types, each with different columns and settings depending on the type of data being tracked.





309
Audit Report Tracker (Sharepoint List)
Content Type
Definition: A feature in SharePoint that defines a set of metadata (columns) and behaviors that apply to a certain type of content (e.g., a document, list item).
Context: Helps structure how data is stored and interacted with in SharePoint.





310
Audit Report Tracker (Sharepoint List)
Create Column in List (for creating new columns in a SharePoint list):

Endpoint: POST https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/columns
Description: Creates a new column in the specified SharePoint list.





311
FSLogix
Q: How does FSLogix improve Office 365 performance in Azure Virtual Desktop?
A: FSLogix isolates Office 365 data (such as Outlook, Teams, OneDrive) in a container (VHDX), reducing load times and ensuring that data is quickly accessible without syncing delays.





312
FSLogix
Q: What is FSLogix App Masking, and how does it relate to managing applications in virtual desktops?
A: FSLogix App Masking is a feature that allows administrators to control which applications are visible to which users in a virtual desktop environment. This "masks" applications based on user roles, ensuring that users only see the apps they have permissions for, without the need for separate application installations.





313
FSLogix
Cloud Cache operates the user's profile from the local cache during the user's session and must be configured with one or more remote storage providers as specified in CCDLocations. These remote storage providers store copies of the local cache and are used during the current session and for subsequent sign ins.





314
FSLogix
Using Cloud Cache puts a performance and storage requirement on the virtual machine to accommodate the extra I/O operations and storage required by the local cache.





315
FSLogix
Q: How does FSLogix prevent user profile corruption in virtual desktop sessions?
A: FSLogix stores user profiles in isolated containers (VHDX), reducing the chances of corruption by ensuring the profile is handled in a controlled environment that can be mounted and saved properly.





316
Azure Functions + Visual Studio
ASP.NET Web API is a framework for building HTTP-based services that can be consumed by various clients, including browsers, mobile devices, and other web applications. It’s ideal for creating RESTful services in ASP.NET.





317
Azure Functions + Visual Studio
ASP.NET offers several state management techniques, including Session State, View State, and Cookies, to retain data across user requests and provide a better user experience on dynamic websites.





318
Azure Functions + Visual Studio
ASP.NET supports asynchronous programming with async and await keywords, allowing non-blocking operations such as file and database access. This improves scalability and performance by freeing up threads during long-running tasks.





319
Azure Functions + Visual Studio
ASP.NET is a powerful framework for building dynamic web applications and services. It runs on the .NET platform, allowing developers to use multiple languages like C#, F#, and VB.NET to create modern web applications.





320
Email Auth and Security
SPF (Sender Policy Framework)

A DNS-based email authentication method.
Specifies which mail servers are authorized to send emails on behalf of a domain.
Helps prevent email spoofing by verifying the sender's IP address against the domain's SPF record.





321
Email Auth and Security
BIMI (Brand Indicators for Message Identification)

Allows organizations to display their brand logos alongside authenticated emails in recipients' inboxes.
Enhances brand recognition and trust.
Requires proper implementation of SPF, DKIM, and DMARC.





322
Email Auth and Security
MX Toolbox

An online suite of tools for diagnosing and analyzing DNS records.
Checks SPF, DKIM, and DMARC configurations.
Helps administrators verify the correctness of their email authentication setups.





323
SharePoint
The PUT method is used to update the entire content of an existing file. If you need to modify only specific properties or metadata, you might use MERGE with the PATCH method instead. However, for updating file content specifically, PUT is appropriate.





324
SharePoint
To access SharePoint resources using REST, construct a RESTful HTTP request by using the OData standard, which corresponds to the desired client object model API. For example:


GET https://{site_url}/_api/lists/getbytitle('{list_name}')/items
Authorization: "Bearer " + accessToken
Accept: "application/json;odata=verbose"





325
Azure Functions
When you enable a system-assigned managed identity:

A service principal of a special type is created in Microsoft Entra ID for the identity. The service principal is tied to the lifecycle of that Azure resource. When the Azure resource is deleted, Azure automatically deletes the service principal for you.





326
Terraform
Dynamic Blocks:
Definition: Allow you to construct nested blocks dynamically based on complex data structures.
Usage: Ideal for when the number of nested blocks is not fixed and depends on variable data.

Example:

dynamic "ingress" {
  for_each = var.ingress_rules
  content {
    from_port = ingress.value.from
    to_port   = ingress.value.to
    protocol  = ingress.value.protocol
  }
}





327
Terraform
Local Values:
Definition: Local values allow you to define computed variables within a configuration to simplify expressions or avoid repetition.
Usage: Useful for intermediate calculations or to centralize common values.

Example:

locals {
  app_name = "myapp"
  instance_count = length(var.instance_ids)
}





328
Terraform
For Expressions:

Definition: These are used to transform or filter collections (lists or maps) inline.
Usage: Useful for generating new lists or maps based on existing ones without using external loops.
Example:

[for instance in var.instances : instance.id]





329
Terraform
Variable References:
Refer to variables using the var. prefix within interpolation expressions. For example:

${var.env}





330
Terraform
Double Quotes vs. Single Quotes:

Double Quotes (" "): Allow variable interpolation.
Single Quotes (' '): Do not interpolate variables; they treat the content as a literal string.





331
Todd Ideas
In Azure AI Document Intelligence, prebuilt models offer a straightforward integration via RESTful APIs. Their endpoints are designed for simplicity, returning data in structured JSON. This means that once you send your document for analysis, you can easily parse the response and integrate the extracted fields directly into your application’s workflow.





332
Todd Ideas
In Azure AI Document Intelligence, Custom models are trained using your labeled datasets to extract distinct data from forms and documents, specific to your use cases. Standalone custom models can be combined to create composed models.
Custom neural | Extract data from mixed-type documents.
Custom template | Extract data from static layouts.
Custom composed | Extract data using a collection of models.





333
Todd Ideas
In Azure AI Document Intelligence, Custom classifiers identify document types before invoking an extraction model.

Custom classifier | Identify designated document types (classes) before invoking an extraction model.





334
Todd Ideas
In Azure AI Document Intelligence, prebuilt Document Intelligence seamlessly integrates with Azure Cognitive Search, enabling automated indexing and content extraction from processed documents, thereby enhancing search capabilities and data discoverability across enterprise repositories.





335
Todd Ideas
In Azure AI Document Intelligence, Prebuilt models enable you to add intelligent document processing to your apps and flows without having to train and build your own models.
Unified US tax | Extract from any US tax forms supported.
US Tax W-2 | Extract taxable compensation details.
US Tax 1099 | Extract 1099 variation details.
US Tax 1040 | Extract 1040 variation details.





336
JavaScript Concepts
ES6 Classes: Syntactic sugar over JavaScript's prototype-based inheritance, providing a clearer and more familiar syntax for creating objects and handling inheritance.





337
JavaScript Concepts
React Hooks: Functions like useState and useEffect that allow functional components to manage state and side effects in React.





338
JavaScript Concepts
Arrow Functions: Concise syntax for writing functions using =>. They do not have their own this context, making them suitable for callbacks.





339
JavaScript Concepts
React Native: A framework for building native mobile applications using React, allowing code reuse across iOS and Android platforms.





340
JavaScript Concepts
Destructuring: Syntax for unpacking values from arrays or properties from objects into distinct variables, improving code readability and conciseness.





341
PnP Powershell
OAuth 2.0 Client Credentials Flow
An authentication method where applications authenticate using a client ID and client secret, enabling server-to-server interactions without user involvement.





342
PnP Powershell
Admin Consent
Approval granted by an Azure AD administrator for an application to access certain resources or perform specific actions, essential for elevated API permissions.





343
PnP Powershell
Server Relative URL
The URL path relative to the SharePoint server, excluding the domain (e.g., /sites/ASB/Shared Documents), used in REST API endpoints for precise resource targeting.





344
PnP Powershell
PSCredential (Microsoft.PowerShell.Security)
A PowerShell object that securely stores a username and password. Utilized for authentication purposes, ensuring sensitive information is handled safely.





345
PnP Powershell
Set-PnPFileCheckedIn (PnP.PowerShell)
Checks in a previously uploaded file in SharePoint, optionally adding comments. Essential for managing document versions and maintaining collaboration workflows.





346
Logging in Python
Q: Which of the following is not a built-in logging level in Python: DEBUG, INFO, TRACE, CRITICAL?

A: TRACE
TRACE is not a standard logging level in Python's logging module.





347
Logging in Python
Q: What is the purpose of the disable_existing_loggers key in a dictConfig logging configuration?

A: disable_existing_loggers=False in logging.config.dictConfig
This ensures that existing loggers not specified in the configuration remain active and are not disabled.





348
Logging in Python
Q: If a child logger has propagate set to False, what does this mean?

A: It will not pass log messages to the parent logger.
This isolates the logger, ensuring that messages are handled only by its own handlers.





349
Logging in Python
Q: Name the four main types of file handlers available in Python's logging module.

A: FileHandler, RotatingFileHandler, TimedRotatingFileHandler, WatchedFileHandler
These handlers manage log output to files with varying rotation and monitoring capabilities.





350
Logging in Python
Q: Name a handler you would use to send log messages via email for critical errors.

A: SMTPHandler from the logging.handlers module
This handler sends log messages through an SMTP server, suitable for alerting on critical issues.





351
Powershell Modules
Dot Sourcing

Definition: A method to load functions and variables from a script into the current session.
Explanation: Not directly discussed, but related to loading scripts and modules. Typically done using a dot (.) before the script path.





352
Powershell Modules
Dependencies

Definition: Other modules or components that a PowerShell module requires to function correctly.
Explanation: Dependencies are specified in a module's manifest and must be present for the module to operate as intended. They can be viewed using properties like RequiredModules.





353
Powershell Modules
Pester

Definition: A testing framework for PowerShell.
Explanation: Used for writing and running tests to ensure scripts and modules behave as expected.





354
Powershell Modules
Force Parameter (-Force)

Definition: A parameter used with Import-Module to reload a module even if it's already imported.
Explanation: Useful for ensuring the latest version of a module is loaded or to overwrite existing module imports.





355
Powershell Modules
Install-Module

Definition: A cmdlet used to download and install a module from a repository like the PowerShell Gallery.
Explanation: Specifies the module name and installation scope. Example: Install-Module -Name Az -Scope CurrentUser.





356
WSL + Kali Linux
WSL File System Performance
The file system in WSL 2 is optimized for Linux applications but has some overhead when accessing files stored on Windows drives (/mnt/c, /mnt/d). It's recommended to store Linux-specific files in the WSL file system (/home, etc.) for better performance.





357
WSL + Kali Linux
Xorg
The open-source implementation of the X Window System (X11). It provides the graphical server for Unix-like operating systems, handling input, output, and screen display for graphical applications.





358
WSL + Kali Linux
XFCE (XForms Common Environment)
A lightweight and fast desktop environment for Unix-like operating systems, known for its low resource usage. XFCE provides a complete graphical interface for managing windows, files, and system settings.





359
WSL + Kali Linux
wsl Command
The primary command-line interface for interacting with WSL instances. It is used to manage and run Linux distributions on Windows.
Common options:
wsl --list or wsl -l: Lists installed distributions.
wsl --set-version <distro> 2: Changes the version of a distribution to WSL 2.





360
WSL + Kali Linux
WSL 1 vs. WSL 2
WSL 1: A translation layer that converts Linux system calls into Windows system calls. It provides faster performance for file system operations but lacks full Linux kernel support.
WSL 2: A full Linux kernel running in a lightweight VM, offering full system call compatibility, better performance for certain workloads (e.g., Docker), and improved compatibility with Linux software.





361
Vocab
Jane Eyre
Battledore and Shuttlecock
(BAT-uhl-door and SHUT-l-kok) A predecessor to badminton, where players use paddles to hit a feathered object (shuttlecock) back and forth without letting it fall.





362
Vocab
Lost in a Good Book
Phaeton (bodied automobile): A type of early open-top car with no fixed roof, evoking the design of 19th-century horse-drawn carriages.





363
Vocab
Ecriture
noun
SPA: ay-KREE-toor
IPA: /ˈɛkrɪtʊr/

A French term for writing or script, often used in literary theory to describe the act or art of writing itself.
Example: The novel's use of écriture gives a distinct rhythm and depth to the narrative.





364
Vocab
Jane Eyre
Basin and Ewer
(BAY-sin and YOO-er) A bowl (basin) and jug (ewer) used together for hand or face washing, commonly found before the advent of modern plumbing.





365
Vocab
Lost in a Good Book
Haggard and Hergé (authors): H. Rider Haggard, known for adventure novels like King Solomon's Mines, and Hergé, Belgian creator of The Adventures of Tintin comics.





366
Azure Functions + PP365
XMLHttpRequest vs. Fetch API
Both are JavaScript APIs for making HTTP requests from web pages. XMLHttpRequest is older and more verbose, while the Fetch API is modern, promise-based, and provides a more streamlined approach to handling asynchronous requests, making it preferable for integrating custom scripts in Dynamics 365.





367
Azure Functions + PP365
API Gateway Integration
Connecting Azure Functions with an API gateway to manage and secure API traffic. Integrating with services like Azure API Management allows Python Azure Functions to benefit from features like rate limiting, authentication, and monitoring, enhancing the security and scalability of exposed APIs.





368
Azure Functions + PP365
Power Platform CLI
A command-line interface tool for managing Power Platform resources, including Power Apps, Power Automate, and Dataverse. The Power Platform CLI facilitates automation, scripting, and advanced management tasks, enabling developers and administrators to interact with the platform efficiently.





369
Azure Functions + PP365
Azure Functions Extensions
Additional modules or packages that extend the capabilities of Azure Functions. For Python developers, extensions can provide support for integrating with other Azure services, enhancing bindings, and adding new triggers, enabling more complex and feature-rich serverless applications.





370
Azure Functions + PP365
Azure AD TokenRequestContext
A context object used in Azure AD token acquisition processes, specifying the scopes and resources for which an access token is requested. TokenRequestContext ensures that tokens are issued with the appropriate permissions and are valid for the intended resources, facilitating secure and targeted access in applications.





371
Open Source/GitHub
README.md

A markdown file at the root of a repository that provides an overview of the project, including its purpose, setup instructions, and usage information.





372
Open Source/GitHub
Pull Request (PR)

A request to merge changes from your fork or branch into the original repository, facilitating code review and collaboration with project maintainers.





373
Open Source/GitHub
Good First Issue

A label for beginner-friendly tasks in a project’s issue tracker, designed to help new contributors make their initial contributions with manageable tasks.





374
Open Source/GitHub
PEP 8

Python Enhancement Proposal 8, the style guide for writing clean and readable Python code, outlining conventions for code layout and formatting.





375
Open Source/GitHub
Test Suite

A collection of automated tests that verify the functionality and integrity of a project’s code, ensuring that changes do not introduce new bugs.





376
Debugging in VS Code
Step Out
A debugging feature that lets you exit the current function and return to the function that called it.





377
Debugging in VS Code
Live Debugging
A type of debugging where changes are made to the program and tested while it is running in a live environment, often used in web development and real-time applications.





378
Debugging in VS Code
Stack Trace
A report that provides detailed information about the sequence of function calls and the state of the program at the point where an error occurred. It's often used to diagnose issues in the execution flow.





379
Debugging in VS Code
Variable Inspection
The process of viewing and analyzing the values of variables in a program while it's running.





380
Debugging in VS Code
Debug Console
A tool within a development environment used to evaluate expressions, view output, or interact with a running program during debugging.





381
Home Network Project
Front: What is a Docker Compose file and what is it used for?

Back: A Docker Compose file (docker-compose.yml) is a YAML file that defines and configures multi-container Docker applications. It specifies the services, networks, and volumes needed for the application, allowing users to start and manage all containers with a single command (docker-compose up).





382
Home Network Project
Front: What is DNS over HTTPS (DoH) and its advantages?

Back: DNS over HTTPS (DoH) is a protocol that encrypts DNS queries by sending them over HTTPS. Advantages include:

Privacy: Prevents eavesdropping and manipulation of DNS traffic.
Security: Protects against DNS spoofing and man-in-the-middle attacks.
Censorship Resistance: Makes it harder for third parties to block or redirect DNS queries.





383
Home Network Project
Front: Explain the purpose of AllowedIPs in WireGuard configuration.

Back: AllowedIPs defines the IP addresses that are permitted to be routed through the VPN tunnel for a specific peer. It acts as both an access control list and routing rule, determining which traffic should be encrypted and sent through the VPN and which should bypass it.

The -f flag indicates the name of the Dockerfile to use.
The -t flag specifies the name of the image to be created; in this example, myapp:v1.
The final parameter, ., provides the build context for the source files for the COPY command: the set of files on the host computer needed during the build process.





384
Home Network Project
Front: What is Network Latency and how can it affect network performance?

Back: Network Latency refers to the time it takes for data to travel from the source to the destination across a network. High latency can result in delays, slow application performance, lag in real-time communications, and poor user experiences, especially in activities like gaming, video conferencing, and streaming.





385
DNS
Zone Transfers
The process of copying DNS zone data from a primary DNS server to secondary DNS servers. Zone transfers ensure DNS data consistency and redundancy across multiple DNS servers, enhancing reliability and load distribution.





386
Audit Report Tracker (Sharepoint List)
List Items Endpoint (for retrieving items in a SharePoint list):

Endpoint: GET https://graph.microsoft.com/v1.0/sites/{site-id}/lists/{list-id}/items
Description: Retrieves items from a specified SharePoint list.





387
FSLogix
Q: How does FSLogix Profile Container enhance multi-session environments like Azure Virtual Desktop?
A: In multi-session environments, FSLogix Profile Containers ensure that user profiles are loaded quickly and consistently, regardless of which session or virtual machine the user logs into, ensuring a persistent and smooth experience even when multiple users share the same infrastructure.





388
FSLogix
Data is written to all storage providers regardless of which provider is used during data hydration.
Performance (latency, utilization, bottlenecks) of a storage provider affects its sync status with the local copy.
Having one (1) or more provider that is behind in updates from local cache could be an indicator of an under performing storage provider.





389
FSLogix
Q: What is the role of Profile Disk Differencing in FSLogix?
A: Profile Disk Differencing allows FSLogix to create differencing VHDX disks, where changes to the user profile are stored in separate files, reducing the load on the main profile disk. This improves performance by ensuring faster read/write operations and reducing storage overhead.





390
FSLogix
During a first-time sign-in, FSLogix creates the container for the user in C:\ProgramData\FSLogix\Cache and mounts the container to the virtual machine. Next, FSLogix sets up all the necessary redirections for the user's profile. Then the User Profile Service creates the user's profile into the local cache.





391
FSLogix
Q: Which format does FSLogix use to store user profile data?
A: FSLogix uses the VHDX (Virtual Hard Disk) format to store user profile data in containers.





392
Terraform
Meta-Arguments:
Definition: Special arguments like count, depends_on, and lifecycle that control resource behavior and relationships.
Count: Enables creating multiple instances of a resource.

resource "aws_instance" "web" {
  count = var.instance_count
  # Other configuration...
}





393
Terraform
Remote Backends and Interpolation:
Definition: Terraform can store state remotely (e.g., in AWS S3, Azure Blob Storage). Variable interpolation may be used to configure these backends dynamically.
Example:

terraform {
  backend "s3" {
    bucket = var.state_bucket
    key    = "path/to/my/key"
    region = var.region
  }
}





394
Terraform
Network Infrastructure Automation (NIA) allows you to safely approve the changes that your applications require without having to manually translate tickets from developers into the changes you think their applications need.





395
Terraform
terraform validate:
A CLI command that checks the syntax and internal consistency of your Terraform files without connecting to remote services. Use it to catch errors before applying any changes.





396
Terraform
Ticket-based review processes are a bottleneck that can slow down development. Instead, you can use Sentinel, a policy-as-code framework, to automatically enforce compliance and governance policies before Terraform makes infrastructure changes. Sentinel policies are available in Terraform Enterprise and HCP Terraform.





397
JavaScript Concepts
Lazy Loading: Deferring the loading of non-critical resources until they are needed, improving initial load times and performance.





398
JavaScript Concepts
Server-Side Rendering (SSR): Rendering web pages on the server before sending them to the client, improving performance and SEO.





399
JavaScript Concepts
GraphQL: A query language for APIs that allows clients to request exactly the data they need, improving efficiency and flexibility over REST.





400
JavaScript Concepts
Caching Strategies: Techniques like browser caching and service workers to store resources locally, decreasing load times and server requests.





401
JavaScript Concepts
DOM Manipulation: Using JavaScript to select and modify HTML elements, enabling dynamic and interactive web pages.





402
PnP Powershell
Document Library
A SharePoint component where documents are stored, managed, and shared. Examples include "Shared Documents" or custom libraries within a site.





403
PnP Powershell
Get-PnPConnection (PnP.PowerShell)
Retrieves details about the current PnP.PowerShell connection, including authentication method, scopes, and connection type, aiding in troubleshooting and verification.





404
PnP Powershell
Remove-PnPListItem (PnP.PowerShell)
Deletes an item from a SharePoint list. Useful for maintaining data integrity and automating data cleanup processes





405
PnP Powershell
System.IO.File (System.IO)
A PowerShell class providing methods for file manipulation, such as reading, writing, opening, and closing files, essential for handling file operations in scripts.





406
PnP Powershell
Add-PnPListItem (PnP.PowerShell)
Adds a new item to a SharePoint list. Enables automated data entry and integration with other systems by programmatically populating list data.





407
Logging in Python
Q: Which formatter attribute includes the name of the function where the log message originated in Python's logging.Formatter?

A: %(funcName)s
This attribute inserts the function name into the log message, providing context about where the log was generated.





408
Logging in Python
Q: Which handler would you choose to limit the size of your log files and maintain a specific number of backup files?

A: RotatingFileHandler from the logging.handlers module
This handler manages log file sizes and retains a set number of backup files to prevent excessive disk usage.





409
Logging in Python
Q: What is the advantage of using logging.getLogger(__name__) in each module of a Python application?

A: It automatically names the logger based on the module's name, ensuring consistency and facilitating hierarchical logging configurations.
This practice aligns loggers with the application's structure, making configuration and debugging more manageable.





410
Logging in Python
Q: What does setting logging.disable(logging.CRITICAL) do to the logging system in Python's logging module?

A: It disables all logging messages at or below the CRITICAL level.
This effectively silences all log messages, as CRITICAL is the highest standard logging level.





411
Logging in Python
Q: What is the purpose of a Formatter in Python's logging module?

A: To define the structure and content of log messages using formats like '%(asctime)s - %(levelname)s - %(message)s'.
This ensures that log messages are consistently formatted for readability and analysis.





412
Powershell Modules
Windows System Modules Directory
Definition: A default directory where PowerShell modules are stored for all users.
Explanation: Typically located at C:\Program Files\PowerShell\Modules.





413
Powershell Modules
Az Module

Definition: A module for managing Azure resources.
Explanation: Provides cmdlets to interact with Azure services. Example cmdlet: Get-AzVM.





414
Powershell Modules
Uninstall-Module

Definition: A cmdlet used to remove a module from the system.
Explanation: Example: Uninstall-Module -Name ActiveDirectory removes the ActiveDirectory module.





415
Powershell Modules
CurrentUser Scope

Definition: An installation scope that makes a PowerShell module available only to the current user.
Explanation: Installing a module with -Scope CurrentUser does not require administrative privileges and places the module in the user's profile directory, typically C:\Users\<Username>\Documents\PowerShell\Modules.





416
Powershell Modules
Module Manifest (.psd1)

Definition: A PowerShell data file that describes the contents and metadata of a module.
Explanation: Includes information like the module version, author, exported functions, dependencies, and more. Essential for publishing and sharing modules.





417
WSL + Kali Linux
Wireshark Capture Filter
A set of rules used to filter network traffic before it is captured in Wireshark. Capture filters can limit the types of traffic being collected, making it easier to focus on specific network issues.





418
WSL + Kali Linux
wsl --export <distro> <file.tar>
Exports a WSL distribution to a .tar file. This can be used for backup or migration purposes.





419
Vocab
Lost in a Good Book
Antimacassar: A small cloth placed on furniture, especially chair backs, to protect against grease and wear, historically from hair oil ("macassar oil").





420
Vocab
Jane Eyre
Contumelious Epithet
(con-too-MEE-lee-uhs EP-uh-thet) An insult or scornful nickname intended to express contempt, often delivered with arrogance.





421
Vocab
Lost in a Good Book
Lerwick: The main town and port of the Shetland Islands, Scotland, known for its fishing and maritime history.





422
Vocab
Jane Eyre
Beldame
(BEL-dame) An old woman, sometimes used respectfully for a grandmother, or pejoratively to describe a hag or crone.





423
Vocab
Do Androids Dream of Electric Sheep?
Thalamic (thuh-LAM-ik): Relating to the thalamus, a part of the brain that acts as a relay station for sensory and motor signals.





424
Azure Functions + PP365
Dependency Management
The practice of managing external libraries and packages that a Python application relies on. In Azure Functions, managing dependencies through requirements.txt ensures that all necessary packages are installed and versioned correctly, maintaining consistency between development and production environments.





425
Azure Functions + PP365
Async Programming (Asyncio)
A programming paradigm in Python that enables concurrent execution of code using asynchronous functions and event loops. In Azure Functions, leveraging asyncio can improve performance and scalability by allowing Python functions to handle multiple tasks simultaneously without blocking.





426
Azure Functions + PP365
Function App Secrets
Sensitive information required by Azure Functions, such as API keys or connection strings. Python Azure Functions manage secrets through environment variables, Azure Key Vault integrations, or managed identities, ensuring that sensitive data is stored securely and accessed only by authorized functions.





427
Azure Functions + PP365
Virtual Environment Activation
The process of activating a Python virtual environment to isolate project dependencies. When developing Python Azure Functions, activating the virtual environment ensures that the correct packages are used, preventing conflicts and maintaining a clean development setup.





428
Azure Functions + PP365
Azure AD Grant Admin Consent
The process of obtaining organizational approval for an application’s requested API permissions in Azure AD. Granting admin consent ensures that applications have the necessary permissions to operate within the organization's security policies, enabling seamless and authorized interactions with Azure services.





429
Debugging in VS Code
Call Stack
A data structure that stores the sequence of function calls made in a program, showing the order in which they were called.





430
Debugging in VS Code
Memory Inspection
The process of examining the program’s memory during debugging to understand how memory is allocated, used, and released, which can help identify memory-related bugs like leaks or corruption.





431
Debugging in VS Code
Step Over
A debugging feature that allows you to skip over a function call, running it entirely without entering it.





432
FSLogix
Cloud Cache uses the locally mounted container to provide periodic updates to the remote storage providers. Cloud Cache is designed to insulate users from short-term or intermittent local (inner-region, close proximity) storage issues.





433
FSLogix
Q: What is the maximum supported size of a VHDX file in FSLogix?
A: VHDX files can support up to 64 TB, making them suitable for large-scale enterprise environments where user profiles may require substantial storage capacity.





434
FSLogix
Q: What does the FSLogix Profile Container do when a user is logging into multiple Azure Virtual Desktops (AVD)?
A: FSLogix mounts the same Profile Container (VHDX) to any virtual desktop the user logs into, ensuring that their profile settings, documents, and application preferences are consistent and immediately available across all virtual machines. This provides a unified experience regardless of which VM the user accesses.





435
FSLogix
All data written to the user's profile is temporarily stored as block-level cache objects in the same directory. Those block-level cache objects are then committed to the local cache. Before the block-level cache objects are created, the writes into the user's profile are processed in memory through a proxy file.





436
Terraform
Terraform allows you to manage the resources in each tier together, and automatically handles dependencies between tiers. For example, Terraform will deploy a database tier before provisioning the web servers that depend on it.





437
Terraform
Debugging Tips:
Check Quotes: Ensure that you use double quotes for strings that require interpolation.
Use terraform validate: Run this command frequently to catch syntax issues early.
Review Variable References: Confirm that all variable references use the correct var. prefix.





438
Terraform
List and Map Indexing:
Access elements within lists or maps using square brackets.

List Example:
${var.instance_ids[0]}

Map Example:
${var.settings["key_name"]}





439
Terraform
Splat Operator:
Definition: The splat operator (*) extracts attributes from every element in a list of resources.
Usage: Handy for working with multiple resource instances in a compact way.
Example:

"${aws_instance.web.*.id}"





440
Terraform
Built-In Functions:
Definition: Terraform provides functions for manipulating data types like strings, lists, and maps.
Usage: Essential for transforming and preparing data for resource configurations.

Examples:
join(separator, list): Concatenates list elements.
h
Copy
"${join(",", var.instance_ids)}"
split(delimiter, string): Splits a string into a list.
lookup(map, key, default): Retrieves a value from a map.





441
JavaScript Concepts
Spread Operator (...): Expanding elements of arrays or properties of objects, useful for copying or merging data structures.





442
JavaScript Concepts
Bitbucket: A Git-based source code repository hosting service, offering integration with Atlassian products like Jira for project management.





443
JavaScript Concepts
Event Handling: Responding to user interactions like clicks and keypresses by attaching event listeners to DOM elements.





444
JavaScript Concepts
Mocha: A flexible testing framework for Node.js, allowing developers to choose assertion libraries like Chai for writing tests.





445
JavaScript Concepts
ESLint: A linter tool for identifying and fixing problematic patterns in JavaScript code, enforcing coding standards and best practices.





446
PnP Powershell
AADSTS7000218 Error
An Azure AD error stating that the authentication request lacks a client_assertion or client_secret, preventing successful token acquisition.





447
PnP Powershell
Get-PnPSite (PnP.PowerShell)
Fetches information about the current SharePoint site, including properties like URL, title, and storage usage. Helps in monitoring and managing site configurations.





448
PnP Powershell
Get-PnPWeb (PnP.PowerShell)
Fetches details about the current SharePoint site, including properties like language, template, and navigation settings. Useful for site audits and management.





449
PnP Powershell
Client Secret (client_secret)
A confidential key associated with an Azure AD application, used alongside the client ID to authenticate the application in secure authentication flows.





450
PnP Powershell
Connect-PnPOnline (PnP.PowerShell)
Establishes a connection to a SharePoint site using various authentication methods like client credentials or device code flow, enabling subsequent PnP.PowerShell cmdlets to interact with SharePoint.





451
Logging in Python
Q: How can you dynamically create loggers based on runtime information in Python's logging module?

A: By using logging.getLogger() with dynamically constructed names, such as logging.getLogger(f"module_{module_id}").
This allows for the creation of loggers tailored to specific runtime contexts or modules.





452
Logging in Python
Q: What happens if you add multiple handlers to a logger that write to the same file without proper configuration in Python's logging module?

A: It can lead to duplicate log entries and potential file access conflicts.
Ensuring that each handler writes to a unique file or managing handler configurations prevents such issues.





453
Logging in Python
Q: Why is it important to include timestamps in log messages?

A: To track when events occurred, which is essential for debugging and analyzing application behavior over time.
Timestamps provide temporal context, making it easier to correlate events and identify issues.





454
Logging in Python
Q: How can external log rotation tools like logrotate interact with Python's WatchedFileHandler from the logging.handlers module?

A: WatchedFileHandler detects external changes to the log file (like rotation) and automatically reopens the file, ensuring continuous logging without interruption.
This integration ensures that logs remain consistent even when rotated by external utilities.





455
Logging in Python
Q: How does TimedRotatingFileHandler from the logging.handlers module differ from RotatingFileHandler?

A: TimedRotatingFileHandler rotates log files based on time intervals (e.g., daily at midnight), whereas RotatingFileHandler rotates based on file size (maxBytes).
This difference allows for log management tailored to time-based or size-based rotation needs.





456
Powershell Modules
Module Auto-Import

Definition: See Auto-Import above.
Explanation: Allows modules to be imported automatically when their commands are used, streamlining workflow.





457
Powershell Modules
AllUsers Scope

Definition: An installation scope that makes a PowerShell module available to all users on the system.
Explanation: When installing a module with -Scope AllUsers, it requires administrative privileges and places the module in a system-wide directory, typically C:\Program Files\PowerShell\Modules.





458
Powershell Modules
Exporting Functions and Cmdlets
Definition: The process of making functions and cmdlets available to users when a module is imported.
Explanation: Defined in the module's .psm1 file and specified in the module manifest (.psd1) under FunctionsToExport, CmdletsToExport, etc.





459
Powershell Modules
Get-Help

Definition: A cmdlet that displays help information for other cmdlets and functions.
Explanation: Provides detailed documentation and examples. Example: Get-Help Get-AzVM -Detailed.





460
Powershell Modules
Cmdlet

Definition: A lightweight command used in the PowerShell environment.
Explanation: Cmdlets follow a Verb-Noun naming pattern (e.g., Get-Module, Import-Module) and perform specific functions within PowerShell.





461
Vocab
Jane Eyre
Piquant
(PEE-kahnt) Having a pleasantly sharp or spicy taste; can also describe something intellectually stimulating or excitingly provocative.





462
Vocab
Lost in a Good Book
Compère (of a game show): A host or master of ceremonies, responsible for introducing participants and keeping the event flowing.





463
Vocab
Jane Eyre
Hips and Haws
Fruits of wild roses (hips) and hawthorn trees (haws), commonly seen in hedgerows. These red or orange berries are associated with autumn and are used in herbal remedies and preserves.





464
Vocab
Jane Eyre
Spoony
(SPOO-nee) Foolishly or overly sentimental, especially in matters of love or infatuation, often appearing naïve or overly romantic.





465
Vocab
Do Androids Dream of Electric Sheep?
Catalepsy (KAT-uh-lep-see): A medical condition characterized by a trance or seizure with a loss of sensation and consciousness, accompanied by rigidity of the body.





466
JavaScript Concepts
Vue.js: A progressive framework for building user interfaces, known for its simplicity and flexibility, with features like directives and single-file components.





467
JavaScript Concepts
Variable Declarations (let, const, var): Keywords to declare variables with different scopes and mutability. let and const are block-scoped, while var is function-scoped.





468
JavaScript Concepts
Virtual DOM: An in-memory representation of the real DOM used by libraries like React to optimize and batch DOM updates efficiently.





469
JavaScript Concepts
Netlify: A platform for deploying static sites and serverless functions, providing continuous deployment and built-in CI/CD pipelines.





470
JavaScript Concepts
Closures: Functions that retain access to their lexical scope even when executed outside their original context, enabling data privacy and function factories.





471
PnP Powershell
Set-PnPWeb (PnP.PowerShell)
Configures properties of a SharePoint site, such as title, description, and logo. Enables automated site customization and configuration management.





472
PnP Powershell
Scopes
Define the level of access an application has to resources. Examples include Files.ReadWrite.All and Sites.ReadWrite.All, determining what operations the app can perform.





473
PnP Powershell
Parameter Set Conflict
Occurs when incompatible or conflicting parameters are used together in a PowerShell cmdlet, leading to errors as PowerShell cannot determine the intended operation.





474
PnP Powershell
API Permissions
Permissions granted to an application to access specific APIs like SharePoint or Microsoft Graph. Can be delegated (user-based) or application-level (app-only).





475
PnP Powershell
Add-PnPUserToGroup (PnP.PowerShell)
Adds a user to a specified SharePoint group. Facilitates automated user management and access control within SharePoint environments.





476
Logging in Python
Q: What is the role of a QueueHandler and QueueListener in asynchronous logging within Python's logging module?

A: QueueHandler sends log records to a thread-safe queue, while QueueListener retrieves and dispatches them to handlers, enabling non-blocking logging.
This setup is beneficial for applications where logging operations should not impede the main program flow.





477
Logging in Python
Q: What does the backupCount parameter do in RotatingFileHandler from the logging.handlers module?

A: It specifies the number of backup log files to keep after rotation, such as backupCount=5.
This limits the number of rotated files retained, managing disk space usage.





478
Logging in Python
Q: What does setting propagate=True on a logger in Python's logging module do?

A: It allows log messages to be passed to ancestor loggers in the hierarchy.
This enables messages to be handled by both the logger's own handlers and those of its parents.





479
Logging in Python
Q: What is one advantage of using structured logging libraries like Structlog over Python's built-in logging module?

A: Structured logging facilitates easier parsing, querying, and analysis of log data, especially when integrating with log management systems.
This is particularly useful for applications that require detailed and machine-readable log formats.





480
Logging in Python
Q: What is one of the best practices for securing log files in Python's logging module?

A: Setting appropriate file permissions to restrict unauthorized access.
This protects sensitive log data from being accessed or tampered with by unauthorized users.





481
Vocab
Jane Eyre
Post-chaise
(POST-shayz) A lightweight, horse-drawn carriage used for long-distance travel, designed for speed and efficiency, popular in the 18th and 19th centuries.





482
Vocab
Lost in a Good Book
Tunguska event: A massive explosion in Siberia (1908) caused by an airburst of a meteoroid or comet, flattening 800 square miles of forest.





483
Vocab
Jane Eyre
Habergeon
(HAB-er-juhn) A sleeveless, lightweight coat of mail armor, typically covering the torso and sometimes the upper arms, used for protection in medieval combat.





484
Vocab
Lost in a Good Book
Blagged (a ride): British slang meaning to obtain a ride, often by persuading or deceiving someone.





485
Vocab
Lost in a Good Book
Cornice: An architectural feature where a projecting, decorative molding crowns a building or structure, often found at the top of walls.





486
JavaScript Concepts
Spread and Rest Operators (...): Operators that expand elements of arrays or objects (spread) and collect multiple elements into a single array parameter (rest).





487
JavaScript Concepts
Tailwind CSS: A utility-first CSS framework that provides low-level utility classes, enabling rapid and flexible UI development.





488
JavaScript Concepts
Hot Module Replacement (HMR): A feature in bundlers like Webpack and Vite that allows modules to be replaced without a full page reload during development.





489
JavaScript Concepts
Event Loop: The mechanism that handles asynchronous callbacks in JavaScript, ensuring non-blocking execution by managing the call stack and callback queue.





490
JavaScript Concepts
MobX: A simple, scalable state management library that uses observable data structures, promoting reactive programming patterns.





491
PnP Powershell
Throttling in SharePoint
Limits the number of API requests to prevent abuse and ensure service stability. Requires implementing retry logic and handling throttling responses in scripts.





492
PnP Powershell
Get-PnPFile (PnP.PowerShell)
Retrieves a file from a SharePoint document library. Allows downloading files to a local path or accessing file properties and content directly within PowerShell scripts.





493
PnP Powershell
Add-PnPFile (PnP.PowerShell)
Uploads a file to a specified SharePoint document library or folder. Supports parameters like -Path for local files and -Stream for uploading via a data stream.





494
Logging in Python
Q: What is a potential issue with excessive logging, especially at the DEBUG level, in Python's logging module?

A: It can lead to large log files that consume disk space and make it harder to find relevant information.
Excessive logging may also impact application performance due to the overhead of writing numerous log entries.





495
Logging in Python
Q: How can you include exception tracebacks in your log messages using Python's logging module?

A: By setting exc_info=True in logging methods like logger.error().
This adds the exception traceback to the log message, providing detailed context for errors.





496
Logging in Python
Q: What is the significance of the level parameter when configuring a logger or handler in Python's logging module?

A: It sets the minimum severity of log messages that will be processed; messages below this level are ignored.
For example, setting level=logging.INFO means that DEBUG messages will be ignored.





497
Logging in Python
Q: What should you do to ensure that logging.basicConfig() has an effect in Python's logging module?

A: Call it before adding any custom handlers or performing other logging configurations, and ensure that the root logger doesn't already have handlers attached.
This guarantees that basicConfig sets up the logging system as intended without being overridden.





498
Logging in Python
Q: What is a NullHandler used for in Python's logging module?

A: To discard log messages, preventing "No handler" warnings in library code.
This is useful for libraries to ensure they don't interfere with the application's logging configuration.





499
Vocab
Lost in a Good Book
Proleptic: Relating to anticipation, particularly in literature or rhetoric, where future events are referred to as though they have already happened.





500
Vocab
Do Androids Dream of Electric Sheep?
Inguinal region (ING-gwuh-nuhl REE-juhn): The area of the lower abdomen on either side of the pubic bone, also known as the groin, where the thigh meets the trunk.





501
Vocab
Jane Eyre
Arrogate
(AIR-uh-gate) To seize or assume rights or privileges without justification, often in an overbearing or presumptuous manner.





502
Vocab
Jane Eyre
Fillip
(FIL-ip) A small but impactful boost or stimulus; also refers to a flicking motion made by snapping fingers.





503
Vocab
Lost in a Good Book
Perfidious: Deceitful and untrustworthy, often describing betrayal or disloyalty.





504
JavaScript Concepts
Async/Await: Syntax for handling asynchronous operations more readably, allowing async functions to pause execution with await until a Promise resolves.





505
JavaScript Concepts
Testing Library: A family of libraries that encourage testing best practices by focusing on user interactions rather than implementation details.





506
JavaScript Concepts
MDN Web Docs: Comprehensive documentation for web technologies, including JavaScript, HTML, CSS, and various APIs.





507
JavaScript Concepts
Vite: A modern build tool optimized for speed and performance, providing instant server start and efficient hot module replacement.





508
JavaScript Concepts
Prototype-Based Inheritance: JavaScript's inheritance model where objects inherit properties and methods from a prototype object, enabling dynamic property sharing.





509
Logging in Python
Q: What is a common practice for naming loggers within Python modules?

A: Using logging.getLogger(__name__) to automatically name the logger based on the module's name.
This practice ensures that logger names reflect the module structure, aiding in organized logging configurations.





510
Logging in Python
Q: What is one of the main disadvantages of using Python's built-in logging module?

A: It can be overly complex and verbose for simple applications or scripts.
The extensive features may introduce unnecessary complexity when basic logging needs are sufficient.





511
Logging in Python
Q: Why should log files be secured with appropriate file permissions in Python's logging module?

A: To prevent unauthorized access to sensitive log information and protect the integrity of log data.
Proper permissions ensure that only authorized users can read or modify log files.





512
Logging in Python
Q: How can you prevent log messages from bubbling up to parent loggers in Python's logging module?

A: By setting propagate=False on the child logger.
This stops the log messages from being handled by ancestor loggers, ensuring they are processed only by the child logger's handlers.





513
Logging in Python
Q: What is the role of a Formatter in a logging handler within Python's logging module?

A: To specify the layout and content of the log messages, such as including timestamps, log levels, and message text.
Formatters ensure that log messages are consistently structured for readability and analysis.





514
Vocab
Do Androids Dream of Electric Sheep?
Cogitated (KOJ-i-teyt-ed): Past tense of "cogitate," meaning to think deeply or ponder about something.





515
Vocab
Do Androids Dream of Electric Sheep?
Kipple (KIP-uhl): A term coined by author Philip K. Dick referring to useless, discarded, or trivial items that tend to accumulate, often leading to clutter.





516
Vocab
Lost in a Good Book
Impresario: A manager or producer of theatrical, musical, or other artistic performances, often entrepreneurial in nature.





517
Vocab
Do Androids Dream of Electric Sheep?
Wimple (WIM-puhl): A cloth headdress covering the head, neck, and sides of the face, traditionally worn by women in the Middle Ages and still by some nuns.





518
Vocab
Jane Eyre
Diablerie
(dee-AH-bluh-ree) Mischievous, devilish behavior or sorcery; also refers to artwork, literature, or activities evoking dark, supernatural themes.





519
JavaScript Concepts
Parcel: A zero-configuration bundler that automatically handles various file types, offering faster builds with minimal setup.





520
JavaScript Concepts
Heroku: A cloud platform for deploying, managing, and scaling Node.js applications with support for various add-ons and integrations.





521
JavaScript Concepts
Yarn: An alternative package manager to npm, offering faster installs and more reliable dependency management through lock files.





522
JavaScript Concepts
Express.js: A minimalist web framework for Node.js, facilitating routing, middleware integration, and handling HTTP requests/responses.





523
JavaScript Concepts
Security Practices: Implementing measures to protect applications from vulnerabilities like Cross-Site Scripting (XSS) and Cross-Site Request Forgery (CSRF).





524
Logging in Python
Q: Why might you choose to use Loguru over Python's built-in logging module?

A: For simpler syntax, reduced boilerplate, and additional features like colorized output and automatic exception logging.
Loguru offers a more user-friendly and modern interface compared to the standard logging module.





525
Logging in Python
Q: What is the purpose of logging.basicConfig() in Python's logging module?

A: It provides a simple way to configure the root logger with basic settings like level, format, and filename.
This function is ideal for quick setups without the need for multiple handlers or complex configurations.





526
Logging in Python
Q: What should you do to ensure that logging.basicConfig() has an effect in Python's logging module?

A: Call it before adding any custom handlers or performing other logging configurations, and ensure that the root logger doesn't already have handlers attached.
This ensures that basicConfig properly initializes the logging system without being overridden.





527
Logging in Python
Q: What is the purpose of using hierarchical, dot-separated logger names in a Python application?

A: To organize loggers in a hierarchy that reflects the application's module structure, allowing for inheritance of configurations and more granular control over logging behavior.
This organization simplifies managing logging settings across different parts of the application.





528
Logging in Python
Q: Why is it important to centralize logging configuration in large applications using Python's logging module?

A: Centralizing logging configuration ensures consistency, makes it easier to manage, and prevents scattered and conflicting logging setups across different modules.
This approach streamlines logging management and enhances maintainability.





529
Vocab
Do Androids Dream of Electric Sheep?
Cephalic pattern (suh-FAL-ik PAT-ern): Refers to patterns or features related to the head or skull.





530
Vocab
Do Androids Dream of Electric Sheep?
Bucolic (byoo-KOL-ik): Relating to the pleasant aspects of the countryside and country life; pastoral.





531
Vocab
Do Androids Dream of Electric Sheep?
Vagus nerve (VAY-guhs nurv): The tenth cranial nerve that extends from the brainstem to the abdomen, playing a crucial role in the parasympathetic nervous system by controlling involuntary functions such as heart rate, digestion, and respiratory rate.





532
Vocab
Jane Eyre
Palliate
(PAL-ee-ate) To alleviate pain or lessen the severity of something, especially symptoms or distress, without removing the cause; can also mean to downplay faults or mistakes.





533
Vocab
Do Androids Dream of Electric Sheep?
Caterwauled (KAT-er-wawld): Past tense of "caterwaul," meaning to make a shrill, wailing noise like that of a cat in heat; to howl or screech.





534
JavaScript Concepts
Browser Storage (localStorage, sessionStorage, IndexedDB`): Mechanisms for storing data on the client side, enabling persistent and session-based data management.





535
JavaScript Concepts
Vuex: A state management pattern and library for Vue.js applications, centralizing state and enabling predictable state mutations.





536
JavaScript Concepts
Flow: A static type checker for JavaScript, enabling developers to add type annotations and catch type-related errors during development.





537
JavaScript Concepts
Jest: A JavaScript testing framework by Facebook, supporting unit, integration, and snapshot testing, particularly well-suited for React applications.





538
JavaScript Concepts
Prettier: A code formatter that enforces consistent styling across codebases, automatically formatting code on save or commit.





539
Logging in Python
Q: How does using hierarchical logger names help in large applications using Python's logging module?

A: It allows for organized, modular logging configurations where different parts of the application can have tailored logging behaviors.
This structure simplifies managing and configuring loggers across various modules and components.





540
Logging in Python
Q: How does RotatingFileHandler from the logging.handlers module determine when to rotate a log file?

A: It rotates the log file when it reaches a specified size, such as maxBytes=5*1024*1024 (5 MB).
Once the file size exceeds this threshold, a new log file is created, and backups are managed based on backupCount.





541
Logging in Python
Q: What is the purpose of logging.basicConfig() in Python's logging module?

A: It provides a simple way to configure the root logger with basic settings like level, format, and filename.
This function is useful for quick setups without the need for multiple handlers or complex configurations.





542
Logging in Python
Q: What is the impact of setting a logger's level higher than its handler's level in Python's logging module?

A: Log messages must meet or exceed the logger's level to be processed by the handler, regardless of the handler's own level.
This means that even if a handler is set to a lower level, it won't handle messages below the logger's threshold.





543
Logging in Python
Q: What is one of the main disadvantages of using Python's built-in logging module?

A: It can be overly complex and verbose for simple applications or scripts.
The extensive configurability may introduce unnecessary complexity when basic logging suffices.





544
Vocab
Lost in a Good Book
Evelyn Waugh (novels): English writer famous for satirical works like Brideshead Revisited and A Handful of Dust, exploring themes of aristocracy, faith, and morality.





545
Vocab
Jane Eyre
Salubrious
(suh-LOO-bree-uhs) Describing something beneficial to health or well-being, such as a pleasant climate, nutritious food, or healthy lifestyle.





546
Vocab
Jane Eyre
Cachinnation (kak-ih-NAY-shun)
Loud, uncontrollable laughter, often with a connotation of being excessive, mocking, or even sinister. Derived from the Latin word cachinnare, it emphasizes the intensity of the laugh.





547
Vocab
Do Androids Dream of Electric Sheep?
Mawkish (MAW-kish): Excessively sentimental, often in a way that is sickening or insipid.





548
Vocab
Lost in a Good Book
(Chicken) vol-au-vent: A small, round, puff pastry case filled with a savory chicken mixture, often served as an appetizer.





549
JavaScript Concepts
TypeScript: A superset of JavaScript that adds static typing, enhancing code quality, maintainability, and developer tooling through type checking.





550
JavaScript Concepts
Angular: A comprehensive framework by Google for building large-scale applications, utilizing TypeScript, two-way data binding, and dependency injection.





551
JavaScript Concepts
Chai: An assertion library that pairs with testing frameworks like Mocha, providing readable and expressive test assertions.





552
JavaScript Concepts
npm (Node Package Manager): The default package manager for Node.js, used to install, share, and manage JavaScript packages and dependencies.





553
JavaScript Concepts
Context API: A React feature that provides a way to pass data through the component tree without prop drilling, useful for simple state management.





554
Logging in Python
Q: How does TimedRotatingFileHandler from the logging.handlers module differ from RotatingFileHandler?

A: TimedRotatingFileHandler rotates log files based on time intervals (e.g., daily at midnight), whereas RotatingFileHandler rotates based on file size (maxBytes).
This allows for log rotation that aligns with time-based requirements instead of size-based thresholds.





555
Logging in Python
Q: What is a practical example of using a custom filter in Python's logging module?

A: Logging only messages that contain specific keywords, such as "database", to a separate log file using a custom filter class.
This allows selective logging based on content, enhancing log organization.





556
Logging in Python
Q: What does logging.disable(logging.CRITICAL) do in Python's logging module?

A: It disables all logging messages at or below the CRITICAL level.
Since CRITICAL is the highest standard level, this effectively silences all log messages.





557
Logging in Python
Q: What should you avoid doing when configuring multiple handlers in Python's logging module?

A: Avoid configuring multiple handlers to write to the same log file unless it's intentional and properly managed to prevent conflicts.
This prevents issues like duplicate log entries and file access errors.





558
Logging in Python
Q: What is one advantage of using dictConfig over fileConfig for logging configuration in Python's logging module?

A: dictConfig allows for more complex and dynamic configurations, often being easier to manage programmatically.
This flexibility makes it suitable for applications that require runtime logging configuration changes.





559
Vocab
Do Androids Dream of Electric Sheep?
Jug-eared (JUHG-eerd): Describing someone with large, protruding ears that resemble the handles of a jug.





560
Vocab
Interval Funds Offer Limited Liquidity:
Interval funds are closed-end investment vehicles that allow investors to redeem shares only at specific, predetermined intervals, such as quarterly or annually, providing limited liquidity compared to traditional mutual funds.





561
Vocab
Structured Credit Combines Debt Instruments:
Structured credit refers to complex financial products created by pooling and repackaging loans, bonds, or other debt obligations, then dividing them into distinct risk-and-return segments called tranches.





562
Vocab
Interval Funds Invest in Less Liquid Assets:
Interval funds typically invest in alternative, less liquid assets like real estate, private equity, private debt, and structured credit, granting investors access to opportunities not typically available through conventional investment vehicles.





563
Vocab
Interval Funds Carry Redemption Risk:
Because interval funds permit redemptions only periodically—and often limit the total amount redeemable in each interval (commonly 5%-25% of assets)—investors may face difficulty liquidating positions quickly if the need arises.





564
JavaScript Concepts
Destructuring: Extracting values from arrays or objects into distinct variables using a concise syntax.





565
JavaScript Concepts
Fetch API / Axios: Tools for making HTTP requests from the browser, allowing communication with backend services and APIs.





566
JavaScript Concepts
Vercel: A cloud platform optimized for frontend frameworks like Next.js, offering easy deployments, serverless functions, and CDN integration.





567
JavaScript Concepts
Service Workers: Scripts that run in the background of web browsers, enabling features like offline functionality and push notifications.





568
JavaScript Concepts
Single-Page Application (SPA): A web application that loads a single HTML page and dynamically updates content without full page reloads.





569
Vocab
Interval Funds May Provide Higher Yields and Diversification:
Interval funds often seek higher returns or income by investing in less liquid, alternative assets, potentially enhancing portfolio diversification beyond traditional stocks and bonds.





570
Vocab
Structured Credit Includes Products like CLOs and CDOs:
Structured credit encompasses instruments such as collateralized loan obligations (CLOs), collateralized debt obligations (CDOs), mortgage-backed securities (MBS), and asset-backed securities (ABS), all designed to repackage and redistribute risk and return.





571
Vocab
Structured Credit Offers Different Risk Levels:
Structured credit products are typically divided into multiple tranches, each offering varying degrees of risk, return, and priority in repayment, allowing investors to select the risk exposure that suits their investment profile.





572
Vocab
Structured Credit Provides Portfolio Diversification:
Investors utilize structured credit products to diversify portfolios beyond traditional bonds or equities, potentially accessing higher yields or returns not typically achievable through standard debt instruments.





573
Vocab
Interval Funds Generally Have Higher Fees and Costs:
Interval funds usually have higher management fees and operational expenses compared to typical mutual funds or ETFs, due to their complexity, specialized asset classes, and active management strategies.





574
JavaScript Concepts
Immutable Data Structures: Data structures that cannot be altered after creation, promoting predictable state management, especially in libraries like Redux.





575
JavaScript Concepts
Middleware: Functions in frameworks like Express.js that have access to request and response objects, used for tasks like authentication and logging.





576
JavaScript Concepts
Responsive Design: Designing web applications to adapt seamlessly across various device sizes and screen resolutions for optimal user experience.





577
JavaScript Concepts
Promises: Objects representing the eventual completion or failure of asynchronous operations, allowing chaining with .then() and .catch().





578
JavaScript Concepts
Material-UI (MUI): A React component library implementing Google's Material Design, offering pre-built, customizable UI components.





579
Vocab
Structured Credit Carries Complexity and Risk:
Structured credit products are often complex and require careful analysis due to risks related to credit quality, liquidity, underlying asset performance, and market conditions, making them suitable primarily for knowledgeable or institutional investors.





580
JavaScript Concepts
Dependency Injection: A design pattern used in frameworks like Angular and NestJS to manage and inject dependencies, promoting modularity and testability.