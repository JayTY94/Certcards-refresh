





1
Azure Developer Associate
This item tests the candidate’s knowledge of implementing solutions that use Azure Service Bus.

A SqlFilter holds a SQL-like conditional expression that is evaluated in the broker against the arriving message’s user-defined properties and system properties. 
The TrueFilter and FalseFilter either cause all arriving messages (true) or none of the arriving messages (false) to be selected for the subscription. 
A CorrelationFilter holds a set of conditions that are matched against one or more of an arriving message's user and system properties.





2
Azure Developer Associate
You have an Azure Service Bus instance.
You need to provide first-in, first-out (FIFO) guarantee for message processing.
What should you configure?

message sessions 
NOT 
message deferral





3
Azure Developer Associate
This item tests the candidate's knowledge of Azure Storage shared access signatures (SAS).

Microsoft Entra ID credentials are required to generate the SAS token. The account used must have the Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey permission, which is present in the following built-in roles: Contributor, Storage Account Contributor, Storage Blob Data Contributor, Storage Blob Data Owner, Storage Blob Data Reader, and Storage Blob Delegator.





4
Azure Developer Associate
Azure Monitor Resource Health alerts are used for infrastructure monitoring, not application performance. 
Azure Service Health provides information about Azure service issues and planned maintenance, not application performance.





5
Azure Developer Associate
In Azure Application Insights, Preaggregated standard metrics are not affected by telemetry sampling and provide accurate real-time data, which makes them suitable for dashboarding and alerting. Increasing the sampling rate or disabling sampling altogether would increase costs and may still not provide accurate metrics due to the volume of data.





6
Azure Developer Associate
This item tests the candidate’s knowledge of configuring web app settings, which is part of creating Azure App Service Web Apps.

In a multi-instance deployment, the ARR Affinity setting ensures a client application is routed to the same instance for the life of the session. WebSocket is a standardized protocol that provides full-duplex communication.





7
Azure Developer Associate
You are a developing a serverless API using Azure Functions. The API is expected to handle a large number of HTTP requests and make outbound requests to a third-party service. The third-party service has a rate limit on the number of requests it can handle per minute.
You need to ensure that the Azure Function does not exceed the rate limit of the third-party service and manage resource utilization effectively.
Which two actions should you perform?

Set the 'maxConcurrentRequests' property in the host.json file to limit the number of parallel executions.
Set the 'maxOutstandingRequests' property in the host.json file to limit the number of outstanding requests at any given time.





8
Azure Developer Associate
You need to deploy an Azure Files share along with a container group to Azure Container Instances (ACI).
Which deployment method should you use?

Azure Resource Manager template
not 
Azure CLI





9
Azure Developer Associate
You are developing an Azure Functions app that will be deployed to a Dedicated plan.
When there is a resource shortage in the app, it must send a “429 Too Busy” response.
You need to apply the appropriate configuration to all functions in a Azure Functions app instance.
Which configuration should you set?

dynamicThrottlesEnabled in the host.json file
not 
maxConcurrentRequests in the function.json file





10
Azure Developer Associate
The delete rule action supports both block blobs and append blobs. The enableAutoTierToHotFromCool, tierToArchive, and tierToCool rule actions only supports block blobs.





11
Azure Developer Associate
Multi-container groups currently support only Linux containers. For Windows containers, Azure Container Instances only supports deployment of a single instance.





12
Azure Developer Associate
3. If you want to mount multiple volumes, what options are at your disposal for deployment?
Azure Resource Manager template and YAML file





13
Azure Developer Associate
A company has an App Service web app that requires a TLS/SSL certificate. The certificate will be used in other App Service apps. The certificate must be automatically renewed with the least management overhead.
You need to add the certificate. What should you do?

Purchase an App Service Certificate
not 
Create a free App Service Managed Certificate





14
Azure Developer Associate
There are two common ways to deploy a multi-container group: use a Resource Manager template or a YAML file. A Resource Manager template is recommended when you need to deploy more Azure service resources when you deploy the container instances.





15
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container
Lease container
Host	The host is a client application instance that listens for and reacts to changes from the change feed.
Delegate





16
Azure Developer Associate
Key-values in App Configuration can optionally have a label attribute. Labels are used to differentiate key-values with the same key. A key app1 with labels A and B forms two separate keys in an App Configuration store. By default, a key-value has no label. To explicitly reference a key-value without a label, use \0 (URL encoded as %00).





17
Azure Developer Associate
Azure App Configuration stores configuration data as key-value pairs. You can use any unicode character in key names entered into App Configuration except for *, ,, and \. These characters are reserved.





18
Azure Developer Associate
Feature management is a modern software-development practice that decouples feature release from code deployment and enables quick changes to feature availability on demand. It uses a technique called feature flags (also known as feature toggles, feature switches, and so on) to dynamically administer a feature's lifecycle.





19
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container
Lease container
Host
Delegate	The delegate is code within the client application that will implement business logic for each batch of changes.





20
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container
Lease container	The lease container serves as a storage mechanism to manage state across multiple change feed consumers (clients).
Host
Delegate





21
Azure Developer Associate
Configuration data stored in an App Configuration store, which includes all keys and values, is encrypted at rest and in transit. App Configuration isn't a replacement solution for Azure Key Vault. Don't store application secrets in it.





22
PnP PowerShell
Grant-PnPAzureADAppPermission (PnP.PowerShell)
Grants specific API permissions to an Azure AD application directly from PowerShell. Streamlines the permission assignment process for SharePoint access.





23
PnP PowerShell
Get-PnPWeb (PnP.PowerShell)
Fetches details about the current SharePoint site, including properties like language, template, and navigation settings. Useful for site audits and management.





24
PnP PowerShell
Get-AzureADServicePrincipal (AzureAD)
Retrieves information about service principals in Azure Active Directory. Used to manage application identities and their associated permissions.





25
PnP PowerShell
Token Expiry
The duration an OAuth 2.0 access token remains valid before needing renewal. Scripts must handle token refresh logic to maintain uninterrupted API access.





26
PnP PowerShell
Client Secret (client_secret)
A confidential key associated with an Azure AD application, used alongside the client ID to authenticate the application in secure authentication flows.





27
PnP PowerShell
ConvertFrom-SecureString (Microsoft.PowerShell.Security)
Transforms a secure string object back into plain text. Should be used cautiously to avoid exposing sensitive information.





28
PnP PowerShell
SharePoint Site URL
The web address of a SharePoint site (e.g., https://accuityllp.sharepoint.com/sites/ASB), serving as the entry point for accessing site resources and APIs.





29
PnP PowerShell
Parameter Set Conflict
Occurs when incompatible or conflicting parameters are used together in a PowerShell cmdlet, leading to errors as PowerShell cannot determine the intended operation.





30
PnP PowerShell
Remove-PnPField (PnP.PowerShell)
Deletes a field from a SharePoint list or library. Useful for cleaning up unused or outdated columns programmatically.





31
PnP PowerShell
OAuth 2.0 Authorization Code Flow
An interactive authentication method involving user login and authorization, suitable for applications that can securely handle client secrets and require delegated permissions.





32
PnP PowerShell
Invoke-WebRequest Parameters (Microsoft.PowerShell.Utility)
Includes -Method, -Uri, -Headers, -Body, and others. Facilitates detailed HTTP request configurations for interacting with web services.





33
PnP PowerShell
SecureString (System.Security)
Represents text that should be kept confidential, such as passwords. Provides methods to encrypt and handle sensitive information securely in scripts.





34
PnP PowerShell
SharePoint App Permissions
Defines the access rights granted to SharePoint apps via AppInv.aspx or Azure AD. Controls what resources and actions an app can perform within SharePoint.





35
PnP PowerShell
SharePoint CSOM (Client-Side Object Model)
A programming model that allows interaction with SharePoint data from client applications. Provides an alternative to REST API for performing SharePoint operations.





36
PnP PowerShell
OAuth 2.0 Client Credentials Flow
An authentication method where applications authenticate using a client ID and client secret, enabling server-to-server interactions without user involvement.





37
PnP PowerShell
Chained Cmdlets
Using multiple cmdlets in a sequence where each cmdlet processes data output from the previous one. Enhances script efficiency and readability.





38
PnP PowerShell
App-Only Authentication
A mode where applications authenticate without a user context, using client credentials to perform operations based on granted permissions. Suitable for automated scripts and services.





39
Asynchronous Python
Throttling
Limiting concurrency in Python async code (e.g., with a Semaphore) to avoid overwhelming servers or APIs.





40
Asynchronous Python
Timeouts
Techniques like asyncio.wait_for() used in Python to limit how long a coroutine can run before it's cancelled.





41
Asynchronous Python
async
A keyword used in Python to declare an asynchronous function (async def), enabling the use of await inside it.





42
Asynchronous Python
Event Loop
The core of Python’s asyncio system, which schedules and runs asynchronous tasks cooperatively on a single thread.





43
Asynchronous Python
aiohttp
An asynchronous HTTP client/server library in Python used to make non-blocking web requests.





44
Asynchronous Python
Semaphore
A semaphore is a synchronization tool that limits the number of threads that can access a resource simultaneously, often used for managing a pool of resources.





45
Asynchronous Python
Daemon Thread
Daemon threads are background threads that do not prevent the program from exiting; they automatically close when all non-daemon threads have finished.





46
Asynchronous Python
asyncio.create_task()
Schedules a coroutine to run concurrently as a Task in Python's event loop and starts it immediately.





47
Asynchronous Python
asyncio.gather()
Runs multiple asynchronous Python tasks concurrently and waits for all to finish, optionally collecting exceptions.





48
Asynchronous Python
Task
A wrapper around a coroutine in Python’s asyncio that is managed by the event loop and can be cancelled, awaited, or monitored.





49
Asynchronous Python
Non-blocking I/O
A key feature of async Python where I/O operations (e.g., file or network access) don’t block the event loop.





50
Asynchronous Python
asyncio.CancelledError
An exception in Python that is raised inside a coroutine when it’s cancelled, allowing it to perform cleanup.





51
Asynchronous Python
Thread Pool Executor
A thread pool executor, provided by the concurrent.futures module, is an abstraction that manages a pool of worker threads and simplifies scheduling and executing asynchronous tasks.





52
Asynchronous Python
Coroutine Object
The result of calling an async def function; it must be awaited or scheduled with the event loop to execute.





53
JavaScript Concepts
Destructuring: Syntax for unpacking values from arrays or properties from objects into distinct variables, improving code readability and conciseness.





54
JavaScript Concepts
Template Literals: Use template literals for string interpolation and multi-line strings. They are enclosed by backticks (`) and allow you to embed expressions using ${expression}. For example:

const name = 'Jay';
const greeting = `Hello, ${name}!`;





55
JavaScript Concepts
Parcel: A zero-configuration bundler that automatically handles various file types, offering faster builds with minimal setup.





56
JavaScript Concepts
Responsive Design: Designing web applications to adapt seamlessly across various device sizes and screen resolutions for optimal user experience.





57
JavaScript Concepts
Testing Library: A family of libraries that encourage testing best practices by focusing on user interactions rather than implementation details.





58
JavaScript Concepts
Array reverse Function: The reverse method reverses the order of the elements in an array in place.
let array = [1, 2, 3, 4, 5];
array.reverse();
console.log(array); // Output: [5, 4, 3, 2, 1]





59
JavaScript Concepts
Closures: Functions that retain access to their lexical scope even when executed outside their original context, enabling data privacy and function factories.





60
JavaScript Concepts
Array Length Property: Remember to use array.length to get the number of elements in an array. This is a common mistake, but it's crucial for iterating through arrays correctly.
(I had mistakenly used array.len instead)





61
JavaScript Concepts
MDN Web Docs: Comprehensive documentation for web technologies, including JavaScript, HTML, CSS, and various APIs.





62
JavaScript Concepts
Template Literals: Enhanced string syntax using backticks, allowing embedded expressions and multi-line strings for better readability.





63
JavaScript Concepts
RESTful APIs: Architectural style for designing networked applications, using HTTP requests to access and manipulate data through standard endpoints.





64
JavaScript Concepts
Virtual DOM: An in-memory representation of the real DOM used by libraries like React to optimize and batch DOM updates efficiently.





65
JavaScript Concepts
Unique Names: All JavaScript variables must be identified with unique names, called identifiers. These names can be short (like x and y) or more descriptive (like age, sum, totalVolume). Identifiers can contain letters, digits, underscores, and dollar signs, but they must begin with a letter, underscore, or dollar sign1.





66
JavaScript Concepts
Using Object.keys() with for...of Loop: The Object.keys() method returns an array of the object's own enumerable property names. You can then use the for...of loop to iterate over these keys1.





67
JavaScript Concepts
Syntax to convert an aray to a set and back again to remove duplicates
  export function removeDuplicates(playlist) { //playlist is an array of songs
    const play_set = new Set (playlist)
    return Array.from(play_set)
  }





68
JavaScript Concepts
Front: Can you nest string templates within each other?
Back: Yes, you can nest string templates within each other.
  const name = 'Jay';
  const nestedTemplate = `Hello, ${`dear ${name}`}!`;
  console.log(nestedTemplate); // Output: Hello, dear Jay!





69
JavaScript Concepts
By default, all parameters defined in the function declaration are optional in JavaScript. If you provide fewer arguments than there are parameters, the missing arguments will be undefined inside the function, see Null and Undefined.





70
JavaScript Concepts
When ... appears on the left-hand side of an assignment, those three dots are known as the rest operator. The three dots together with a variable name is called a rest element. It collects zero or more values, and stores them into a single array.

    const [a, b, ...everythingElse] = [0, 1, 1, 2, 3, 5, 8];
    everythingElse;
    // => [1, 2, 3, 5, 8]





71
JavaScript Concepts
Case Sensitivity: JavaScript identifiers are case-sensitive. This means that y and Y are considered different variables. It's important to be consistent with the use of case to avoid errors in your code1.





72
JavaScript Concepts
Delete Operator: You can remove a key-value pair from an object using the delete operator.

const obj = { key1: "value1", key2: "value2", key3: "value3" };
delete obj.key3; // Removes key3





73
JavaScript Concepts
Using for...in Loop: The for...in loop is useful for iterating over all enumerable properties of an object, including inherited ones. To avoid iterating over inherited properties, use the hasOwnProperty method1.





74
JavaScript Concepts
To create a deep copy of an object in JavaScript, you can use the JSON.parse(JSON.stringify(object)) method. This approach works well for simple objects, such as those with string:number pairs, and ensures that the original object remains unmodified.





75
JavaScript Concepts
Bracket Notation: You can also use bracket notation, which is useful when the property name is dynamically determined.

const obj = { key1: "value1", key2: "value2" };
obj["key3"] = "value3"; // Adds key3 with value3





76
JavaScript Concepts
In many cases, it makes sense to assign a more appropriate default value than undefined. This can be done by specifying default parameters directly in the function definition.

function someName(param1 = defaultValue1, param2 = defaultValue2) {
  // ...
}





77
JavaScript Concepts
Using Object.entries(): The Object.entries() method returns an array of the object's own enumerable property [key, value] pairs. You can use the for...of loop to iterate over these pairs1.





78
Vocab
Something Rotten, Fforde
De rigueur
adjective | duh ree-GUR
Required by etiquette or current fashion; socially obligatory.
Example: Wearing black tie was de rigueur at the gala.





79
Vocab
Well of Lost Plots, Fforde
The Decameron
noun | the deh-KAM-er-on
A 14th-century collection of 100 novellas by Giovanni Boccaccio, framed as stories told by ten people sheltering from the Black Death.
Example: The Decameron opens with its narrators deciding to entertain themselves with tales during the plague.





80
Vocab
Anacoluthon
noun
SPA: an-uh-koh-LOO-thon
IPA: /ˌænəkəˈluːθɒn/

A grammatical construction in which a sentence begins in one way but ends in another, often disrupting the expected syntax or logical sequence.
Example: His speech was full of anacoluthons, making it difficult to follow his intended argument.





81
Vocab
Well of Lost Plots, Fforde
Insouciance
noun | in-SOO-see-ance
Casual lack of concern; indifference.
Example: His insouciance about deadlines frustrated his teammates.





82
Vocab
Well of Lost Plots, Fforde
Lych-gate
noun | LICH-gate
A roofed gateway at the entrance to a churchyard, often where a coffin rests before burial.
Example: The mourners paused under the ancient lych-gate before entering the churchyard.





83
Vocab
How to Sell a Haunted House, Hendrix
Stollen (bread)
Pronunciation: SHTOH-luhn
Definition: A traditional German fruit bread containing dried fruits, nuts, and spices, often dusted with powdered sugar and associated with Christmas festivities.





84
Vocab
Well of Lost Plots, Fforde
Foolscap
noun | FOOL-skap
A large sheet of writing paper, traditionally about 13 × 17 inches.
Example: He wrote his thesis on foolscap before transferring it to the computer.





85
Vocab
Lacunary
adjective
SPA: LACK-yoo-nary
IPA: /ˈlækjʊnəri/

Characterized by gaps or missing portions, particularly in texts or manuscripts.
Example: The ancient manuscript was lacunary, with several sections of the text lost to time.





86
Vocab
Something Rotten, Fforde
Nacelle
noun | nuh-SELL
An enclosed housing on an aircraft or wind turbine, typically containing engines or equipment.
Example: The jet’s engine nacelle was inspected before takeoff.





87
Vocab
Something Rotten, Fforde
Salver
noun | SAL-ver
A flat tray, typically made of silver, used for serving food or drinks.
Example: The butler carried the tea on a polished salver.





88
Vocab
Well of Lost Plots, Fforde
Panoply
noun | PAN-uh-plee

A full suit of armor.

A complete or splendid array of something.
Example: The museum’s exhibit displayed a panoply of medieval weaponry.





89
Vocab
Well of Lost Plots, Fforde
(naval) Pinnance
noun | PIN-ans
A small boat carried aboard a larger ship, used for transporting personnel or light cargo.
Example: The admiral boarded the pinnance for his trip ashore.





90
Vocab
Jingo, Pratchett
Windlass
noun | WIND-luhs
A mechanical device used for lifting or hauling, typically consisting of a horizontal cylinder turned by a crank or motor.
Example: The sailors used a windlass to raise the anchor.





91
Vocab
How to Sell a Haunted House, Hendrix
Trimalleolar Fracture
Pronunciation: try-mal-ee-OH-lar FRAK-chur
Definition: A severe ankle fracture involving all three malleoli—the medial, lateral, and posterior parts of the tibia and fibula—typically requiring surgical repair.





92
Vocab
Something Rotten, Fforde
Buddleia
noun | BUD-lee-uh
A flowering shrub, also known as the butterfly bush, popular for attracting pollinators.
Example: The garden was full of buddleia, drawing in bees and butterflies.





93
Vocab
Pharmacogenetic Markers
Pronunciation: FAR-mah-koh-juh-NET-ik MAR-kurz
Definition: Genetic indicators that predict how an individual will respond to specific medications, guiding personalized treatment for better efficacy and reduced side effects.





94
Vocab
Jingo, Pratchett
Crinoline
noun | KRIN-uh-lin
A stiffened or structured fabric or petticoat worn under a skirt to give it a full shape, popular in the 19th century.
Example: Her gown was supported by a wide crinoline that swayed as she walked.





95
Vocab
Lost in a Good Book
Perfidious: Deceitful and untrustworthy, often describing betrayal or disloyalty.





96
Vocab
Well of Lost Plots, Fforde
Gerund
noun | JER-und
A verb form ending in -ing that functions as a noun.
Example: In the sentence “Swimming is fun,” swimming is a gerund.





97
Vocab
How to Sell a Haunted House, Hendrix
Truckle
Pronunciation: TRUHK-uhl
Definition: To act in a subservient or groveling manner, often to gain favor or avoid punishment; can also refer to a small wheel of cheese.





98
Vocab
Lost in a Good Book
Phaeton (bodied automobile): A type of early open-top car with no fixed roof, evoking the design of 19th-century horse-drawn carriages.





99
Azure Compute Gallery
Azure Marketplace Image as a Base – Using a pre-configured image from Azure Marketplace to deploy new VMs.





100
Azure Compute Gallery
Subscription Quotas – Limits on the number of image versions, definitions, and replication regions.





101
Azure Compute Gallery
Image Retention Policy – A strategy for keeping or removing older image versions to manage storage costs and subscription quotas.





102
Azure Compute Gallery
Maximum Image Versions Per Definition – Each image definition can store up to 1,000 versions.





103
Azure Compute Gallery
Subscription Scope – ACG is tied to a single subscription, but images can be shared across multiple subscriptions under the same Azure AD tenant.





104
Azure Compute Gallery
Storage Costs for ACG – Storage pricing depends on:
Number of versions retained
Number of replicas in different regions
Image size





105
Azure Compute Gallery
Shared Image Gallery Reader Role – An RBAC role that allows users to access images for deployment but not modify them.





106
Azure Compute Gallery
Shared Image – An image in ACG that is accessible across multiple subscriptions with proper RBAC configuration.





107
Azure Compute Gallery
Azure Compute Gallery Roles:
Reader – Can list and read images.
Contributor – Can create and manage images.
Owner – Full control over the gallery.
Shared Image Gallery Reader – Read-only access to images across subscriptions.





108
Azure Compute Gallery
Cross-Tenant Sharing – Not supported in ACG; images cannot be shared between different Azure Active Directory (Azure AD) tenants.





109
Azure Compute Gallery
Capture from Existing VM – Creating an image by generalizing or specializing a VM and capturing it into ACG.





110
Azure Compute Gallery
SAS Token (Shared Access Signature) – A temporary, secure URL-based access method often used for sharing VHD files in Azure Storage.





111
Azure Compute Gallery
Image Version – A specific iteration of an image (e.g., 1.0.0, 2.1.0), stored in one or more regions.





112
Azure Compute Gallery
Region Availability – Not all Azure regions support Compute Gallery replication.
Azure Government & Sovereign Clouds – Some regions (e.g., China, US Gov) have restricted ACG availability.





113
VMWare
ESXi Host Profiles

A feature that allows administrators to configure, enforce, and standardize settings across multiple ESXi hosts in a cluster. Host profiles ensure consistency in configuration, such as networking, storage, and security settings, across all hosts in a given environment.





114
VMWare
Type 1 Hypervisor

A hypervisor that runs directly on physical hardware, without an underlying operating system. Examples: VMware ESXi, Microsoft Hyper-V.





115
VMWare
vSphere HA Agent

A software agent installed on each ESXi host in a vSphere Cluster to enable High Availability (HA). The HA agent monitors the health of the host and communicates with other hosts to restart VMs automatically in the event of a host failure.





116
VMWare
Fault Tolerance (FT)

A VMware feature that provides continuous availability by creating a shadow VM on a different host that automatically takes over in case of a host failure, ensuring zero downtime.





117
VMWare
ESXi Datastore

A storage container used by ESXi hosts to store virtual machine disk files (VMDKs), ISO images, templates, and other data related to virtual machines. Datastores can be backed by shared storage solutions, such as SAN (Storage Area Network), NFS (Network File System), or vSAN.





118
VMWare
Live Migration

The process of moving a running virtual machine from one physical host to another with no interruption in service, typically using vMotion.





119
VMWare
Host Profiles Compliance

A feature that checks whether an ESXi host is in compliance with the host profile configurations. If an ESXi host deviates from the standard profile (e.g., security or networking settings), it can be flagged for correction.





120
VMWare
vSphere Fault Tolerance (FT) Primary and Secondary VM

In Fault Tolerance (FT), there are two VMs: the primary VM (the active VM) and the secondary VM (the shadow VM). The primary VM runs on one ESXi host, while the secondary VM is running in real-time on another host. If the primary VM fails, the secondary VM takes over immediately without any downtime.





121
VMWare
ESXi Logging and Troubleshooting

A set of logs and diagnostic tools built into VMware ESXi for monitoring system health, performance, and troubleshooting issues. Logs like vmkernel.log and hostd.log provide valuable information about system events, errors, and VM status for troubleshooting.





122
VMWare
vMotion

A VMware feature that allows the live migration of virtual machines between ESXi hosts with no downtime.





123
VMWare
VMFS (Virtual Machine File System)

A high-performance file system used by VMware ESXi to store virtual machine disk files (VMDKs) on shared storage. VMFS is optimized for virtual machine workloads and allows multiple ESXi hosts to access the same datastore simultaneously.





124
VMWare
vSphere

VMware's suite of products for virtualization, including vCenter Server, ESXi, vMotion, and more, used to create and manage virtualized data centers.





125
VMWare
Host Bus Adapter (HBA)

A hardware component in ESXi hosts that provides connectivity between the host and storage systems (e.g., SAN). HBAs are used to connect the ESXi host to the storage network, facilitating data transfers to and from virtual machines.





126
VMWare
Shared Storage

A storage system that is accessible by multiple ESXi hosts in a cluster, essential for vMotion, HA, and Storage vMotion.





127
VMWare
ESXi Console Access

The ability to access the ESXi host’s console directly via the physical server or over a network using remote tools like SSH or the vSphere Client. This allows administrators to troubleshoot and configure the host or to work around issues when vCenter Server is unavailable.





128
Python
How can you compare two Path objects for equality regardless of their string representations? By resolving both paths and comparing them.

path1 = Path('/home/user/file.txt').resolve()
path2 = Path('./file.txt').resolve()
are_equal = path1 == path2





129
Python
Q:
Which Python module provides an object-oriented approach to handling filesystem paths?

A:
pathlib





130
Python
Q:
What is the advantage of using context managers for resource management?

A:
They ensure that resources are properly acquired and released, even if errors occur, promoting cleaner and more reliable code.





131
Python
Q:
How can you create a context manager using a generator function?

A:
By using the @contextmanager decorator from the contextlib module and yielding control within the function.





132
Python
Q:
What are the two methods that a context manager class must implement?

A:
__enter__() and __exit__(exc_type, exc_value, traceback).





133
Python
Q:
How can you obtain command-line arguments in a Python script?

A:
Using sys.argv





134
Python
Q:
How does the os.walk() function handle permission errors by default?

A:
It can be configured to print an error message and continue by using the onerror parameter.





135
Python
Q:
How do you make a custom object iterable?

A:
By implementing the __iter__() method that returns an iterator (which can be the object itself with a __next__() method).





136
Python
Q:
What does an exit code of 0 typically signify in a Python script?

A:
Successful execution without errors.





137
Python
Q:
How can you raise an exception inside a generator from outside?

A:
Using the .throw(type, value=None, traceback=None) method.





138
PowerShell Modules
Install-Module

Definition: A cmdlet used to download and install a module from a repository like the PowerShell Gallery.
Explanation: Specifies the module name and installation scope. Example: Install-Module -Name Az -Scope CurrentUser.





139
PowerShell Modules
Get-Module -ListAvailable

Definition: Lists all modules installed on the system that are available to be imported.
Explanation: Shows modules in all module paths, regardless of whether they are currently loaded.





140
PowerShell Modules
ActiveDirectory Module

Definition: A module for managing Active Directory objects.
Explanation: Provides cmdlets to manage users, groups, and other AD components. Example cmdlet: Get-ADUser.





141
PowerShell Modules
Get-InstalledModule

Definition: A cmdlet that retrieves modules installed on the system.
Explanation: Useful for managing and updating modules. Example: Get-InstalledModule | Update-Module updates all installed modules.





142
PowerShell Modules
Module Auto-Import

Definition: See Auto-Import above.
Explanation: Allows modules to be imported automatically when their commands are used, streamlining workflow.





143
PowerShell Modules
Exporting Functions and Cmdlets
Definition: The process of making functions and cmdlets available to users when a module is imported.
Explanation: Defined in the module's .psm1 file and specified in the module manifest (.psd1) under FunctionsToExport, CmdletsToExport, etc.





144
PowerShell Modules
AllUsers Scope

Definition: An installation scope that makes a PowerShell module available to all users on the system.
Explanation: When installing a module with -Scope AllUsers, it requires administrative privileges and places the module in a system-wide directory, typically C:\Program Files\PowerShell\Modules.





145
PowerShell Modules
Installing a Module:
Install-Module -Name Az -Scope CurrentUser

Importing a Module:
Import-Module -Name Az





146
PowerShell Modules
Dependencies

Definition: Other modules or components that a PowerShell module requires to function correctly.
Explanation: Dependencies are specified in a module's manifest and must be present for the module to operate as intended. They can be viewed using properties like RequiredModules.





147
PowerShell Modules
Get-Help

Definition: A cmdlet that displays help information for other cmdlets and functions.
Explanation: Provides detailed documentation and examples. Example: Get-Help Get-AzVM -Detailed.





148
PowerShell Modules
Module Load Order

Definition: The sequence in which modules are loaded into a PowerShell session.
Explanation: Important when resolving cmdlet conflicts or ensuring dependencies are loaded first.





149
FSLogix
During a user's session when the connection to any storage provider becomes unhealthy, FSLogix queues up all the changes and then flushes them to the providers when they return to a healthy state.





150
FSLogix
Q: What is the role of Profile Disk Differencing in FSLogix?
A: Profile Disk Differencing allows FSLogix to create differencing VHDX disks, where changes to the user profile are stored in separate files, reducing the load on the main profile disk. This improves performance by ensuring faster read/write operations and reducing storage overhead.





151
FSLogix
Remote Desktop Services (RDS):
A session-based technology where multiple users share a single server or a pool of servers. RDS provides centralized management and efficient resource sharing, although performance can vary with heavy concurrent usage.





152
FSLogix
Multi-Session Environment:
A setup where multiple users share the same operating system instance (typical of RDS and multi-session AVD deployments). This environment requires special considerations—such as the use of a Redirector Driver—to handle concurrent access and prevent file locking issues.





153
FSLogix
FSLogix Application Masking:
A component of FSLogix used to control application visibility. It isolates and hides applications (and their dependencies) from users who should not access them, based on group policies, thereby simplifying desktop environments.





154
FSLogix
Antivirus Software Exclusions for FSLogix Container Files:
A best practice in FSLogix deployments. It involves configuring antivirus software to exclude FSLogix container files (both Profile and Office Containers stored in VHD/VHDX format) from scanning. This prevents potential performance degradation and issues during file access.





155
FSLogix
Q: What does the FSLogix Profile Container do when a user is logging into multiple Azure Virtual Desktops (AVD)?
A: FSLogix mounts the same Profile Container (VHDX) to any virtual desktop the user logs into, ensuring that their profile settings, documents, and application preferences are consistent and immediately available across all virtual machines. This provides a unified experience regardless of which VM the user accesses.





156
FSLogix
Storage Type (SMB vs. Local Disk):
The selection of storage options for hosting Profile Containers. In AVD, using an SMB share (such as Azure Files) is generally recommended over local disks, as it can provide better performance and reliability in a distributed cloud environment.





157
FSLogix
Cloud Cache uses the locally mounted container to provide periodic updates to the remote storage providers. Cloud Cache is designed to insulate users from short-term or intermittent local (inner-region, close proximity) storage issues.





158
FSLogix
A full VHD(x) clone is performed when Cloud Cache determines, at sign in, that a storage provider isn't at the same sequence. During this operation, all pending writes are kept in the local cache until all storage providers are at the same sequence. Once complete, the flush operation begins sending new data to the storage providers.





159
FSLogix
SMB Share (Server Message Block):
A network file-sharing protocol used in Windows environments. SMB shares, like those provided by Azure Files, are commonly used for storing FSLogix Profile Containers, ensuring centralized and efficient access.





160
FSLogix
During a first-time sign-in, FSLogix creates the container for the user in C:\ProgramData\FSLogix\Cache and mounts the container to the virtual machine. Next, FSLogix sets up all the necessary redirections for the user's profile. Then the User Profile Service creates the user's profile into the local cache.





161
Azure DevOps Pipelines
In Azure DevOps, what command is used to run a pipeline manually from the Azure DevOps portal?
Answer: "Run pipeline" button in the Azure DevOps portal.





162
Azure DevOps Pipelines
Which YAML element in an Azure DevOps pipeline defines the steps or tasks to be executed?
Answer: steps





163
Azure DevOps Pipelines
How do you run a pipeline on a self-hosted agent in Azure DevOps?
Answer: pool: self-hosted





164
Azure DevOps Pipelines
What is the purpose of the 'checkout' step in an Azure DevOps YAML pipeline?
Answer: It checks out the source code from the repository for use in the pipeline.





165
Azure DevOps Pipelines
What is the default trigger for a YAML-based pipeline in Azure DevOps?
Answer: A trigger based on code changes in a Git repository.





166
Azure DevOps Pipelines
What does the trigger keyword do in an Azure DevOps YAML pipeline?
Answer: It defines the branches or events that will cause the pipeline to run, such as a commit to a specific branch.





167
Azure DevOps Pipelines
What does the 'variables' keyword do in a YAML pipeline?
Answer: It declares the variables that can be used throughout the pipeline.





168
Azure DevOps Pipelines
How do you specify a condition for a job or stage to run in an Azure DevOps YAML pipeline?
Answer: You use the condition keyword, such as condition: succeeded() to define when a job should run based on the status of previous jobs.





169
C# Basics
What is the basic syntax for declaring a variable in C#?

C#:
int x = 10;





170
C# Basics
How is a class defined in C#?

C#:
public class Dog {
    public string Name { get; set; }
    
    public Dog(string name) {
        Name = name;
    }
}





171
C# Basics
How do you use LINQ methods like Select, Where, and OrderBy in C#?

C#: LINQ methods provide a concise way to query and manipulate collections.
Example:
var numbers = new List<int> { 1, 2, 3, 4, 5 };
var evenNumbers = numbers.Where(n => n % 2 == 0).OrderBy(n => n);





172
C# Basics
How do you define a function in C#?

C#:
public int Add(int x, int y) {
    return x + y;
}





173
C# Basics
C#: Delegates are type-safe function pointers, allowing methods to be passed as parameters.
Example:
delegate void GreetDelegate();

GreetDelegate greet = () => Console.WriteLine("Hello!");
greet();





174
C# Basics
What is the syntax for a for loop in C#?

C#:
for (int i = 0; i < 5; i++) {
    Console.WriteLine(i);
}





175
C# Basics
How do nullable types work in C#?

C#: Nullable types allow value types (like int) to represent null in addition to their normal range of values.
Example:
int? x = null;





176
C# Basics
An enum is a distinct value type that defines a set of named constants.
Example:
public enum Day { Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday }

Day today = Day.Monday;





177
C# Basics
What is LINQ in C# and how is it used?

C#:
LINQ (Language Integrated Query) is used to query collections in a declarative way.
Example:
var squares = from x in Enumerable.Range(0, 5) select x * x;





178
C# Basics
Inheritance allows one class to inherit members (fields, properties, methods) from another class.
Example:
public class Animal {
    public void Speak() {
        Console.WriteLine("Animal speaks");
    }
}





179
C# Basics
.NET uses a garbage collector that automatically manages memory. The GC.Collect() method can be called manually if needed, but generally not required.





180
Azure Functions + PP365
API Gateway Integration
Connecting Azure Functions with an API gateway to manage and secure API traffic. Integrating with services like Azure API Management allows Python Azure Functions to benefit from features like rate limiting, authentication, and monitoring, enhancing the security and scalability of exposed APIs.





181
Azure Functions + PP365
Virtual Environment Activation
The process of activating a Python virtual environment to isolate project dependencies. When developing Python Azure Functions, activating the virtual environment ensures that the correct packages are used, preventing conflicts and maintaining a clean development setup.





182
Azure Functions + PP365
HTTP Triggers
A type of function trigger that activates an Azure Function in response to HTTP requests. Python Azure Functions with HTTP triggers can handle RESTful API calls, webhooks, and other HTTP-based interactions, making them suitable for building APIs and integrating with web services.





183
Azure Functions + PP365
Environment Variables
Variables set in the operating environment that can be accessed by applications. In Python Azure Functions, environment variables are used to store configuration data, secrets, and connection strings securely, allowing functions to adapt to different environments without code changes.





184
Azure Functions + PP365
Dependency Management
The practice of managing external libraries and packages that a Python application relies on. In Azure Functions, managing dependencies through requirements.txt ensures that all necessary packages are installed and versioned correctly, maintaining consistency between development and production environments.





185
Azure Functions + PP365
Function App Secrets
Sensitive information required by Azure Functions, such as API keys or connection strings. Python Azure Functions manage secrets through environment variables, Azure Key Vault integrations, or managed identities, ensuring that sensitive data is stored securely and accessed only by authorized functions.





186
Azure Functions + PP365
Power Platform CLI
A command-line interface tool for managing Power Platform resources, including Power Apps, Power Automate, and Dataverse. The Power Platform CLI facilitates automation, scripting, and advanced management tasks, enabling developers and administrators to interact with the platform efficiently.





187
Azure Private DNS
Azure DNS Resolver
Definition: The internal DNS resolver provided by Azure for resolving domain names within Azure services.
Feature: The Azure DNS Resolver resolves DNS queries for resources in the linked VNets and provides an efficient mechanism for internal DNS management.





188
Azure Private DNS
Dynamic DNS (DDNS)
Definition: A DNS service that automatically updates DNS records when an IP address changes.
Feature: Dynamic DNS in Azure Private DNS helps automatically update DNS records (e.g., when VM IP addresses change) without manual intervention.





189
Azure Private DNS
MX Record (Mail Exchange Record):
Definition: A DNS record that specifies the mail servers responsible for receiving email on behalf of a domain.
Feature: You can use MX records in your Private DNS Zone to manage email services for internal applications.





190
Azure Private DNS
Private DNS Zone:
Definition: A container within Azure that holds DNS records for a private domain, resolvable only within the associated Azure Virtual Networks (VNets).
Feature: Azure Private DNS Zones allow automatic DNS resolution for internal resources within Azure, simplifying DNS management for internal services.





191
Azure Private DNS
CNAME Record (Canonical Name Record):
Definition: A DNS record that maps one domain name to another domain name (aliasing).
Feature: Azure supports CNAME records, which allow you to alias internal resources, like services, within a Private DNS Zone.





192
Azure Private DNS
Custom DNS Server
Definition: A DNS server specified for use in the VNet settings instead of the default Azure DNS.
Feature: Custom DNS servers can be used in combination with Azure Private DNS if you need to resolve DNS queries using on-premises or third-party DNS infrastructure.





193
Azure Private DNS
PTR Record (Pointer Record):
Definition: A DNS record that resolves an IP address to a domain name, typically used for reverse lookups.
Feature: Azure supports PTR records for reverse DNS lookups within a Private DNS Zone, which helps with troubleshooting and security.





194
Terraform
Local Values:
Definition: Local values allow you to define computed variables within a configuration to simplify expressions or avoid repetition.
Usage: Useful for intermediate calculations or to centralize common values.

Example:

locals {
  app_name = "myapp"
  instance_count = length(var.instance_ids)
}





195
Terraform
You can create and use Terraform modules that codify the standards for deploying and managing services in your organization, allowing teams to efficiently deploy services in compliance with your organization’s practices.





196
Terraform
Ternary Operator (Conditional Expression):
A shorthand for conditional logic in interpolation.

Syntax:
${condition ? "true_value" : "false_value"}

Example:
${var.env == "prod" ? "Production" : "Non-production"}





197
Terraform
Provisioning infrastructure across multiple clouds increases fault-tolerance, allowing for more graceful recovery from cloud provider outages. However, multi-cloud deployments add complexity because each provider has its own interfaces, tools, and workflows. Terraform lets you use the same workflow to manage multiple providers and handle cross-cloud dependencies.





198
Terraform
Dynamic Blocks:
Definition: Allow you to construct nested blocks dynamically based on complex data structures.
Usage: Ideal for when the number of nested blocks is not fixed and depends on variable data.

Example:

dynamic "ingress" {
  for_each = var.ingress_rules
  content {
    from_port = ingress.value.from
    to_port   = ingress.value.to
    protocol  = ingress.value.protocol
  }
}





199
Terraform
Meta-Arguments:
Definition: Special arguments like count, depends_on, and lifecycle that control resource behavior and relationships.
Count: Enables creating multiple instances of a resource.

resource "aws_instance" "web" {
  count = var.instance_count
  # Other configuration...
}





200
Logging in Python
Q: Why is it important to centralize logging configuration in large applications using Python's logging module?

A: Centralizing logging configuration ensures consistency, makes it easier to manage, and prevents scattered and conflicting logging setups across different modules.
This approach streamlines logging management and enhances maintainability.





201
Logging in Python
Q: What is the impact of setting a logger's level higher than its handler's level in Python's logging module?

A: Log messages must meet or exceed the logger's level to be processed by the handler, regardless of the handler's own level.
This means that even if a handler is set to a lower level, it won't handle messages below the logger's threshold.





202
Logging in Python
Q: What is a NullHandler used for in Python's logging module?

A: To discard log messages, preventing "No handler" warnings in library code.
This is useful for libraries to ensure they don't interfere with the application's logging configuration.





203
Logging in Python
Q: Why might you choose to use Loguru over Python's built-in logging module?

A: For simpler syntax, reduced boilerplate, and additional features like colorized output and automatic exception logging.
Loguru offers a more user-friendly and modern interface compared to the standard logging module.





204
Logging in Python
Q: If a child logger has propagate set to False, what does this mean?

A: It will not pass log messages to the parent logger.
This isolates the logger, ensuring that messages are handled only by its own handlers.





205
TSQL
Table Variables:

Declared using DECLARE and used similarly to temporary tables, often for smaller data sets with a more limited scope.





206
TSQL
Pivoting Data:

Use the PIVOT operator to transform rows into columns for reporting or data summarization.





207
TSQL
COALESCE Function:

Returns the first non-null value from a list of expressions (e.g., COALESCE(ts_invoiceid, inv.ts_invoiceid)).





208
TSQL
Q: When should you use window functions instead of GROUP BY?
A: When you want to calculate totals, ranks, or running sums without reducing the number of rows in your result set.





209
TSQL
Temporary Tables:

Created with a hash (#) prefix to hold intermediate results for complex or staged queries.





210
TSQL
Common Table Expressions (CTEs):

Defined with the WITH clause to create temporary result sets within a query.
Recursive CTEs: Handle hierarchical data by repeatedly referencing the CTE itself.





211
TSQL
Q: What happens in T-SQL if you use GROUP BY but select columns that are not aggregated or not in the GROUP BY clause?
A: You get an error. All columns in the SELECT must either be part of the GROUP BY clause or be wrapped in an aggregate function like SUM, AVG, MAX, etc.





212
TSQL
Q: What does SUM(x) OVER (PARTITION BY y) do?
A: It sums the values of x for each group of rows where y has the same value, but keeps each row intact in the result set.





213
Azure AD Authentication
Role Assignment
Links a principal (user, group, service principal) to a role at a defined scope, granting specific permissions to interact with Azure resources.





214
Azure AD Authentication
Service Principal Authentication Methods
Authentication for service principals can be done using Client Secret, Client Certificate, or Managed Identity, which provides secure, credential-free access to Azure services.





215
Azure AD Authentication
App Registration vs Enterprise Application
App Registration defines the app’s identity, while Enterprise Application represents the actual instance of the app within an Azure AD tenant.





216
Azure AD Authentication
Role Inheritance
Roles assigned at a higher scope (e.g., subscription) are inherited by resources at lower scopes (e.g., resource groups, resources).





217
Azure VM + Developer
Inbound NAT Rule
A networking rule used with load balancers to map a public-facing port to a specific VM's internal port, enabling external access to individual VMs in backend pools.





218
Azure VM + Developer
Test Pyramid
A testing strategy that favors many fast unit tests, fewer integration tests, and minimal end-to-end tests to maintain speed and reliability.





219
Azure VM + Developer
Debug Adapter Protocol
A VS Code protocol that enables consistent debugging experiences across languages by abstracting debugger backends from the editor interface.





220
Azure VM + Developer
.ssh/known_hosts
A file used by SSH to store server fingerprints, preventing man-in-the-middle attacks by validating that the server hasn’t changed unexpectedly.





221
Azure VM + Developer
Persistent vs Ephemeral
A comparison between VMs that retain data and configurations across reboots (persistent) vs temporary VMs used for disposable environments like Codespaces (ephemeral).





222
Azure VM + Developer
Dependency Management
The process of tracking and resolving software dependencies, ensuring your project uses compatible versions of external libraries.





223
Azure VM + Developer
Remote Development
A workflow where the code is executed and debugged on a remote machine (e.g., cloud VM), while edited locally through a tool like VS Code, keeping compute and environment remote.





224
Azure VM + Developer
.env File
A flat file storing environment variables (like `DEBUG=true`, `API_KEY=xyz`) for local development and testing, typically excluded from version control.





225
Azure VM + Developer
Formatter
A tool that automatically reformats source code to follow a defined style guide, improving consistency and readability (e.g., Prettier, Black).





226
Azure VM + Developer
X11 Forwarding
An SSH technique that lets GUI applications run on a remote Linux machine but display on your local computer; requires an X server locally.





227
Azure VM + Developer
Availability Zone
A physically isolated datacenter location within an Azure region, designed for high availability by spreading resources across separate zones with independent power, cooling, and networking.





228
Azure VM + Developer
Makefile / Task Runner
A scriptable command list (via `make` or tools like `npm run`) used to automate tasks such as builds, tests, or environment setup in a dev workflow.





229
Jane Eyre, Bronte
Basin and Ewer
(BAY-sin and YOO-er) A bowl (basin) and jug (ewer) used together for hand or face washing, commonly found before the advent of modern plumbing.





230
Jane Eyre, Bronte
Beldame
(BEL-dame) An old woman, sometimes used respectfully for a grandmother, or pejoratively to describe a hag or crone.





231
Jane Eyre, Bronte
Hips and Haws
Fruits of wild roses (hips) and hawthorn trees (haws), commonly seen in hedgerows. These red or orange berries are associated with autumn and are used in herbal remedies and preserves.





232
RAG Project
test_client()
A method on a Quart app that gives you a fake browser-like interface to make test requests like client.get("/endpoint").





233
RAG Project
Object ID (OID)
Unique identifier for a user in Azure AD, used to scope their files or actions.





234
Email Auth and Security
MX Toolbox

An online suite of tools for diagnosing and analyzing DNS records.
Checks SPF, DKIM, and DMARC configurations.
Helps administrators verify the correctness of their email authentication setups.





235
Email Auth and Security
MUA (Mail User Agent)

An email client used by end-users to send, receive, and manage their emails.
Provides the interface for users to interact with their email accounts.
Examples include Microsoft Outlook, Mozilla Thunderbird, and Gmail.





236
DAX
KEEPFILTERS syntax is simple.

dax
CALCULATE(
  <expression>,
  KEEPFILTERS( <BooleanFilter1> [, <BooleanFilter2>, … ] )
)





237
DAX
KEEPFILTERS supports multiple predicates.
You can pass several comma-separated Boolean tests into KEEPFILTERS, and each one will be intersected both with each other and with the external context.





238
DAX
KEEPFILTERS returns BLANK when there’s no overlap.
If your outer context excludes every value in your KEEPFILTERS set, the measure will come back blank—no rows remain after intersection.





239
Azure Developer Associate
You need to implement an Azure Storage lifecycle policy for append blobs.
Which rule action should you use?

delete





240
Azure Developer Associate
Which two services guarantee FIFO delivery and once-only processing? (Choose two.)

• Azure Service Bus with duplicate detection
• Azure Service Bus with sessions enabled





241
Azure Developer Associate
What three steps secure and document partner APIs in Azure API Management?

  Create an APIM instance and import the existing API.
  Configure OAuth 2.0 in APIM for secure access.
  Implement APIM policies to enforce rate limits and quotas.





242
Azure Developer Associate
You can use Azure Container Registry Tasks to store and build container images in Azure. Tasks use a standard Dockerfile to create and store the container images in Azure Container Registry without the need for local Docker tooling.





243
Azure Developer Associate
You have an Azure event hub. You need to add partitions to the event hub.
Which code segment should you use?

az eventhubs eventhub update --resource-group MyResourceGroupName --namespace-name MyNamespaceName --name MyEventHubName --partition-count 12





244
Azure Developer Associate
What default retention period does Azure Monitor keep high-frequency metrics “hot” in its native metrics store?

93 days.





245
Azure Developer Associate
You can specify external volumes to mount within a container group. You can map those volumes into specific paths within the individual containers in a group. Supported volumes include:

Azure file share
Secret
Empty directory
Cloned git repo





246
Azure Developer Associate
With a configurable restart policy, you can specify that your containers are stopped when their processes are completed. Because container instances are billed by the second, you're charged only for the compute resources used while the container executing your task is running.





247
Azure Developer Associate
You manage the deployment of an Azure Cosmos DB account.
You must define custom logic by using the .NET SDK change feed processor to process changes that the change feed reads.
You need to select the appropriate change feed processor component.
Which component should you use?

delegate 
not 
monitored container





248
Azure Developer Associate
The eventual consistency level maximizes throughput and minimizes latency. The bounded staleness consistency level provides lower throughput and higher latency comparing with the remaining answer choices. The consistent prefix consistency level provides higher throughput and lower latency for write operations than the session consistency level but lower throughput and higher latency than the eventual consistency levels.





249
Azure Developer Associate
Azure Container Instances can mount an Azure file share created with Azure Files. Azure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol.





250
Azure Developer Associate
The top-level resource in Azure Container Instances is the container group. A container group is a collection of containers that get scheduled on the same host machine. Containers in a container group share a lifecycle, resources, local network, and storage volumes. It's similar in concept to a pod in Kubernetes.





251
Azure Developer Associate
Setting environment variables in your container instances allows you to provide dynamic configuration of the application or script run by the container. These environment variables are similar to the --env command-line argument to docker run.





252
Azure Developer Associate
Container groups share an IP address and a port namespace on that IP address. To enable external clients to reach a container within the group, you must expose the port on the IP address and from the container. Because containers within the group share a port namespace, port mapping isn't supported.





253
Azure Developer Associate
Each Azure App Configuration feature flag has two parts: a name and a list of one or more filters that are used to evaluate if a feature's state is on (that is, when its value is True). A filter defines a use case for when a feature should be turned on.

When a feature flag has multiple filters, the filter list is traversed in order until one of the filters determines the feature should be enabled.





254
Azure Developer Associate
In the .NET SDK for Azure Cosmos DB for NoSQL, which method of the Container class is used to create a new change feed estimator?


GetChangeFeedEstimatorBuilder





255
Azure Developer Associate
As the .NET SDK for Azure Cosmos DB for NoSQL change feed processor handles changes, it functions as a time-based pointer. The pointer moves forward in time across the change feed and sends batches of changes to the delegate to run business logic.





256
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container	This container is monitored for any insert or update operations. These changes are then reflected in the feed.
Lease container
Host
Delegate





257
Azure Developer Associate
Azure App Configuration encrypts sensitive information at rest using a 256-bit AES encryption key provided by Microsoft. Every App Configuration instance has its own encryption key managed by the service and used to encrypt sensitive information.





258
Azure Developer Associate
In Azure App Configuration,
Feature manager: A feature manager is an application package that handles the lifecycle of all the feature flags in an application. The feature manager typically provides extra functionality, such as caching feature flags and updating their states.





259
Azure Developer Associate
For the .NET SDK for Azure Cosmos DB for NoSQL change feed processor, the library expects a delegate of type ChangesHandler<> that takes in a generic type to represent your serialized individual items. The delegate includes two parameters; a read-only list of changes and a cancellation token.





260
PnP PowerShell
Set-PnPWeb (PnP.PowerShell)
Configures properties of a SharePoint site, such as title, description, and logo. Enables automated site customization and configuration management.





261
PnP PowerShell
Invoke-RestMethod Parameters
Key parameters include -Method (HTTP method), -Uri (API endpoint), -Headers (authentication and content type), and -Body (data payload), crucial for API interactions.





262
PnP PowerShell
Azure Key Vault Integration
Securely stores and manages secrets, keys, and certificates used by applications. Enhances security by preventing hardcoding of sensitive information in scripts.





263
PnP PowerShell
Remove-PnPFile (PnP.PowerShell)
Deletes a specified file from a SharePoint library or folder. Useful for automating cleanup tasks or managing outdated documents programmatically.





264
PnP PowerShell
JSON Conversion
Transforms PowerShell objects to JSON format and vice versa using ConvertTo-Json and ConvertFrom-Json. Essential for handling REST API payloads and responses.





265
PnP PowerShell
Add-PnPField (PnP.PowerShell)
Adds a new field (column) to a SharePoint list or library. Supports various field types and configurations for customized data structures.





266
PnP PowerShell
Set-PnPFileCheckedIn (PnP.PowerShell)
Checks in a previously uploaded file in SharePoint, optionally adding comments. Essential for managing document versions and maintaining collaboration workflows.





267
PnP PowerShell
ConvertTo-SecureString (Microsoft.PowerShell.Security)
Transforms plain text into a secure string object in PowerShell. Essential for handling sensitive data like passwords and client secrets securely.





268
PnP PowerShell
Add-PnPFile (PnP.PowerShell)
Uploads a file to a specified SharePoint document library or folder. Supports parameters like -Path for local files and -Stream for uploading via a data stream.





269
PnP PowerShell
Throttling in SharePoint
Limits the number of API requests to prevent abuse and ensure service stability. Requires implementing retry logic and handling throttling responses in scripts.





270
PnP PowerShell
PSCredential Object (Microsoft.PowerShell.Security)
Stores and manages user credentials securely within PowerShell. Used for authenticating commands that require user-based permissions.





271
PnP PowerShell
Import-Clixml (Microsoft.PowerShell.Utility)
Deserializes PowerShell objects from an XML format file. Allows retrieving previously exported objects, maintaining their original structure and properties.





272
PnP PowerShell
Remove-PnPUserFromGroup (PnP.PowerShell)
Removes a user from a SharePoint group. Helps in maintaining accurate group memberships and enforcing access policies through scripts.





273
PnP PowerShell
JSON Payloads
Data formatted in JSON used in REST API requests and responses. PowerShell uses ConvertTo-Json and ConvertFrom-Json for handling JSON data structures.





274
PnP PowerShell
PowerShell Pipeline
A feature that allows the output of one cmdlet to be passed as input to another cmdlet. Enables chaining commands for efficient data processing.





275
PnP PowerShell
Environment Variables
Variables that are set at the operating system level and accessible within PowerShell. Used to store configuration data and secrets securely without hardcoding.





276
PnP PowerShell
Remove-PnPListItem (PnP.PowerShell)
Deletes an item from a SharePoint list. Useful for maintaining data integrity and automating data cleanup processes





277
Asynchronous Python
async for (async iterator)
Used to iterate over async sequences in Python, such as streaming data or asynchronous file lines.





278
Asynchronous Python
return_exceptions=True (in gather)
A parameter in Python's asyncio.gather() that returns exceptions as part of the results instead of cancelling all tasks on error.





279
Asynchronous Python
Deadlock
A state in async Python where tasks wait on each other indefinitely, halting progress—usually due to poor coordination.





280
Asynchronous Python
pytest-asyncio
A Python testing plugin that allows you to write and run tests for asynchronous code using async def and await.





281
Asynchronous Python
asyncio.wait_for()
Runs a coroutine with a timeout in Python; raises TimeoutError if the coroutine doesn’t finish in time.





282
Asynchronous Python
Concurrency (Asyncio)
Running multiple asynchronous Python tasks in overlapping time, achieved cooperatively through the event loop.





283
Asynchronous Python
Race Condition
An issue in async Python code where multiple coroutines access shared data without proper coordination, leading to bugs.





284
Asynchronous Python
Thread
A thread is an independent sequence of execution within a program. Multiple threads can run concurrently within the same process.





285
Asynchronous Python
Idle Task
An asynchronous Python coroutine that’s currently waiting (e.g., on I/O or sleep), allowing others to run in the meantime.





286
Asynchronous Python
await
A keyword that pauses an asynchronous Python function until the awaited coroutine or awaitable completes.





287
Asynchronous Python
Backpressure
A condition in async Python where producers send data faster than consumers can process; addressed using queues or throttling.





288
Asynchronous Python
Thread Safety
Thread safety means that code or data structures function correctly when accessed by multiple threads simultaneously, usually achieved with proper synchronization.





289
Asynchronous Python
asyncio.Future
A low-level object representing a pending result in Python's asyncio; used internally by Tasks.





290
Asynchronous Python
asyncio.Semaphore
A concurrency control mechanism in Python’s asyncio used to limit how many coroutines run at once.





291
JavaScript Concepts
Express.js: A minimalist web framework for Node.js, facilitating routing, middleware integration, and handling HTTP requests/responses.





292
JavaScript Concepts
A callback function is a function that is passed as an argument to another function and is executed after some operation has been completed. This allows for more flexible and modular code, especially when dealing with asynchronous operations.





293
JavaScript Concepts
Promises: Objects representing the eventual completion or failure of asynchronous operations, allowing chaining with .then() and .catch().





294
JavaScript Concepts
Array slice Function: The slice method returns a shallow copy of a portion of an array into a new array object.
let array = [1, 2, 3, 4, 5];
let slicedArray = array.slice(1, 4); // Output: [2, 3, 4]





295
JavaScript Concepts
Next.js: A React framework for server-side rendering and static site generation, enhancing performance and SEO for React applications.





296
JavaScript Concepts
Chai: An assertion library that pairs with testing frameworks like Mocha, providing readable and expressive test assertions.





297
JavaScript Concepts
Middleware: Functions in frameworks like Express.js that have access to request and response objects, used for tasks like authentication and logging.





298
JavaScript Concepts
Variable Declarations (let, const, var): Keywords to declare variables with different scopes and mutability. let and const are block-scoped, while var is function-scoped.





299
JavaScript Concepts
In this example, sayGoodbye is passed as a callback to greet and is executed after the greeting message.

function greet(name, callback) {
    console.log('Hello ' + name);
    callback();
}
function sayGoodbye() {
    console.log('Goodbye!');
}
greet('Jay', sayGoodbye);





300
JavaScript Concepts
Front: What are the benefits of using callback functions?

Back:
Flexibility: Allows functions to be more modular and reusable.
Asynchronous Handling: Enables handling of asynchronous operations like network requests and timers.
Improved Code Organization: Helps in organizing code by separating concerns and improving readability.





301
JavaScript Concepts
Component-Based Architecture: Building applications by encapsulating functionality into independent, reusable components, commonly used in frontend frameworks.





302
JavaScript Concepts
Context API: A React feature that provides a way to pass data through the component tree without prop drilling, useful for simple state management.





303
JavaScript Concepts
NaN is not equal to itself (NaN !== NaN), so using case NaN: in a switch statement will not work.
Use the isNaN function to check for NaN values before the switch statement or within a switch statement using switch (true).





304
JavaScript Concepts
Type Coercion to boolean commonly occurs for
    the condition of an if statement
    the first operand of the ternary operator ?
    the operand of the logical NOT operator !
    the operands of the logical AND && and OR || operators (the result of the expression is one of the operands, not necessarily a boolean)





305
JavaScript Concepts
Built-In Methods: JavaScript objects come with built-in methods like Object.keys(), Object.values(), and Object.entries() which allow you to interact with the object's properties in various ways4.





306
JavaScript Concepts
Callback functions are functions passed as arguments. This programming pattern creates a sequence of function calls in both synchronous and asynchronous programming. Writing a callback function is no different from writing a function; however, the callback function must match the signature defined by the calling function.





307
JavaScript Concepts
Dot Notation: You can add a new key-value pair to an object using dot notation. This is useful when you know the name of the property.

const obj = { key1: "value1", key2: "value2" };
obj.key3 = "value3"; // Adds key3 with value3





308
JavaScript Concepts
Reserved Words: Identifiers cannot be the same as JavaScript reserved words (keywords). Reserved words are predefined in the language and have special meanings, such as var, let, const, function, and class. Using these as identifiers will result in syntax errors1.





309
JavaScript Concepts
In certain contexts, JavaScript will automatically convert a value to another data type before it evaluates some statement. This implicit conversion is called type coercion.





310
JavaScript Concepts
Object.assign(): This method can be used to copy the values of all enumerable own properties from one or more source objects to a target object.

const obj = { key1: "value1", key2: "value2" };
Object.assign(obj, { key3: "value3" }); // Adds key3 with value3





311
JavaScript Concepts
Front: How do you access the raw string content of a template literal?

Back: You can access the raw string content using the String.raw tag.
  const rawString = String.raw`Hello\nWorld`;
  console.log(rawString); // Output: Hello\nWorld





312
JavaScript Concepts
For objects, by default String returns an unhelpful text.

String({ key: 'value' });
// => '[object Object]'





313
JavaScript Concepts
The basic syntax for a string template in JavaScript uses backticks (`) and ${} for embedding expressions.
  const name = 'Jay';
  const greeting = `Hello, ${name}!`;
  console.log(greeting); // Output: Hello, Jay!





314
JavaScript Concepts
Checks potentially very long playlsit for a specific track by converting to a set and using the Set.has() funciton.
  export function hasTrack(playlist, track) {
    const play_set = new Set (playlist)
    return play_set.has(track)
  }





315
JavaScript Concepts
When ... appears on the right-hand side of an assignment, it's known as the spread operator. It expands an array into a list of elements. Unlike the rest element, it can appear anywhere in an array literal expression, and there can be more than one.

    const oneToFive = [1, 2, 3, 4, 5];
    const oneToTen = [...oneToFive, 6, 7, 8, 9, 10];
    oneToTen;
    // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]





316
Vocab
Lost in a Good Book
Impresario: A manager or producer of theatrical, musical, or other artistic performances, often entrepreneurial in nature.





317
Vocab
Well of Lost Plots, Fforde
Milliner
noun | MIL-ih-ner
A maker or seller of women’s hats.
Example: She apprenticed with a Parisian milliner to learn haute-couture hat design.





318
Vocab
Something Rotten, Fforde
Cazique
noun | kuh-ZEEK
A native chief in parts of Latin America and the Caribbean during the colonial period.
Example: The Spanish chroniclers often referred to the local ruler as a cazique.





319
Vocab
Something Rotten, Fforde
Brocade (dress)
noun | bro-KAYD
A rich fabric woven with a raised pattern, often in gold or silver thread, used in formal garments.
Example: Her brocade dress shimmered under the ballroom lights.





320
Vocab
Something Rotten, Fforde
Owen Wister

An American writer best known for his novel The Virginian (1902), considered the first true Western novel.
Example: Owen Wister’s work laid the foundation for cowboy fiction.





321
Vocab
Something Rotten, Fforde
Creosote
noun | KREE-uh-soht
A dark, oily liquid used to preserve wood, especially in railway ties and fences.
Example: The fence smelled strongly of creosote after being treated.





322
Vocab
Jingo, Pratchett
Cruet
noun | KROO-it
A small container or bottle for holding liquids like oil or vinegar, often part of a dining set.
Example: The table was set with a cruet of balsamic vinegar and olive oil.





323
Vocab
Jingo, Pratchett
Effendi
noun | eh-FEN-dee
A title of respect or courtesy for a man, especially in Turkey or formerly in the Ottoman Empire.
Example: The effendi greeted us warmly as we entered his home.





324
Vocab
Well of Lost Plots, Fforde
Frontispiece
noun | FRUNT-ih-peess
An illustration or decorative page facing the title page of a book.
Example: The antique volume featured an engraved frontispiece of its author.





325
Vocab
Well of Lost Plots, Fforde
Pinafore
noun | PIN-uh-for

A sleeveless garment worn over a dress, like an apron.

A light sleeveless dress.
Example: She wore a blue gingham pinafore while painting in the studio.





326
Vocab
Jingo, Pratchett
Pro tem
adverb/adjective | proh TEM
Short for pro tempore, meaning “for the time being” or temporary.
Example: He served as chairperson pro tem until a permanent replacement was elected.





327
Vocab
Jingo, Pratchett
Equerry
noun | EK-wuh-ree
An officer of a royal household who attends or assists members of the royal family.
Example: The equerry accompanied the prince during his official visit.





328
Vocab
Jingo, Pratchett
Cornice
noun | KOR-nis
A decorative molding that crowns a building or furniture element, often found where the wall meets the ceiling.
Example: The ornate cornice added elegance to the room’s architecture.





329
Vocab
Something Rotten, Fforde
Zane Grey

An American author known for popularizing the Western genre in the early 20th century. Best Known for Riders of the Purple Sage (1912).
Example: Zane Grey’s novels helped define the mythic American frontier.





330
Vocab
How to Sell a Haunted House, Hendrix
Crewelwork
Pronunciation: KROO-uhl-wurk
Definition: A type of surface embroidery using wool yarn to create decorative floral or animal motifs on linen or cotton fabric.





331
Vocab
Structured Credit Provides Portfolio Diversification:
Investors utilize structured credit products to diversify portfolios beyond traditional bonds or equities, potentially accessing higher yields or returns not typically achievable through standard debt instruments.





332
Vocab
How to Sell a Haunted House, Hendrix
Debride a Wound
Pronunciation: dih-BREED uh woond
Definition: The medical removal of dead, damaged, or infected tissue from a wound to promote healing and reduce the risk of infection.





333
Vocab
Well of Lost Plots, Fforde
Reigate
noun | RYE-gate
A market town in Surrey, England.
Example: They enjoyed a day trip to Reigate, exploring its castle ruins.





334
Vocab
Lost in a Good Book
Pelmet(s): A decorative framework or fabric cover above a window, concealing curtain fittings or rods.





335
Vocab
Jingo, Pratchett
Scull
noun/verb | SKUHL
A type of oar used in rowing, or the act of propelling a boat using such oars.
Example: She learned to scull on the calm waters of the lake.





336
Vocab
Lost in a Good Book
Wisteria: A climbing flowering plant with fragrant, cascading purple or white blooms, often grown on pergolas or trellises.





337
Azure Compute Gallery
Specialized Image – A VM image that retains system-specific settings, including machine name, user accounts, and configurations—ideal for cloning.





338
Azure Compute Gallery
Shared Image Gallery (SIG) – The previous name for Azure Compute Gallery (Microsoft rebranded it).





339
Azure Compute Gallery
ACG	Azure Compute Gallery
AIB	Azure Image Builder
RBAC	Role-Based Access Control
SAS	Shared Access Signature





340
Azure Compute Gallery
VHD	Virtual Hard Disk
VM	Virtual Machine
IaC	Infrastructure as Code
CI/CD	Continuous Integration/Continuous Deployment
SemVer	Semantic Versioning





341
Azure Compute Gallery
Generalized Image – A VM image that has been "cleaned" of system-specific data (using Sysprep for Windows or waagent -deprovision for Linux) to be reused across multiple VM deployments.





342
Azure Compute Gallery
Replication Region Limit – Each image version can be replicated to a maximum of 50 regions.





343
Azure Compute Gallery
License Considerations – Some images (e.g., RHEL, Windows Server) require Azure Hybrid Benefit or additional licensing.





344
Azure Compute Gallery
One Compute Gallery Per Subscription – ACG is bound to a single Azure subscription.





345
Azure Compute Gallery
Image Definition – A logical representation of an image, specifying OS type, publisher, and general metadata.





346
Azure Compute Gallery
Deployment Latency – The time required for a newly published image to become available for VM creation.





347
Azure Compute Gallery
Compute Gallery Resource – The top-level container that stores multiple image definitions and versions.





348
Azure Compute Gallery
Managed Image – A single, region-bound image stored in Azure, lacking versioning and replication features found in ACG.





349
Azure Compute Gallery
Packer – An open-source tool that automates multi-cloud VM image building, often used with Terraform or Azure DevOps.
Terraform Compute Gallery Module – A way to define ACG image builds and deployments using Infrastructure as Code (IaC).





350
VMWare
DirectPath I/O

A feature in VMware ESXi that allows direct access to a physical device (e.g., a network adapter, GPU, or storage controller) by a virtual machine, bypassing the hypervisor for better performance. This is typically used for workloads requiring high performance, such as GPU acceleration or network-intensive applications.





351
VMWare
VMware Horizon

A VMware product used for Virtual Desktop Infrastructure (VDI), enabling the delivery of virtual desktops and applications.





352
VMWare
ESXi Host

A physical server that runs the VMware ESXi hypervisor to host virtual machines (VMs).





353
VMWare
VMware ESXi

A Type 1 hypervisor that runs on physical servers to create and manage virtual machines in a VMware environment.





354
VMWare
vSphere Distributed Resource Scheduler (DRS) Affinity Rules

Rules that can be configured in DRS to control the placement of virtual machines on ESXi hosts in a vSphere Cluster. Affinity rules can force specific VMs to run on the same host or on separate hosts, ensuring better workload management.





355
VMWare
vCenter Server

VMware's centralized management platform for multiple ESXi hosts and their associated virtual machines, used for configurations, monitoring, and management tasks.





356
VMWare
Virtual Machine Snapshot

A point-in-time copy of the state, data, and configuration of a virtual machine. Snapshots allow for the restoration of the VM to a previous state, which is useful for testing, troubleshooting, or backup purposes.





357
VMWare
ESXi Lockdown Mode

A security feature that restricts access to an ESXi host to only a few trusted sources, such as the vCenter Server or specific administrators. When Lockdown Mode is enabled, direct access to the ESXi host (such as via SSH or the vSphere Client) is disabled, except for users who have administrative privileges.





358
VMWare
vCenter Server Appliance (VCSA)

A Linux-based virtual appliance version of vCenter Server, which is optimized for VMware environments. The VCSA is a lightweight, pre-configured appliance designed to simplify deployment and management of vCenter Server without needing a Windows server.





359
VMWare
ESXi Free License (VMware ESXi Free)

A free version of VMware ESXi that provides basic virtualization capabilities without advanced features like vMotion, HA, or DRS. It's limited to 8 physical CPU cores and does not include access to vCenter Server for centralized management.





360
VMWare
Host Failure

When a physical ESXi host becomes unavailable due to hardware failure, power loss, or other issues, potentially affecting the VMs running on it.





361
VMWare
vMotion Network

A dedicated network connection used for transferring virtual machine memory and CPU state during a vMotion migration. This network should be optimized for high throughput and low latency to ensure smooth VM migration without performance degradation.





362
VMWare
vMotion Compatibility

The requirement for shared storage and network configuration to allow seamless migration of virtual machines between hosts without downtime.





363
VMWare
vSphere Distributed Switch (vDS)

A virtual switch that allows the central management of network configurations across multiple ESXi hosts. A vDS provides enhanced features like port mirroring, private VLANs, and traffic shaping for advanced network management in VMware environments.





364
Python
How do you resolve a relative path to an absolute path using pathlib?

from pathlib import Path
relative_path = Path('some/relative/path')
absolute_path = relative_path.resolve()





365
Python
Q:
Explain the difference between except Exception as e and except (ValueError, TypeError) as e.

A:
except Exception as e catches all exceptions that inherit from Exception, while except (ValueError, TypeError) as e only catches ValueError and TypeError exceptions.





366
Python
Q:
What is the primary purpose of exit codes in Python scripts?

A:
To communicate the termination status of a script to the operating system or calling process.





367
Python
Q:
What method is used to gracefully terminate a generator?

A:
The .close() method.





368
Python
Q:
Explain the concept of generator pipelines.

A:
Generator pipelines involve chaining multiple generators together, where each generator processes data and passes it to the next, enabling efficient and modular data processing.





369
Python
Q:
What is the advantage of using yield from in a generator?

A:
yield from delegates part of the generator’s operations to another generator, simplifying code and allowing for the composition of generators.





370
Python
Q:
How can you define a custom exception in Python?

A:
By creating a new class that inherits from the built-in Exception class.
Example:
class MyCustomError(Exception):
    pass





371
Python
Q:
How do you retrieve the next value from a generator named gen?

A:
Using the built-in next(gen) function.





372
Python
Q:
How does the iter() function work with iterables?

A:
The iter() function returns an iterator object from an iterable by calling its __iter__() method.





373
Python
Which pathlib method can be used to iterate recursively through all files matching a pattern?

for file in Path('/path/to/directory').rglob('*.txt'):
    print(file)





374
PowerShell Modules
PSReadLine Module

Definition: A module that enhances the command-line editing experience in PowerShell.
Explanation: Provides features like syntax highlighting, auto-completion, and customizable key bindings.





375
PowerShell Modules
Auto-Import

Definition: A feature in PowerShell that automatically imports a module when a cmdlet from that module is invoked.
Explanation: Starting from PowerShell 3.0, modules can be auto-imported, eliminating the need to manually run Import-Module for each module you use.





376
PowerShell Modules
Connect-AzAccount

Definition: A cmdlet from the Az module that authenticates your session with Azure.
Example Usage: Connect-AzAccount prompts for Azure credentials to manage Azure resources.





377
PowerShell Modules
Module Manifest Properties

Definition: Specific attributes defined in a .psd1 file that describe module metadata.
Explanation: Includes properties like ModuleVersion, Author, RequiredModules, FunctionsToExport, etc.





378
PowerShell Modules
Scope (Installation)

Definition: Determines whether a module is installed for all users or just the current user.
Explanation: Controlled via the -Scope parameter in Install-Module. Options include CurrentUser and AllUsers.





379
PowerShell Modules
New-AzResourceGroup

Definition: Creates a new Azure Resource Group.
Example Usage: New-AzResourceGroup -Name "TestResourceGroup" -Location "EastUS".





380
PowerShell Modules
PowerShell Module

Definition: A package that contains PowerShell cmdlets, functions, scripts, and other resources.
Explanation: Extends PowerShell’s functionality and can be shared or reused across different environments and users.





381
PowerShell Modules
Update-Module

Definition: A cmdlet used to update an installed module to its latest version from the repository.
Explanation: Example: Update-Module -Name Az updates the Az module. To update all modules: Get-InstalledModule | Update-Module.





382
PowerShell Modules
New-AzVM

Definition: Deploys a new Azure Virtual Machine.
Example Usage: New-AzVM -ResourceGroupName "TestResourceGroup" -Name "TestVM" -Location "EastUS" -Image "Win2019Datacenter".





383
PowerShell Modules
Module.dll

Definition: A dynamic link library file that can be part of a PowerShell module.
Explanation: Contains compiled code (e.g., C#) that can be used by PowerShell modules for enhanced performance or functionality.





384
PowerShell Modules
Ensure scripts use the correct module versions to maintain compatibility.
Example:
Import-Module -Name Az -RequiredVersion 5.0.0





385
FSLogix
Q: Which format does FSLogix use to store user profile data?
A: FSLogix uses the VHDX (Virtual Hard Disk) format to store user profile data in containers.





386
FSLogix
Q: How does FSLogix improve Office 365 performance in Azure Virtual Desktop?
A: FSLogix isolates Office 365 data (such as Outlook, Teams, OneDrive) in a container (VHDX), reducing load times and ensuring that data is quickly accessible without syncing delays.





387
FSLogix
Profile Container:
A core FSLogix component that encapsulates the entire user profile in a VHD/VHDX file. This approach improves logon/logoff times and reduces issues associated with traditional roaming profiles by loading a single container instead of numerous individual files.





388
FSLogix
Q: What is the main difference between FSLogix Profile Containers and traditional roaming profiles?
A: FSLogix uses VHDX containers to store user profiles, ensuring portability and faster logons, while traditional roaming profiles can become fragmented and inconsistent across multiple virtual machines.





389
FSLogix
Redirector Driver:
A mechanism within FSLogix that intercepts and reroutes file system I/O operations aimed at profile containers. It helps mitigate file locking issues—especially in multi-session environments—by ensuring controlled access to VHD/VHDX files.





390
FSLogix
Data is written to all storage providers regardless of which provider is used during data hydration.
Performance (latency, utilization, bottlenecks) of a storage provider affects its sync status with the local copy.
Having one (1) or more provider that is behind in updates from local cache could be an indicator of an under performing storage provider.





391
FSLogix
When the local cache doesn't contain the data requested by the file system, Cloud Cache hydrates (reads and copies) the data from 1 of the remote storage providers to the local cache. This operation is also part of the sign in process when populating the local cache for the user's profile.





392
FSLogix
FSLogix Agent Log:
A log file generated by the FSLogix agent that provides detailed diagnostic information. It is crucial for troubleshooting issues related to mounting Profile Containers and other FSLogix operations.





393
FSLogix
Q: What is FSLogix App Masking, and how does it relate to managing applications in virtual desktops?
A: FSLogix App Masking is a feature that allows administrators to control which applications are visible to which users in a virtual desktop environment. This "masks" applications based on user roles, ensuring that users only see the apps they have permissions for, without the need for separate application installations.





394
FSLogix
All data written to the user's profile is temporarily stored as block-level cache objects in the same directory. Those block-level cache objects are then committed to the local cache. Before the block-level cache objects are created, the writes into the user's profile are processed in memory through a proxy file.





395
FSLogix
VHD/VHDX:
Virtual hard disk file formats used by FSLogix Profile Containers to store user profiles. They are optimized for efficient I/O operations and are crucial for fast loading times in virtual environments.





396
Azure DevOps Pipelines
What is the default working directory for a pipeline job in Azure DevOps?
Answer: $(Build.SourcesDirectory)





397
Azure DevOps Pipelines
How do you use stages with dependencies in Azure DevOps YAML pipelines?
Answer: You can define dependsOn between stages to specify the execution order. Stages will run sequentially based on the dependencies defined, ensuring that one stage only runs after another has completed.





398
Azure DevOps Pipelines
In Azure DevOps, what is the use of the strategy keyword in a pipeline matrix?
Answer: The strategy keyword allows you to define different combinations of variables or configurations for matrix jobs, enabling parallel execution with different environments or settings.





399
Azure DevOps Pipelines
What is the main purpose of a YAML file in Azure DevOps pipelines?
Answer: To define and configure pipeline processes, including steps, tasks, and environments.





400
Azure DevOps Pipelines
How do you add a manual approval gate before a pipeline proceeds to the next stage?
Answer: Set a ApprovalRequired flag on the pipeline's stages.





401
Azure DevOps Pipelines
What does the resources keyword define in a YAML pipeline?
Answer: The resources keyword allows you to define external resources such as repositories, containers, or pipelines that a pipeline will use or depend on.





402
Azure DevOps Pipelines
How do you specify a deployment environment like 'staging' or 'production' in a YAML pipeline?
Answer: Use the environment keyword, e.g., environment: 'staging'.





403
Azure DevOps Pipelines
How do you cache dependencies in Azure DevOps pipelines to speed up builds?
Answer: Use the cache task in the YAML file to store and reuse files between pipeline runs. This can help speed up build times by caching dependencies.





404
C# Basics
What is the role of namespaces in C#?

C#: Namespaces organize classes, structs, and other types into logical groups.
Example:
using System;
using System.Linq;





405
C# Basics
How do you write an if-statement in C#?

C#:
if (x > 10) {
    Console.WriteLine("x is greater than 10");
}





406
C# Basics
What are common libraries and frameworks in C#/.NET?

Web: ASP.NET, Blazor.
Data: LINQ, Entity Framework.
UI: Windows Forms, WPF.





407
C# Basics
How do you handle exceptions in C#?

C#:
try {
    int x = 1 / 0;
}
catch (DivideByZeroException) {
    Console.WriteLine("Cannot divide by zero");
}





408
C# Basics
Indexers allow objects to be indexed like arrays. They enable you to access elements in an object using the array-like syntax.
Example:
public class Student {
    private string[] grades = new string[3];

    public string this[int index] {
        get { return grades[index]; }
        set { grades[index] = value; }
    }
}





409
C# Basics
What are the key access modifiers in C#?

public: Accessible anywhere.
private: Accessible only within the same class.
protected: Accessible within the same class and derived classes.
internal: Accessible within the same assembly.





410
C# Basics
Tuples allow grouping multiple values into a single object without defining a class.
Example:
var person = (Name: "John", Age: 30);
Console.WriteLine(person.Name);  // Output: John





411
C# Basics
Generics allow you to define classes, methods, or data structures with type parameters, enabling type safety and reusability.
Example:
public class Box<T> {
    public T Value { get; set; }
}

var intBox = new Box<int> { Value = 10 };





412
C# Basics
How is inheritance implemented in C#?

public class Dog : Animal {
    public void Bark() {
        Console.WriteLine("Dog barks");
    }
}





413
C# Basics
How do basic data types work in C#?

C#: Statically typed, types must be explicitly declared.
Example:
int x = 10;  
string y = "Hello";





414
Azure Functions + PP365
Async Programming (Asyncio)
A programming paradigm in Python that enables concurrent execution of code using asynchronous functions and event loops. In Azure Functions, leveraging asyncio can improve performance and scalability by allowing Python functions to handle multiple tasks simultaneously without blocking.





415
Azure Functions + PP365
Function App Settings
Configuration settings for an Azure Function App that control its behavior and integration with other services. For Python Azure Functions, settings can include environment variables, connection strings, and runtime configurations, enabling customization and secure management of function properties.





416
Azure Functions + PP365
Function Proxies
A feature in Azure Functions that allows developers to create a façade over one or more functions or APIs. Function Proxies can manage routing, transformation, and composition of requests to Python Azure Functions, simplifying API management and enhancing security by abstracting backend services.





417
Azure Functions + PP365
OAuth 2.0 Authentication Flow
A sequence of steps in the OAuth 2.0 protocol where an application obtains an access token from an authorization server. This flow involves redirecting users for consent, exchanging authorization codes for tokens, and securely accessing protected resources using the obtained tokens, enabling secure delegation of access.





418
Azure Functions + PP365
Local Debugging
Running and testing Azure Functions on a local machine to identify and fix issues before deployment. Python developers use tools like Azure Functions Core Tools and VS Code to debug functions locally, allowing for rapid development and troubleshooting in a controlled environment.





419
Azure Functions + PP365
Azure Functions Extensions
Additional modules or packages that extend the capabilities of Azure Functions. For Python developers, extensions can provide support for integrating with other Azure services, enhancing bindings, and adding new triggers, enabling more complex and feature-rich serverless applications.





420
Azure Functions + PP365
Azure AD TokenRequestContext
A context object used in Azure AD token acquisition processes, specifying the scopes and resources for which an access token is requested. TokenRequestContext ensures that tokens are issued with the appropriate permissions and are valid for the intended resources, facilitating secure and targeted access in applications.





421
Azure Private DNS
Record Set
Definition: A collection of DNS records for a specific hostname within a DNS zone.
Feature: Azure allows you to create and manage various types of record sets, including A, AAAA, CNAME, MX, PTR, and SOA, within Private DNS Zones.





422
Azure Private DNS
DNS Zones Delegation
Definition: The process of delegating authority for a DNS zone to another DNS server.
Feature: Delegation in Azure enables hybrid DNS setups and can be used to delegate the management of specific domains within your DNS infrastructure.





423
Azure Private DNS
Virtual Network Link
Definition: A configuration that links an Azure Virtual Network to a Private DNS Zone, enabling DNS resolution for resources within that VNet.
Feature: Virtual Network Links are a key feature that enables integration between Azure VNets and Private DNS Zones, allowing internal resources to resolve DNS names.





424
Azure Private DNS
Automatic DNS Record Management
Definition: A feature of Azure Private DNS that automatically manages DNS records for Azure resources.
Feature: Automatic DNS Record Management makes it easier to manage internal DNS records by automatically registering records for Azure resources such as VMs or load balancers in the Private DNS Zone.





425
Azure Private DNS
DNS Conditional Forwarding
Definition: A feature that forwards DNS queries based on the domain being requested.
Feature: Azure supports DNS conditional forwarding to allow DNS queries for specific domains to be forwarded to a designated DNS server, often useful in hybrid cloud scenarios.





426
Azure Private DNS
Azure Network Security Groups (NSG)
Definition: A set of rules used to control network traffic to and from Azure resources.
Feature: While NSGs are not directly involved in DNS, they are often used to secure the traffic to DNS servers (whether private or custom) in Azure, including DNS queries.





427
Terraform
terraform validate:
A CLI command that checks the syntax and internal consistency of your Terraform files without connecting to remote services. Use it to catch errors before applying any changes.





428
Terraform
Double Quotes vs. Single Quotes:

Double Quotes (" "): Allow variable interpolation.
Single Quotes (' '): Do not interpolate variables; they treat the content as a literal string.





429
Terraform
Debugging Tips:
Check Quotes: Ensure that you use double quotes for strings that require interpolation.
Use terraform validate: Run this command frequently to catch syntax issues early.
Review Variable References: Confirm that all variable references use the correct var. prefix.





430
Terraform
List and Map Indexing:
Access elements within lists or maps using square brackets.

List Example:
${var.instance_ids[0]}

Map Example:
${var.settings["key_name"]}





431
Terraform
For Expressions:

Definition: These are used to transform or filter collections (lists or maps) inline.
Usage: Useful for generating new lists or maps based on existing ones without using external loops.
Example:

[for instance in var.instances : instance.id]





432
Terraform
Network Infrastructure Automation (NIA) allows you to safely approve the changes that your applications require without having to manually translate tickets from developers into the changes you think their applications need.





433
Logging in Python
Q: What does the backupCount parameter do in RotatingFileHandler from the logging.handlers module?

A: It specifies the number of backup log files to keep after rotation, such as backupCount=5.
This limits the number of rotated files retained, managing disk space usage.





434
Logging in Python
Q: What is one advantage of using dictConfig over fileConfig for logging configuration in Python's logging module?

A: dictConfig allows for more complex and dynamic configurations, often being easier to manage programmatically.
This flexibility makes it suitable for applications that require runtime logging configuration changes.





435
Logging in Python
Q: What is the default formatter format string if none is specified in logging.basicConfig()?

A: '%(levelname)s:%(name)s:%(message)s'
This default format includes the log level, logger name, and the log message.





436
Logging in Python
Q: What is the role of a Formatter in a logging handler within Python's logging module?

A: To specify the layout and content of the log messages, such as including timestamps, log levels, and message text.
Formatters ensure that log messages are consistently structured for readability and analysis.





437
Logging in Python
Q: What is the significance of the level parameter when configuring a logger or handler in Python's logging module?

A: It sets the minimum severity of log messages that will be processed; messages below this level are ignored.
For example, setting level=logging.INFO means that DEBUG messages will be ignored.





438
TSQL
Self-Joins for Hierarchies:

Useful for comparing or relating data within the same table.
Effective for simple or fixed-level hierarchies; consider recursive CTEs for deep or variable hierarchies.





439
TSQL
Window Functions:

Functions like ROW_NUMBER(), RANK(), LEAD(), and LAG() perform calculations across sets of rows related to the current row without collapsing the result set.





440
TSQL
Inline Comments in SQL:

Use -- to add descriptive comments that explain parts of your query, making it easier to understand later.





441
TSQL
User-Defined Functions (UDFs):

Custom functions that return scalar values or tables, encapsulating reusable logic.





442
TSQL
Q: What is the purpose of the GROUP BY clause in T-SQL?
A: It collapses rows into groups based on the values of one or more columns and applies aggregate functions to each group.





443
TSQL
Indexing Considerations:

Ensure columns used in JOINs or WHERE clauses are indexed for better performance.





444
TSQL
Set Operations:

UNION / UNION ALL: Combine result sets from multiple queries (with or without duplicate removal).
INTERSECT: Returns rows common to both queries.
EXCEPT: Returns rows from the first query that do not appear in the second.





445
TSQL
Subqueries:

Queries nested within other queries (in SELECT, FROM, or WHERE clauses) to return single or multiple values.





446
Azure AD Authentication
Managed Identities
Azure-managed identities used by Azure resources (like VMs) to authenticate to other Azure services, removing the need to manage credentials.





447
Azure AD Authentication
Azure AD Roles vs Azure Resource Roles
Azure AD Roles manage access to directory functions (e.g., Global Administrator), while Resource Roles control access to Azure resources (e.g., Contributor).





448
Azure AD Authentication
Scope
Defines the level at which a role is applied, such as management group, subscription, resource group, or individual resource. Higher scopes apply to all child resources.





449
Azure AD Authentication
Service Principal
A security identity for an app to authenticate and access Azure resources. Used for automated services and applications instead of using user credentials.





450
Azure VM + Developer
Build Tool
A program used to automate the compilation, packaging, and dependency resolution of a software project (e.g., `make`, `npm`, `dotnet build`, `gradle`).





451
Azure VM + Developer
Run Command
A feature in the Azure Portal that lets you remotely execute shell or PowerShell commands directly on a VM without needing SSH or RDP access, often used for debugging or recovery.





452
Azure VM + Developer
Language Runtime
The software layer that interprets and executes code written in a particular language (e.g., Python, Node.js, .NET Core), and must be installed in the dev environment.





453
Azure VM + Developer
Remote - SSH (VS Code)
A VS Code extension that allows seamless editing, terminal access, and debugging on a remote machine via SSH, making a remote system feel local.





454
Azure VM + Developer
Port Forwarding
An SSH feature that lets you tunnel remote ports (e.g., a web app running on port 5000 on a VM) to your local machine for testing and access.





455
Azure VM + Developer
12-Factor App
A set of best practices for building cloud-native apps, including stateless processes, config via environment variables, and dev/prod parity.





456
Azure VM + Developer
Dev Containers
A container-based dev environment defined in `.devcontainer.json`, allowing full isolation and consistent tooling across developers, either locally or in Codespaces.





457
Azure VM + Developer
Startup Script / Bootstrap Script
A script (Bash or PowerShell) that sets up tools, environment variables, or dependencies on a VM right after it is created or logged into for the first time.





458
Azure VM + Developer
Availability Set
A logical grouping that ensures VMs are distributed across different physical racks within a datacenter, improving resiliency by minimizing single points of hardware failure.





459
Azure VM + Developer
VS Code Workspace (.code-workspace)
A VS Code config file that defines multi-root folders, editor settings, and extension recommendations for a consistent project layout and experience.





460
Azure VM + Developer
Linter
A code analysis tool that detects errors, bugs, and style violations before runtime; common examples include ESLint (JavaScript) and Pylint (Python).





461
Jane Eyre, Bronte
Salubrious
(suh-LOO-bree-uhs) Describing something beneficial to health or well-being, such as a pleasant climate, nutritious food, or healthy lifestyle.





462
Jane Eyre, Bronte
Piquant
(PEE-kahnt) Having a pleasantly sharp or spicy taste; can also describe something intellectually stimulating or excitingly provocative.





463
Jane Eyre, Bronte
Cachinnation (kak-ih-NAY-shun)
Loud, uncontrollable laughter, often with a connotation of being excessive, mocking, or even sinister. Derived from the Latin word cachinnare, it emphasizes the intensity of the laugh.





464
RAG Project
ASGI
Asynchronous Server Gateway Interface — allows async Python web apps to talk to servers. Quart apps are ASGI apps.





465
RAG Project
Test Client
A simulated web client that sends fake HTTP requests to your app (e.g., client.post("/ask")).





466
Email Auth and Security
BIMI (Brand Indicators for Message Identification)

Allows organizations to display their brand logos alongside authenticated emails in recipients' inboxes.
Enhances brand recognition and trust.
Requires proper implementation of SPF, DKIM, and DMARC.





467
DAX
KEEPFILTERS vs. ALL/REMOVEFILTERS (and other modifiers).
While ALL or REMOVEFILTERS clears filters, and ALLEXCEPT/ALLSELECTED clear selectively, KEEPFILTERS does the opposite—it retains existing filters and narrows them further.





468
DAX
KEEPFILTERS can outperform FILTER(...) for simple column predicates.
For straight column comparisons (e.g. Dim[Category] = "X"), KEEPFILTERS often lets the engine optimize better than wrapping a FILTER() over the entire table.





469
DAX
KEEPFILTERS shines in part-to-whole calculations.
Use KEEPFILTERS when you need “this item’s sales ÷ its category’s sales”—it preserves the category filter while applying your item filter.





470
Azure Developer Associate
Which APIM configuration limits API calls per source within a time interval?

A rate-limit policy (e.g., <rate-limit-by-key> in the inbound section).





471
Azure Developer Associate
What's the recommended authentication method for Azure Container Registry?

Azure service principal





472
Azure Developer Associate
You plan to generate a shared access signature (SAS) token for read access to a blob in a storage account.
You need to secure the token from being compromised.
What should you use?

Microsoft Entra ID credentials assigned the Contributor role





473
Azure Developer Associate
Geo-replication enables a container registry to function as a single registry that serves several regions with multi-master regional registries.
    No extra egress fees, as images are pulled from a local, replicated registry in the same region as the container host.
    Single management of a registry across multiple regions.





474
Azure Developer Associate
You manage an instance of Azure API Management. You define policies to multiple scopes.
You need to enforce a policy evaluation order.
What should you use?

the <base/>element
NOT 
the condition attribute





475
Azure Developer Associate
You have an Azure web app that occasionally experiences high response times.
You need to be notified when the response time exceeds a certain threshold.
What should you do?

Implement Application Insights web tests and alerts.





476
Azure Developer Associate
In the following example, two variables are passed to the container when it's created.

Bash
az container create \
    --resource-group myResourceGroup \
    --name mycontainer2 \
    --image mcr.microsoft.com/azuredocs/aci-wordcount:latest 
    --restart-policy OnFailure \
    --environment-variables 'NumWords'='5' 'MinLength'='8'\





477
Azure Developer Associate
You manage the staging and production deployment slots of an Azure App Service web app named app1.
You need to ensure a connection string is not swapped when swapping is performed.
Which configuration should you use?

Depolyment slot setting 
not 
Managed Identity





478
Azure Developer Associate
You manage an Azure App Service web app named app1. App1 uses a service plan based on the Basic pricing tier.
You need to create a deployment slot for app1. What should you do first?

Scale up app1.
Not 
Configure automated deployment of app1 with Azure DevOps.





479
Azure Developer Associate
To mount an Azure file share as a volume in a container by using the Azure CLI, specify the share and volume mount point when you create the container with az container create. 
Azure CLI
az container create \
    --resource-group $ACI_PERS_RESOURCE_GROUP \
    --name hellofiles \
    --image mcr.microsoft.com/azuredocs/aci-hellofiles \
    --dns-name-label aci-demo \
    --ports 80 \
    --azure-file-volume-account-name $ACI_PERS_STORAGE_ACCOUNT_NAME \
    --azure-file-volume-account-key $STORAGE_KEY \
    --azure-file-volume-share-name $ACI_PERS_SHARE_NAME \
    --azure-file-volume-mount-path /aci/logs/





480
Azure Developer Associate
Specify the --restart-policy parameter when you call az container create.

Bash
az container create \
    --resource-group myResourceGroup \
    --name mycontainer \
    --image mycontainerimage \
    --restart-policy OnFailure





481
Azure Developer Associate
By default, Azure Container Instances are stateless. If the container crashes or stops, all of its state is lost. To persist state beyond the lifetime of the container, you must mount a volume from an external store.





482
Azure Developer Associate
You create an Azure web app locally. The web app consists of a ZIP package.
You need to deploy the web app by using the Azure CLI. The deployment must reduce the likelihood of locked files.
What should you do?

Run az webapp deploy to a staging slot with auto swap on.
not 
Run az webapp deploy specifying –-clean true.





483
Azure Developer Associate
To mount multiple volumes in an Azure Container Instance, you must deploy using an Azure Resource Manager template or a YAML file. To use a template or YAML file, provide the share details and define the volumes by populating the volumes array in the properties section of the template.





484
Azure Developer Associate
Azure App Configuration provides a service to centrally manage application settings and feature flags. Modern programs, especially programs running in a cloud, generally have many components that are distributed in nature. Spreading configuration settings across these components can lead to hard-to-troubleshoot errors during an application deployment.





485
Azure Developer Associate
Keys serve as the name for key-value pairs and are used to store and retrieve corresponding values. It's a common practice to organize keys into a hierarchical namespace by using a character delimiter, such as / or :. Use a convention that's best suited for your application. 
examples:
AppName:Service1:ApiEndpoint
AppName:Service2:ApiEndpoint





486
Azure Developer Associate
In Azure App Configuration,
Filter: A filter is a rule for evaluating the state of a feature flag. A user group, a device or browser type, a geographic location, and a time window are all examples of what a filter can represent.





487
Azure Developer Associate
In the .NET SDK for Azure Cosmos DB for NoSQL, which method of the ChangeFeedProcessor class should be invoked to start consuming changes from the change feed?

StartAsync





488
Azure Developer Associate
In Azure App Configuration,
Feature flag: A feature flag is a variable with a binary state of on or off. The feature flag also has an associated code block. The state of the feature flag triggers whether the code block runs or not.





489
Azure Developer Associate
App Configuration doesn't version key values automatically as they're modified. Use labels as a way to create multiple versions of a key value. For example, you can input an application version number or a Git commit ID in labels to identify key values associated with a particular software build.





490
PnP PowerShell
Connect-PnPOnline (PnP.PowerShell)
Establishes a connection to a SharePoint site using various authentication methods like client credentials or device code flow, enabling subsequent PnP.PowerShell cmdlets to interact with SharePoint.





491
PnP PowerShell
New-PnPField (PnP.PowerShell)
Creates a new field in a SharePoint list or library. Supports defining field types, settings, and validations for structured data management.





492
PnP PowerShell
PSCredential (Microsoft.PowerShell.Security)
A PowerShell object that securely stores a username and password. Utilized for authentication purposes, ensuring sensitive information is handled safely.





493
PnP PowerShell
Delegated Permissions
Permissions granted to applications to act on behalf of a signed-in user. Requires user consent and is used in interactive authentication scenarios.





494
PnP PowerShell
Import-PnPProvisioningTemplate (PnP.PowerShell)
Imports a provisioning template into a SharePoint site, applying configurations and structures defined in the template. Enables automated site setup and customization.





495
PnP PowerShell
API Rate Limits
Restrictions on the number of API calls an application can make within a specific timeframe. Requires managing request rates to avoid exceeding limits and facing throttling.





496
PnP PowerShell
Export-Clixml (Microsoft.PowerShell.Utility)
Serializes PowerShell objects to an XML format file. Useful for securely storing complex objects, including credentials, for later retrieval.





497
PnP PowerShell
PowerShell Scopes
Defines the visibility and lifetime of variables and functions within PowerShell. Includes global, script, and local scopes, managing how data is accessed and modified.





498
PnP PowerShell
REST API Endpoints
Specific URLs used to access SharePoint resources via REST API. Includes paths for sites, lists, libraries, and items, enabling targeted operations.





499
PnP PowerShell
CSOM (Client-Side Object Model)
An alternative to REST API for interacting with SharePoint from client applications. Provides a different set of libraries and methods for SharePoint operations.





500
PnP PowerShell
System.IO.Stream (System.IO)
Represents a sequence of bytes, such as a file. Used in PowerShell to handle file data streams for operations like uploading files to SharePoint.





501
PnP PowerShell
Invoke-PnPRequest (PnP.PowerShell)
Sends custom HTTP requests to SharePoint APIs within PnP.PowerShell scripts. Allows for advanced interactions beyond standard cmdlet capabilities.





502
PnP PowerShell
Retry Logic
A programming practice where failed operations are attempted again after a delay. Essential for handling transient errors like API throttling or network issues.





503
PnP PowerShell
Export-PnPProvisioningTemplate (PnP.PowerShell)
Exports a SharePoint site's configuration into a provisioning template. Facilitates site replication, migration, and backup through PowerShell.





504
PnP PowerShell
Invoke-WebRequest (Microsoft.PowerShell.Utility)
Sends HTTP and HTTPS requests to web pages or web services. Similar to Invoke-RestMethod but provides more detailed response information.





505
PnP PowerShell
PowerShell Profiles
Scripts that run automatically when PowerShell starts. Used to customize the environment, load modules, and define functions for enhanced productivity.





506
Asynchronous Python
asyncio.Lock
An asynchronous lock in Python used to prevent multiple coroutines from accessing a shared resource at the same time.





507
Asynchronous Python
Coroutine
An async def function in Python that can pause at await expressions and resume later, enabling non-blocking asynchronous execution.





508
Asynchronous Python
async with (async context manager)
Manages asynchronous resources in Python like network sessions or database connections with proper cleanup.





509
Asynchronous Python
Lock (Mutex)
A lock is a synchronization primitive used to control access to a shared resource, ensuring that only one thread can access a specific block of code at a time.





510
Asynchronous Python
Race Condition
A race condition occurs when multiple threads access and modify shared data concurrently, leading to unpredictable or incorrect results if not managed properly.





511
Asynchronous Python
asyncio.Queue
An async-safe queue in Python used for communication between producer and consumer coroutines.





512
Asynchronous Python
Blocking Code
Code like time.sleep() that halts the event loop and prevents other asynchronous Python tasks from running—should be avoided.





513
Asynchronous Python
Context Switching
Context switching is the process of storing and restoring the state of a thread so that execution can resume later, which can introduce performance overhead.





514
Asynchronous Python
Global Interpreter Lock (GIL)
The GIL is a mutex in CPython that ensures only one thread executes Python bytecode at a time, affecting true parallel execution of threads.





515
Asynchronous Python
Cooperative Multitasking
The async model in Python where tasks yield control voluntarily (e.g., via await) instead of being preempted.





516
Asynchronous Python
asyncio.shield()
Prevents a coroutine in Python from being cancelled even if the calling task is, ensuring it runs to completion.





517
Asynchronous Python
Parallelism
Running code in true simultaneous execution on multiple cores; not directly supported by asyncio, which is single-threaded.





518
Asynchronous Python
Structured Concurrency
A design principle (used in Trio) ensuring all async Python tasks are scoped and cleaned up together, reducing leaks and bugs.





519
JavaScript Concepts
Webpack: A powerful module bundler that compiles JavaScript modules into a single bundle, optimizing assets for production.





520
JavaScript Concepts
Jest: A JavaScript testing framework by Facebook, supporting unit, integration, and snapshot testing, particularly well-suited for React applications.





521
JavaScript Concepts
npm (Node Package Manager): The default package manager for Node.js, used to install, share, and manage JavaScript packages and dependencies.





522
JavaScript Concepts
Yarn: An alternative package manager to npm, offering faster installs and more reliable dependency management through lock files.





523
JavaScript Concepts
Server-Side Rendering (SSR): Rendering web pages on the server before sending them to the client, improving performance and SEO.





524
JavaScript Concepts
Netlify: A platform for deploying static sites and serverless functions, providing continuous deployment and built-in CI/CD pipelines.





525
JavaScript Concepts
Vue.js: A progressive framework for building user interfaces, known for its simplicity and flexibility, with features like directives and single-file components.





526
JavaScript Concepts
Prototype-Based Inheritance: JavaScript's inheritance model where objects inherit properties and methods from a prototype object, enabling dynamic property sharing.





527
JavaScript Concepts
Logical AND (&&) and OR (||) Statements
if (condition1 && condition2) {
    // Code to execute if both condition1 and condition2 are true
}

if (condition1 || condition2) {
    // Code to execute if either condition1 or condition2 is true
}





528
JavaScript Concepts
TypeScript: A superset of JavaScript that adds static typing, enhancing code quality, maintainability, and developer tooling through type checking.





529
JavaScript Concepts
Arrow Functions: Arrow functions provide a concise syntax for writing functions. They are especially useful for short functions and callbacks. For example:

const add = (a, b) => a + b;





530
JavaScript Concepts
For arrays, the String function will apply the string conversion for each element and join the results with a comma. You can also apply the join method yourself, e.g. to customize the separator. Note that in these cases null and undefined will be converted to an empty string.

String([42, null, true, 'abc']);
// => '42,,true,abc'





531
JavaScript Concepts
Ensure to use the comparison operator === instead of the assignment operator = when comparing values in switch cases. In an exercise, I had something like 
    case converted_value = 0
instead of
    case converted_value === 0
and that screwed up all of the following cases.





532
JavaScript Concepts
Key-Value Pairs: Objects in JavaScript are collections of key-value pairs. Each key is a string (or symbol) and each value can be any data type, including other objects2.





533
JavaScript Concepts
Many operators coerce the operands into numbers (if necessary) according to the logic of the Number function explained above.
    Arithmetic operators: + (if no string is involved), -, *, /, %, **
    Unary plus and unary negation operators: +, -
    Relational operators (for non-string operands): >, >=, <, <=
    Bitwise operators: |, &, ^, ~





534
JavaScript Concepts
Front: How do you create multiline strings using string templates?
Back: String templates allow for multiline strings without the need for concatenation or escape characters.
  const multiline = `This is a string
  that spans multiple
  lines.`;
  console.log(multiline);





535
JavaScript Concepts
Prototype-Based Inheritance: JavaScript uses prototype-based inheritance, meaning objects can inherit properties and methods from other objects. This is achieved through the prototype chain3.





536
JavaScript Concepts
Callback
A function passed as an argument to be invoked later, once some operation completes.

  fs.readFile("file.txt", (err, data) => {
    if (err) throw err;
    console.log(data);
  });





537
JavaScript Concepts
With Boolean(value) you can convert any value to a boolean. There is a fixed set of values, so called falsy values, that convert to false. Most importantly, false, 0, empty string, null, undefined and NaN are falsy.
Boolean(-1);// => true
Boolean(0);// => false
Boolean(' ');// => true
Boolean('');// => false





538
JavaScript Concepts
If the addition operator + is used for primitive values and one operand is a string, the other one will be coerced into a string as well. The conversion logic is the same as when using the String function. Afterwards, the two strings are concatenated.

let name;
'hello ' + name;
// => 'hello undefined'





539
JavaScript Concepts
Front: Can you call functions within a string template?

Back: Yes, you can call functions within ${} in a string template.
  function getName() {
    return 'Jay';
  }
  const greeting = `Hello, ${getName()}!`;
  console.log(greeting); // Output: Hello, Jay!





540
JavaScript Concepts
JavaScript's array destructuring syntax is a concise way to extract values from an array and assign them to distinct variables. In this example, each value in the numberOfMoons array is assigned to its corresponding planet:

    const numberOfMoons = [0, 2, 14];
    const [venus, mars, neptune] = numberOfMoons;

    neptune;
    // => 14





541
JavaScript Concepts
Object Literals: The most common way to create an object is using object literals, which are a list of name-value pairs inside curly braces {}. For example:
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};





542
JavaScript Concepts
In JavaScript, you can only return exactly one value. If you want to pass more information, you need to combine it into one entity first, usually into an object, or an array.

function divide(a, b) {
  return {
    quotient: Math.floor(a / b),
    remainder: a % b,
  };
}





543
JavaScript Concepts
Front: What are tagged templates and how do you use them?

Back: Tagged templates allow you to parse template literals with a function. The function receives the template string and the values as arguments.
  function tag(strings, ...values) {
  console.log(strings); // Array of string segments
  console.log(values);  // Array of values
  return 'Tagged template result';
}
const result = tag`Hello, ${name}!`;
console.log(result); // Output: Tagged template result





544
Vocab
Something Rotten, Fforde
Paella
noun | pah-AY-yuh
A Spanish rice dish originally from Valencia, typically made with seafood, meat, and vegetables.
Example: We shared a large pan of seafood paella by the beach.





545
Vocab
Something Rotten, Fforde
Thylacine
noun | THY-luh-seen
A now-extinct carnivorous marsupial native to Tasmania, also known as the Tasmanian tiger.
Example: The thylacine was declared extinct in the 20th century, though sightings are still reported.





546
Vocab
Well of Lost Plots, Fforde
Inveigle
verb | in-VAY-guhl
To entice, lure, or persuade by flattery or deception.
Example: He tried to inveigle his way into the VIP lounge using a fake invitation.





547
Vocab
Something Rotten, Fforde
Muslin (curtains)
noun | MUZ-lin
A lightweight cotton fabric, often used for curtains or clothing.
Example: The muslin curtains let in a soft, diffused light.





548
Vocab
Something Rotten, Fforde
Florin
noun | FLOR-in
A former British coin worth two shillings, or one-tenth of a pound, used before decimalization.
Example: He found an old florin in the attic among his grandfather’s coins.





549
Vocab
Palimpsest
noun
SPA: PAL-imps-est
IPA: /ˈpælɪmpsɛst/

A manuscript or document that has been written on, scraped off, and reused, often revealing traces of previous writings beneath the surface.
Example: Archaeologists discovered an ancient palimpsest where earlier texts were still legible under the more recent writing.





550
Vocab
How to Sell a Haunted House, Hendrix
Probate
Pronunciation: PROH-bayt
Definition: The legal process of validating a deceased person’s will and administering their estate according to that will or state law.





551
Vocab
Jingo, Pratchett
Rotas
noun (plural) | ROH-tuhs
Schedules or lists showing when people are assigned to particular duties or tasks, especially in British English.
Example: The hospital staff checked the rotas to see who was on night duty.





552
Vocab
Well of Lost Plots, Fforde
Thrombosis
noun | throm-BOH-sis
The formation or presence of a blood clot within a blood vessel.
Example: She was hospitalized with deep-vein thrombosis in her leg.





553
Vocab
Something Rotten, Fforde
Barnaby Rudge
noun | BAR-nuh-bee RUHJ
A historical novel by Charles Dickens, set during the Gordon Riots of 1780, blending romance, mystery, and political unrest.
Example: “Barnaby Rudge” is one of Dickens’s lesser-known but richly atmospheric novels.





554
Vocab
Red Side Story, FForde
Osculation
Pronunciation: oss-kyoo-LAY-shun
Definition: The act of kissing; in mathematics, it can also refer to the contact between curves or surfaces.





555
Vocab
Something Rotten, Fforde
Rusk
noun | RUSK
A dry, hard biscuit or twice-baked bread, often used for teething babies or in soups.
Example: She dipped a rusk into her tea for a quick snack.





556
Vocab
How to Sell a Haunted House, Hendrix
Codicil
Pronunciation: KOH-duh-sil
Definition: A legal document that modifies, explains, or adds to a previously executed will without replacing it entirely.





557
Vocab
Red Side Story, FForde
Semolina
Pronunciation: sem-uh-LEE-nuh
Definition: A coarse flour made from durum wheat, commonly used in making pasta and couscous.





558
Vocab
How to Sell a Haunted House, Hendrix
Camellia
Pronunciation: kuh-MEE-lee-uh
Definition: An evergreen shrub native to Asia, prized for its glossy leaves and showy, rose-like flowers. Commonly used in landscaping and known for varieties like Camellia japonica and Camellia sinensis (the tea plant).





559
Vocab
Something Rotten, Fforde
Timpet
noun | TIM-pet
archaic term, possibly a variant of “timpet” meaning a small hill or mound (usage rare or regional).
Example: The sheep grazed peacefully on the grassy timpet.





560
Vocab
Well of Lost Plots, Fforde
Eminence grise
noun | EM-uh-nence GREEZ
A powerful advisor or decision-maker working behind the scenes.
Example: Although never elected, the minister’s chief of staff was the real eminence grise.





561
Vocab
How to Sell a Haunted House, Hendrix
Tulle
Pronunciation: tool
Definition: A lightweight, fine netting often used in veils, gowns, and tutus, typically made from silk, nylon, or rayon.





562
Vocab
Something Rotten, Fforde
Bête noire
noun | BET NWAHR
A person or thing that one particularly dislikes or avoids.
Example: Bureaucracy was his bête noire.





563
Vocab
Red Side Story, FForde
Probity
Pronunciation: PROB-ih-tee
Definition: Adherence to the highest principles and ideals; uprightness and integrity.





564
Azure Compute Gallery
VM Deployment from ACG – The process of creating VM instances using images stored in Azure Compute Gallery.





565
Azure Compute Gallery
Image Gallery Replication – The process of copying an image version to multiple regions to optimize availability and speed.





566
Azure Compute Gallery
Image Version Deletion – Permanent action that cannot be undone.





567
Azure Compute Gallery
Azure DevOps Pipelines for Image Deployment – A CI/CD workflow that automatically builds, tests, and publishes images.





568
Azure Compute Gallery
Ephemeral OS Disk – A temporary VM disk that cannot be used with ACG images.





569
Azure Compute Gallery
Replication Completion Check – Before deploying a VM, images must be fully replicated to the region where deployment is taking place.





570
Azure Compute Gallery
Azure Image Builder (AIB) – A managed service that automates image creation by defining customizations (e.g., software installations, updates, configurations).





571
Azure Compute Gallery
Azure Policy Enforcement – Some organizations restrict Compute Gallery usage via Azure Policies.





572
Azure Compute Gallery
Azure Compute Gallery (ACG) – A service that helps manage, share, and distribute VM images across multiple subscriptions and regions.





573
Azure Compute Gallery
Cross-Subscription Sharing – ACG images can be shared with multiple subscriptions, but not across Azure AD tenants.





574
Azure Compute Gallery
OS Disk Image – An image containing only the operating system and configurations.
Data Disk Image – A separate image that includes application and data disks but does not contain an OS.





575
Azure Compute Gallery
Manual VHD Upload – A process where you create a VHD file, upload it to Azure Storage, and convert it into an image.





576
Azure Compute Gallery
Replication Time Constraints – Image replication is not instantaneous and can take several minutes to hours.





577
VMWare
Type 2 Hypervisor

A hypervisor that runs on top of an existing host operating system, using the OS for resource management. Examples: VMware Workstation, Oracle VirtualBox.





578
VMWare
Storage vMotion

The ability to migrate virtual machine disk files from one datastore to another without downtime, essential for managing storage resources across a cluster.





579
VMWare
VMkernel

The core operating system that VMware ESXi uses to manage physical resources, such as CPU, memory, and storage. The VMkernel is responsible for creating and managing virtual machines, handling I/O operations, and providing resource management.





580
VMWare
Distributed Resource Scheduler (DRS)

A feature of VMware vSphere that automatically balances workloads across ESXi hosts in a cluster, ensuring optimal resource usage.





581
VMWare
vSphere Client

A graphical user interface (GUI) tool used to manage and configure VMware ESXi hosts and virtual machines. The vSphere Client connects to vCenter Server to manage multiple ESXi hosts and provides an easy interface for monitoring, configuration, and troubleshooting tasks.





582
VMWare
vSAN (Virtual SAN)

A VMware product that creates virtualized storage by aggregating local storage from ESXi hosts in a cluster, providing a shared storage solution without needing external storage hardware.





583
VMWare
vSphere Cluster

A group of ESXi hosts that work together as a single entity, allowing for resource pooling and the management of VMs in a unified way.





584
VMWare
Storage I/O Control (SIOC)

A feature in VMware vSphere that manages storage I/O requests to ensure that all virtual machines receive fair access to storage resources. It helps avoid I/O contention by controlling the bandwidth allocated to different VMs when accessing shared storage.





585
VMWare
Storage Policy-Based Management (SPBM)

A feature in VMware vSphere that enables administrators to manage storage resources using policies, such as performance, redundancy, and capacity. SPBM ensures that virtual machines and storage resources are compliant with business requirements and ensures that virtual machine storage is allocated to meet desired performance criteria.





586
VMWare
High Availability (HA)

A VMware feature that automatically restarts virtual machines on another host if the original host fails. It ensures minimal downtime in case of host failure.





587
VMWare
Hypervisor

Software that allows the creation and management of virtual machines by abstracting the physical hardware. There are two types: Type 1 (bare-metal) and Type 2 (hosted).





588
VMWare
Resource Pool

A logical grouping of CPU, memory, and storage resources in a VMware cluster, which can be allocated to virtual machines.





589
VMWare
ESXi Shell

A command-line interface (CLI) used to manage and troubleshoot VMware ESXi hosts. The ESXi Shell allows administrators to run shell commands directly on the ESXi host for tasks like system configuration, troubleshooting, and diagnostics.





590
VMWare
ESXi Virtual Machine Monitor (VMM)

A component of VMware ESXi that manages virtual machine execution, including CPU, memory, and I/O operations. It ensures that VMs are isolated from each other and allows each VM to operate independently of the host.





591
Python
Q:
What are the two essential methods that an iterator class must implement?

A:
__iter__() and __next__().





592
Python
Q:
What is a generator in Python?

A:
A function that allows iteration over a sequence of values one at a time, using the yield keyword.





593
Python
Q:
What does itertools.islice() do?

A:
It creates an iterator that returns selected elements from the input iterable by specifying start, stop, and step indices.





594
Python
Q:
Which Python module is commonly used to set exit codes?

A:
sys





595
Python
import time
from contextlib import contextmanager

@contextmanager 
def timer():
    start = time.time()
    try: yield
    finally:
        end = time.time()
        print(f"Elapsed time: {end - start} seconds")

# Usage
with timer():
    # Code block to measure
    time.sleep(2)
# Output: Elapsed time: 2.002 seconds





596
Python
Q:
Name a common use case for generators in Python.

A:
Reading large files one line at a time without loading the entire file into memory.





597
Python
Q:
What function from the os module is used to iterate through directories and files?

A:
os.walk()





598
Python
Q:
Which itertools function can be used to create an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable?

A:
itertools.chain().





599
Python
Q:
What method can be used to send a value into a generator, allowing it to receive data?

A:
The .send(value) method.





600
Python
Q:
What is the default exit code if a Python script ends without calling sys.exit()?

A:
0 (indicating successful execution).





601
PowerShell Modules
Find-Module

Definition: Searches for modules in a repository like the PowerShell Gallery.
Example Usage: Find-Module -Name SQLServer searches for the "SQLServer" module.





602
PowerShell Modules
Module Conflicts

Definition: Situations where multiple modules have cmdlets or functions with the same name.
Explanation: Resolved by fully qualifying cmdlet names with the module name (e.g., Az\Get-AzVM).





603
PowerShell Modules
Module.psm1

Definition: The primary script file for a PowerShell module.
Explanation: Contains the functions, cmdlets, and other code that define the module's functionality.





604
PowerShell Modules
Cmdlet

Definition: A lightweight command used in the PowerShell environment.
Explanation: Cmdlets follow a Verb-Noun naming pattern (e.g., Get-Module, Import-Module) and perform specific functions within PowerShell.





605
PowerShell Modules
Uninstall-Module

Definition: A cmdlet used to remove a module from the system.
Explanation: Example: Uninstall-Module -Name ActiveDirectory removes the ActiveDirectory module.





606
PowerShell Modules
Az Module

Definition: A module for managing Azure resources.
Explanation: Provides cmdlets to interact with Azure services. Example cmdlet: Get-AzVM.





607
PowerShell Modules
Module Version Specification

Definition: The practice of specifying exact module versions when importing to ensure script compatibility.
Explanation: Done using parameters like -RequiredVersion in Import-Module. Example: Import-Module -Name Az -RequiredVersion 5.0.0.





608
PowerShell Modules
Listing All Available Modules:
Get-Module -ListAvailable | Select-Object Name, Version, Path

Updating All Installed Modules:
Get-InstalledModule | Update-Module





609
PowerShell Modules
Module Manifest (.psd1)

Definition: A PowerShell data file that describes the contents and metadata of a module.
Explanation: Includes information like the module version, author, exported functions, dependencies, and more. Essential for publishing and sharing modules.





610
PowerShell Modules
Select-Object

Definition: A cmdlet that selects specific properties of an object or set of objects.
Explanation: Often used to filter and display only the needed information. Example: Get-Module -ListAvailable | Select-Object Name, Version, Path.





611
FSLogix
Q: How does FSLogix Profile Container enhance multi-session environments like Azure Virtual Desktop?
A: In multi-session environments, FSLogix Profile Containers ensure that user profiles are loaded quickly and consistently, regardless of which session or virtual machine the user logs into, ensuring a persistent and smooth experience even when multiple users share the same infrastructure.





612
FSLogix
Cloud Cache uses the concept of a proxy file, represented as Profile_%username%.vhd though it isn't a true VHD file. The proxy file is used as a means to collect and process all I/O writes destined for the local cache. The I/O writes are buffered in memory and tracked via the proxy file before they're written out as block-level cache objects in the cache directory.





613
FSLogix
Q: What happens to a FSLogix Profile Container when a user logs off?
A: When a user logs off, the changes made to the profile are saved back into the Profile Container (VHDX file), ensuring that all settings and data are retained for the next session.





614
FSLogix
Cloud Cache operates the user's profile from the local cache during the user's session and must be configured with one or more remote storage providers as specified in CCDLocations. These remote storage providers store copies of the local cache and are used during the current session and for subsequent sign ins.





615
FSLogix
On a lazy asynchronous operation, Cloud Cache flushes the changes to all storage providers simultaneously as each provider is flushed on its own thread. FSLogix doesn't throttle this operation and utilizes as much throughput as the system will allow.





616
FSLogix
Using Cloud Cache puts a performance and storage requirement on the virtual machine to accommodate the extra I/O operations and storage required by the local cache.





617
FSLogix
Outlook OST Files:
Offline Storage Table files used by Microsoft Outlook to store a synchronized copy of mailbox data locally. They enable offline access to email, calendar, and contact data. Managing these files in an Office Container prevents them from bloating the main user profile.





618
FSLogix
Q: How does FSLogix prevent user profile corruption in virtual desktop sessions?
A: FSLogix stores user profiles in isolated containers (VHDX), reducing the chances of corruption by ensuring the profile is handled in a controlled environment that can be mounted and saved properly.





619
FSLogix
Q: Where are FSLogix Profile Containers typically stored in Azure Virtual Desktop environments?
A: FSLogix Profile Containers are typically stored in Azure Files or network shares (SMB share) to allow consistent access across different virtual desktop sessions.





620
FSLogix
Cloud Cache uses storage providers based on the order of entries in CCDLocations.
Storage providers should be listed in order of proximity, then preference.
Only one (1) provider is used when data is hydrated from the storage provider.





621
FSLogix
FSLogix Cloud Cache:
A caching mechanism within FSLogix that stores user profile data in the cloud. This improves redundancy and performance by ensuring that profiles remain available even if primary storage becomes inaccessible.





622
Azure DevOps Pipelines
In an Azure DevOps pipeline, which YAML syntax would you use to reference a variable?
Answer: $(variable_name)





623
Azure DevOps Pipelines
What is the purpose of the trigger: none keyword in an Azure DevOps YAML pipeline?
Answer: It disables automatic triggers, meaning the pipeline will not run automatically on code changes. This is useful for manual execution or scheduled runs.





624
Azure DevOps Pipelines
What is a Deployment Pool in Azure DevOps?
Answer: A Deployment Pool is a set of environments where deployments occur. You can configure and target specific deployment pools for releases to ensure the proper deployment environment is used.





625
Azure DevOps Pipelines
How can you specify which agent pool should be used in a YAML pipeline file?
Answer: pool: <agent_pool_name>





626
Azure DevOps Pipelines
What does the 'trigger' keyword do in an Azure DevOps YAML pipeline?
Answer: Defines the branches or events that will cause the pipeline to run, such as a commit to a specific branch.





627
Azure DevOps Pipelines
How can you pass secrets securely in Azure DevOps YAML pipelines?
Answer: You pass secrets using pipeline variables marked as secret in Azure DevOps. They are referenced in the YAML file as $(secret_variable) but are masked and not exposed in logs.





628
Azure DevOps Pipelines
How can you trigger a pipeline based on a Git tag in Azure DevOps?
Answer: You use the trigger keyword with the tags sub-keyword to specify that the pipeline should trigger when a Git tag is pushed.

Example:
trigger:
  tags:
    include:
      - v*





629
Azure DevOps Pipelines
What keyword is used to define multiple steps that should run in parallel in Azure DevOps YAML pipelines?
Answer: matrix





630
C# Basics
What are static classes and methods in C#?

C#: A static class cannot be instantiated. Static members belong to the type itself, not an instance.
Example:
public static class MathUtils {
    public static int Add(int x, int y) {
        return x + y;
    }
}





631
C# Basics
Extension methods allow you to add functionality to existing types without modifying their source code.
Example:
public static class StringExtensions {
    public static bool IsNullOrEmpty(this string str) {
        return string.IsNullOrEmpty(str);
    }
}





632
C# Basics
What’s the difference between delegates and events in C#?

C#: A delegate is a type that holds references to methods, while an event is a special type of delegate that can only be invoked by the class that declares it, enforcing encapsulation.
Example:
public delegate void MyEvent();
public event MyEvent EventTriggered;





633
C# Basics
A constructor is a special method used to initialize an object when it is created.
Example:
public class Car {
    public string Model { get; set; }
    
    public Car(string model) {
        Model = model;
    }
}





634
C# Basics
How does asynchronous programming work in C#?

C#: Asynchronous programming is implemented using async and await.
Example:
public async Task<string> FetchData() {
    await Task.Delay(1000);
    return "Data fetched";
}





635
C# Basics
Events use delegates to provide a way for a class to notify other classes when something happens.
Example:
public delegate void EventHandler();

public class Publisher {
    public event EventHandler Notify;    
    public void RaiseEvent() {
        Notify?.Invoke();
    }
}
public class Subscriber {
    public void OnNotify() {
        Console.WriteLine("Event triggered!");
    }
}





636
C# Basics
Reflection allows you to inspect the metadata of types (classes, properties, methods, etc.) at runtime.
Example:
var type = typeof(String);
Console.WriteLine(type.FullName);  // Output: System.String





637
C# Basics
An interface defines a contract that classes must implement. It can contain methods, properties, and events.
Example:
public interface IAnimal {
    void Speak();
}

public class Dog : IAnimal {
    public void Speak() {
        Console.WriteLine("Dog barks");
    }
}





638
C# Basics
Lambda expressions provide a concise way to represent anonymous methods.
Example:
Func<int, int, int> add = (x, y) => x + y;





639
C# Basics
What is the concept of properties in C#?

C#: Properties allow getting/setting fields with control.
Example:
public class Person {
    private string _name;
    public string Name {
        get { return _name; }
        set { _name = value; }
    }
}





640
Azure Functions + PP365
Azure AD Grant Admin Consent
The process of obtaining organizational approval for an application’s requested API permissions in Azure AD. Granting admin consent ensures that applications have the necessary permissions to operate within the organization's security policies, enabling seamless and authorized interactions with Azure services.





641
Azure Functions + PP365
XMLHttpRequest vs. Fetch API
Both are JavaScript APIs for making HTTP requests from web pages. XMLHttpRequest is older and more verbose, while the Fetch API is modern, promise-based, and provides a more streamlined approach to handling asynchronous requests, making it preferable for integrating custom scripts in Dynamics 365.





642
Azure Functions + PP365
Azure Service Principal
An identity created for use with applications, hosted services, and automated tools to access Azure resources. Service principals enable secure, programmatic access to Azure services, acting as non-human users with specific permissions, essential for authenticating applications like Power Automate and Azure Functions.





643
Azure Functions + PP365
Dynamic Content
Data dynamically pulled from triggers or previous actions in Power Automate flows. Dynamic content allows flows to be flexible and responsive to varying input data, enabling customized and context-aware operations when interacting with services like Azure Functions and Dataverse.





644
Azure Functions + PP365
host.json
A global configuration file for Azure Functions that defines settings applicable to all functions within a Function App. For Python developers, host.json can be used to configure logging, extensions, and other runtime behaviors, enabling centralized control over function execution.





645
Azure Functions + PP365
Service Bus Triggers
Triggers that activate Azure Functions in response to messages in Azure Service Bus queues or topics. Python functions with Service Bus triggers can process asynchronous messages, enabling decoupled and scalable communication between different parts of an application or between services.





646
Azure Functions + PP365
local.settings.json
A configuration file used during local development of Azure Functions. It stores environment variables, connection strings, and other settings required to run functions locally. This file is not deployed to Azure, ensuring that sensitive information remains secure during development.





647
Azure Private DNS
Public DNS Zone
Definition: A DNS zone used for resolving publicly accessible resources on the internet.
Feature: While Azure Private DNS is for internal use, Public DNS Zones can be used in conjunction to handle external-facing resources.





648
Azure Private DNS
DNS Proxy
Definition: A feature that allows DNS queries to be redirected from Azure resources to custom DNS servers.
Feature: DNS Proxy provides greater flexibility by enabling the use of your own DNS servers within your Azure environment.





649
Azure Private DNS
Registration-Enabled
Definition: A setting that allows Azure to automatically create DNS records (e.g., A records) for VMs in the linked Private DNS Zone.
Feature: Registration-Enabled enables automatic DNS record creation for VMs that are deployed within a linked VNet, making it easier to resolve VM hostnames without manual intervention.





650
Azure Private DNS
SOA Record (Start of Authority Record):
Definition: A DNS record that defines the authoritative DNS server for a domain, along with other administrative data.
Feature: Azure automatically manages SOA records for each Private DNS Zone to define the authoritative source for that zone.





651
Azure Private DNS
Hybrid DNS
Definition: A DNS architecture that combines Azure DNS (Private and Public) with on-premises DNS services.
Feature: Azure Private DNS allows integration with hybrid DNS setups, where DNS queries can be resolved both within Azure and on-premises, facilitating a seamless DNS experience across environments.





652
Azure Private DNS
Split-Horizon DNS
Definition: A DNS setup where different DNS records are provided based on the requester's location.
Feature: Azure Private DNS can be used to implement split-horizon DNS, where the same domain name resolves differently for internal (private) and external (public) users.





653
Terraform
Built-In Functions:
Definition: Terraform provides functions for manipulating data types like strings, lists, and maps.
Usage: Essential for transforming and preparing data for resource configurations.

Examples:
join(separator, list): Concatenates list elements.
h
Copy
"${join(",", var.instance_ids)}"
split(delimiter, string): Splits a string into a list.
lookup(map, key, default): Retrieves a value from a map.





654
Terraform
Ticket-based review processes are a bottleneck that can slow down development. Instead, you can use Sentinel, a policy-as-code framework, to automatically enforce compliance and governance policies before Terraform makes infrastructure changes. Sentinel policies are available in Terraform Enterprise and HCP Terraform.





655
Terraform
Variable References:
Refer to variables using the var. prefix within interpolation expressions. For example:

${var.env}





656
Terraform
At a large organization, your centralized operations team may get many repetitive infrastructure requests. You can use Terraform to build a "self-serve" infrastructure model that lets product teams manage their own infrastructure independently.





657
Terraform
Variable Declaration:
Use the variable block to declare variables. For example:

variable "env" {
  description = "The deployment environment"
  type        = string
}





658
Terraform
Expressions and Operators:
Definition: Terraform uses expressions to compute values. These support arithmetic operations, string concatenation, and comparisons.
Usage: Allows dynamic configuration based on variable values or conditions.

Example:


"${var.a + var.b}"
"${var.env == "prod" ? "Production" : "Staging"}"





659
Logging in Python
Q: How can you prevent log messages from bubbling up to parent loggers in Python's logging module?

A: By setting propagate=False on the child logger.
This stops the log messages from being handled by ancestor loggers, ensuring they are processed only by the child logger's handlers.





660
Logging in Python
Q: What is the purpose of a Formatter in Python's logging module?

A: To define the structure and content of log messages using formats like '%(asctime)s - %(levelname)s - %(message)s'.
This ensures that log messages are consistently formatted for readability and analysis.





661
Logging in Python
Q: What is one advantage of using structured logging libraries like Structlog over Python's built-in logging module?

A: Structured logging facilitates easier parsing, querying, and analysis of log data, especially when integrating with log management systems.
This is particularly useful for applications that require detailed and machine-readable log formats.





662
Logging in Python
Q: What is a common practice for naming loggers within Python modules?

A: Using logging.getLogger(__name__) to automatically name the logger based on the module's name.
This practice ensures that logger names reflect the module structure, aiding in organized logging configurations.





663
TSQL
Stored Procedures:

Precompiled TSQL routines that encapsulate one or more SQL statements, enhancing reusability, performance, and security.





664
TSQL
JOIN Types and Conditions:

FULL OUTER JOIN: Returns rows when there is a match in either table, useful for capturing unmatched records.
Self-Joins: Joining a table to itself using different aliases to handle relationships within the same table.





665
TSQL
Q: Why would you use COALESCE(a, b) in a SELECT statement?
A: It returns the first non-null value among its arguments. Useful for fallback values like choosing between custom and default rates.





666
TSQL
Transactions and Isolation Levels:

Use BEGIN TRANSACTION, COMMIT, and ROLLBACK to group related SQL statements, ensuring data integrity.
Isolation levels (e.g., READ COMMITTED) manage concurrency and data consistency.





667
TSQL
Q: How do window functions differ from aggregate functions with GROUP BY?
A: Window functions (like SUM(...) OVER (...)) calculate values across sets of rows without collapsing them into a single row, preserving the full row data.





668
TSQL
Column and Table Aliasing:

Use the AS keyword to rename columns and tables (e.g., ts_name AS ar_adjustment_name).
Consistent naming conventions (like using underscores) improve readability and maintenance.





669
TSQL
Derived Tables:

Subqueries in the FROM clause that act as temporary tables with an alias.





670
TSQL
CASE Expressions:

Implements conditional logic within queries to create computed columns or flags (e.g., flagging which date or account source is used).





671
Azure AD Authentication
Role Assignment Propagation
Role permissions may take time to propagate across Azure, so changes in role assignments might not be immediately reflected in access control.





672
Azure AD Authentication
App Registration
Registers an app in Azure AD, creating its identity to authenticate with Azure services. Allows the app to access resources and interact with Azure services.





673
Azure AD Authentication
Custom Roles
User-defined roles with specific permissions, used when built-in roles don’t provide the required access or for more granular control.





674
Azure AD Authentication
Principal
An identity (user, group, service principal) that is granted access to Azure resources based on assigned roles.





675
Azure VM + Developer
Custom Script Extension
A VM extension that allows you to run PowerShell or shell scripts post-deployment, useful for automation, configuration, or app installation after the VM is provisioned.





676
Azure VM + Developer
Azure Policy
A governance tool that defines and enforces organizational rules on Azure resources, such as restricting VM sizes, locations, or blocking public IP assignments.





677
Azure VM + Developer
REPL
Short for “Read-Eval-Print Loop,” an interactive shell that allows developers to run and evaluate code statements live (e.g., Python shell, Node.js REPL).





678
Azure VM + Developer
Package Manager
A tool for installing, updating, and managing external libraries your app depends on (e.g., `pip`, `npm`, `nuget`, `brew`).





679
Azure VM + Developer
Pre-Commit Hook
A Git hook that runs scripts (e.g., formatters, tests) before committing code, helping catch issues early in the development workflow.





680
Azure VM + Developer
Cloud-Init
A Linux-native tool that enables automatic VM customization on boot using YAML config files, typically used to install packages, configure networking, or run scripts.





681
Azure VM + Developer
Debugger Config (launch.json)
A JSON config file in VS Code that specifies how to run and debug an app, including which script to execute, arguments, environment variables, and breakpoints.





682
Azure VM + Developer
SSH Config File
A local file (`~/.ssh/config`) used to define aliases and settings for SSH connections, making it easier to reuse hostnames, ports, and identities.





683
Azure VM + Developer
Language Server Protocol (LSP)
A communication protocol between an editor and a language-specific server that provides smart features like autocomplete, go-to-definition, and linting.





684
Azure VM + Developer
Dotfiles
A collection of personal configuration files (e.g., `.bashrc`, `.gitconfig`, `.vimrc`) that define your shell, editor, and tool preferences across machines.





685
Azure VM + Developer
Systemd Service
A background service on Linux managed by `systemctl`, which can run your app as a daemon, restart on failure, and start automatically on boot.





686
Jane Eyre, Bronte
Fillip
(FIL-ip) A small but impactful boost or stimulus; also refers to a flicking motion made by snapping fingers.





687
Jane Eyre, Bronte
Contumelious Epithet
(con-too-MEE-lee-uhs EP-uh-thet) An insult or scornful nickname intended to express contempt, often delivered with arrogance.





688
RAG Project
async / await
Keywords in Python for writing non-blocking, asynchronous code.





689
RAG Project
auth_client
A special fixture often defined in conftest.py that returns a test client with fake authentication already set up.





690
Email Auth and Security
PGP (Pretty Good Privacy)

A data encryption and decryption program that provides cryptographic privacy and authentication.
Used for securing emails through encryption and digital signatures.
Combines symmetric and asymmetric encryption for robust security.





691
DAX
KEEPFILTERS makes filters additive (intersecting) instead of replacing.
By default, CALCULATE(…, Column = Value) replaces any existing filter on Column. Wrapping that predicate in KEEPFILTERS forces DAX to intersect it with whatever filters are already in place.





692
DAX
KEEPFILTERS is a modifier, not a standalone function.
You can only use KEEPFILTERS inside a filter argument of CALCULATE or CALCULATETABLE; it can’t wrap an entire table expression on its own.





693
DAX
KEEPFILTERS protects nested security or business rules.
When you have an RLS or broad rule on a table, KEEPFILTERS ensures your measure’s extra restrictions don’t accidentally remove that outer rule.