





1
Jane Eyre, Bronte
Contumelious Epithet
(con-too-MEE-lee-uhs EP-uh-thet) An insult or scornful nickname intended to express contempt, often delivered with arrogance.





2
Jane Eyre, Bronte
Salubrious
(suh-LOO-bree-uhs) Describing something beneficial to health or well-being, such as a pleasant climate, nutritious food, or healthy lifestyle.





3
Jane Eyre, Bronte
Basin and Ewer
(BAY-sin and YOO-er) A bowl (basin) and jug (ewer) used together for hand or face washing, commonly found before the advent of modern plumbing.





4
Jane Eyre, Bronte
Cachinnation (kak-ih-NAY-shun)
Loud, uncontrollable laughter, often with a connotation of being excessive, mocking, or even sinister. Derived from the Latin word cachinnare, it emphasizes the intensity of the laugh.





5
Jane Eyre, Bronte
Beldame
(BEL-dame) An old woman, sometimes used respectfully for a grandmother, or pejoratively to describe a hag or crone.





6
Jane Eyre, Bronte
Hips and Haws
Fruits of wild roses (hips) and hawthorn trees (haws), commonly seen in hedgerows. These red or orange berries are associated with autumn and are used in herbal remedies and preserves.

159
JavaScript Concepts
Front: What are tagged templates and how do you use them?

Back: Tagged templates allow you to parse template literals with a function. The function receives the template string and the values as arguments.
  function tag(strings, ...values) {
  console.log(strings); // Array of string segments
  console.log(values);  // Array of values
  return 'Tagged template result';
}
const result = tag`Hello, ${name}!`;
console.log(result); // Output: Tagged template result





7
Jane Eyre, Bronte
Fillip
(FIL-ip) A small but impactful boost or stimulus; also refers to a flicking motion made by snapping fingers.

String({ key: 'value' });
// => '[object Object]'





8
Logging in Python
Q: What is the purpose of a Formatter in Python's logging module?

A: To define the structure and content of log messages using formats like '%(asctime)s - %(levelname)s - %(message)s'.
This ensures that log messages are consistently formatted for readability and analysis.





9
Logging in Python
Q: What is the significance of the level parameter when configuring a logger or handler in Python's logging module?

A: It sets the minimum severity of log messages that will be processed; messages below this level are ignored.
For example, setting level=logging.INFO means that DEBUG messages will be ignored.





10
Logging in Python
Q: What is one advantage of using structured logging libraries like Structlog over Python's built-in logging module?

A: Structured logging facilitates easier parsing, querying, and analysis of log data, especially when integrating with log management systems.
This is particularly useful for applications that require detailed and machine-readable log formats.





11
Logging in Python
Q: What is one advantage of using dictConfig over fileConfig for logging configuration in Python's logging module?

A: dictConfig allows for more complex and dynamic configurations, often being easier to manage programmatically.
This flexibility makes it suitable for applications that require runtime logging configuration changes.





12
Logging in Python
Q: What is a NullHandler used for in Python's logging module?

A: To discard log messages, preventing "No handler" warnings in library code.
This is useful for libraries to ensure they don't interfere with the application's logging configuration.





13
Logging in Python
Q: What is a common practice for naming loggers within Python modules?

A: Using logging.getLogger(__name__) to automatically name the logger based on the module's name.
This practice ensures that logger names reflect the module structure, aiding in organized logging configurations.





14
Logging in Python
Q: What is the role of a Formatter in a logging handler within Python's logging module?

A: To specify the layout and content of the log messages, such as including timestamps, log levels, and message text.
Formatters ensure that log messages are consistently structured for readability and analysis.





15
Logging in Python
Q: Why is it important to centralize logging configuration in large applications using Python's logging module?

A: Centralizing logging configuration ensures consistency, makes it easier to manage, and prevents scattered and conflicting logging setups across different modules.
This approach streamlines logging management and enhances maintainability.





16
Pandas
What is the difference between pivot() and pivot_table()?

pivot() reshapes data but requires unique combinations of index/columns.

pivot_table() allows for aggregation when there are duplicates and is more flexible.

Example for pivot_table():
df.pivot_table(index='category', columns='sub_category', values='value', aggfunc='sum')





17
Pandas
How do you use apply() with a lambda function to transform a DataFrame?

apply() allows you to apply a function (including a lambda) to each row or column.

    Example:
df['new_column'] = df.apply(lambda row: row['A'] * 2 if row['B'] > 10 else row['A'], axis=1)





18
Pandas
Resampling changes the frequency of your time-series data.

Downsampling reduces the frequency (e.g., from daily to monthly).

    Example:
df.resample('M').sum()  # Downsample to monthly and sum values





19
Pandas
How can you apply multiple aggregation functions after resampling in Pandas?

You can apply functions like sum(), mean(), max(), etc., after resampling.

    Example:
df.resample('M').agg({'value': ['sum', 'mean']})





20
Pandas
What does the unstack() function do in Pandas?

unstack() "unpivots" a DataFrame by converting the index into columns.

    Example:
df.groupby(['category', 'sub_category']).sum().unstack()





21
Pandas
How do you apply multiple aggregation functions (e.g., sum, mean) to different columns in a groupby operation?

Use .agg() with a dictionary to specify different aggregation functions for each column.

    Example:
df.groupby('category').agg({'value': ['sum', 'mean'], 'other_col': 'max'})





22
Pandas
How can you fill missing values using interpolation in a time-series column?

Use .interpolate() to perform interpolation on missing values.

    Example:
df['value'] = df['value'].interpolate(method='linear')





23
Pandas
How do you filter a DataFrame df using the query() method?

query() allows you to filter rows based on conditions written as a string.

    Example:
df.query('value > 10 and category == "A"')





24
Pandas
What is a MultiIndex, and how do you use it?

A MultiIndex allows for hierarchical indexing in rows and columns.

You can create it using set_index() with multiple columns or pd.MultiIndex.from_arrays().

    Example:
df.set_index(['category', 'sub_category'], inplace=True)





25
DAX
KEEPFILTERS supports multiple predicates.
You can pass several comma-separated Boolean tests into KEEPFILTERS, and each one will be intersected both with each other and with the external context.





26
DAX
KEEPFILTERS is a modifier, not a standalone function.
You can only use KEEPFILTERS inside a filter argument of CALCULATE or CALCULATETABLE; it can’t wrap an entire table expression on its own.





27
DAX
KEEPFILTERS syntax is simple.

dax
CALCULATE(
  <expression>,
  KEEPFILTERS( <BooleanFilter1> [, <BooleanFilter2>, … ] )
)





28
DAX
KEEPFILTERS returns BLANK when there’s no overlap.
If your outer context excludes every value in your KEEPFILTERS set, the measure will come back blank—no rows remain after intersection.





29
DAX
KEEPFILTERS shines in part-to-whole calculations.
Use KEEPFILTERS when you need “this item’s sales ÷ its category’s sales”—it preserves the category filter while applying your item filter.





30
DAX
KEEPFILTERS vs. ALL/REMOVEFILTERS (and other modifiers).
While ALL or REMOVEFILTERS clears filters, and ALLEXCEPT/ALLSELECTED clear selectively, KEEPFILTERS does the opposite—it retains existing filters and narrows them further.





31
DAX
KEEPFILTERS makes filters additive (intersecting) instead of replacing.
By default, CALCULATE(…, Column = Value) replaces any existing filter on Column. Wrapping that predicate in KEEPFILTERS forces DAX to intersect it with whatever filters are already in place.





32
DAX
KEEPFILTERS protects nested security or business rules.
When you have an RLS or broad rule on a table, KEEPFILTERS ensures your measure’s extra restrictions don’t accidentally remove that outer rule.





33
DAX
KEEPFILTERS can outperform FILTER(...) for simple column predicates.
For straight column comparisons (e.g. Dim[Category] = "X"), KEEPFILTERS often lets the engine optimize better than wrapping a FILTER() over the entire table.





34
Azure Private DNS
CNAME Record (Canonical Name Record):
Definition: A DNS record that maps one domain name to another domain name (aliasing).
Feature: Azure supports CNAME records, which allow you to alias internal resources, like services, within a Private DNS Zone.





35
Azure Private DNS
Registration-Enabled
Definition: A setting that allows Azure to automatically create DNS records (e.g., A records) for VMs in the linked Private DNS Zone.
Feature: Registration-Enabled enables automatic DNS record creation for VMs that are deployed within a linked VNet, making it easier to resolve VM hostnames without manual intervention.





36
Azure Private DNS
Dynamic DNS (DDNS)
Definition: A DNS service that automatically updates DNS records when an IP address changes.
Feature: Dynamic DNS in Azure Private DNS helps automatically update DNS records (e.g., when VM IP addresses change) without manual intervention.





37
Azure Private DNS
Public DNS Zone
Definition: A DNS zone used for resolving publicly accessible resources on the internet.
Feature: While Azure Private DNS is for internal use, Public DNS Zones can be used in conjunction to handle external-facing resources.





38
Azure Private DNS
Custom DNS Server
Definition: A DNS server specified for use in the VNet settings instead of the default Azure DNS.
Feature: Custom DNS servers can be used in combination with Azure Private DNS if you need to resolve DNS queries using on-premises or third-party DNS infrastructure.





39
Azure Private DNS
SOA Record (Start of Authority Record):
Definition: A DNS record that defines the authoritative DNS server for a domain, along with other administrative data.
Feature: Azure automatically manages SOA records for each Private DNS Zone to define the authoritative source for that zone.





40
Azure Private DNS
Record Set
Definition: A collection of DNS records for a specific hostname within a DNS zone.
Feature: Azure allows you to create and manage various types of record sets, including A, AAAA, CNAME, MX, PTR, and SOA, within Private DNS Zones.





41
Azure Private DNS
MX Record (Mail Exchange Record):
Definition: A DNS record that specifies the mail servers responsible for receiving email on behalf of a domain.
Feature: You can use MX records in your Private DNS Zone to manage email services for internal applications.





42
Azure Private DNS
Private DNS Zone:
Definition: A container within Azure that holds DNS records for a private domain, resolvable only within the associated Azure Virtual Networks (VNets).
Feature: Azure Private DNS Zones allow automatic DNS resolution for internal resources within Azure, simplifying DNS management for internal services.





43
Azure AD Authentication
Managed Identities
Azure-managed identities used by Azure resources (like VMs) to authenticate to other Azure services, removing the need to manage credentials.





44
Azure AD Authentication
App Registration vs Enterprise Application
App Registration defines the app’s identity, while Enterprise Application represents the actual instance of the app within an Azure AD tenant.





45
Azure AD Authentication
Azure AD Roles vs Azure Resource Roles
Azure AD Roles manage access to directory functions (e.g., Global Administrator), while Resource Roles control access to Azure resources (e.g., Contributor).





46
Azure AD Authentication
Role Assignment Propagation
Role permissions may take time to propagate across Azure, so changes in role assignments might not be immediately reflected in access control.





47
Azure AD Authentication
App Registration
Registers an app in Azure AD, creating its identity to authenticate with Azure services. Allows the app to access resources and interact with Azure services.





48
Azure AD Authentication
Role Assignment
Links a principal (user, group, service principal) to a role at a defined scope, granting specific permissions to interact with Azure resources.





49
Azure AD Authentication
Scope
Defines the level at which a role is applied, such as management group, subscription, resource group, or individual resource. Higher scopes apply to all child resources.





50
Azure AD Authentication
Service Principal Authentication Methods
Authentication for service principals can be done using Client Secret, Client Certificate, or Managed Identity, which provides secure, credential-free access to Azure services.





51
Azure AD Authentication
Role Inheritance
Roles assigned at a higher scope (e.g., subscription) are inherited by resources at lower scopes (e.g., resource groups, resources).





52
Azure AD Authentication
Principal
An identity (user, group, service principal) that is granted access to Azure resources based on assigned roles.





53
Terraform
You can create and use Terraform modules that codify the standards for deploying and managing services in your organization, allowing teams to efficiently deploy services in compliance with your organization’s practices.





54
Terraform
At a large organization, your centralized operations team may get many repetitive infrastructure requests. You can use Terraform to build a "self-serve" infrastructure model that lets product teams manage their own infrastructure independently.





55
Terraform
Built-In Functions:
Definition: Terraform provides functions for manipulating data types like strings, lists, and maps.
Usage: Essential for transforming and preparing data for resource configurations.

Examples:
join(separator, list): Concatenates list elements.
h
Copy
"${join(",", var.instance_ids)}"
split(delimiter, string): Splits a string into a list.
lookup(map, key, default): Retrieves a value from a map.





56
Terraform
Dynamic Blocks:
Definition: Allow you to construct nested blocks dynamically based on complex data structures.
Usage: Ideal for when the number of nested blocks is not fixed and depends on variable data.

Example:

dynamic "ingress" {
  for_each = var.ingress_rules
  content {
    from_port = ingress.value.from
    to_port   = ingress.value.to
    protocol  = ingress.value.protocol
  }
}





57
Terraform
Ticket-based review processes are a bottleneck that can slow down development. Instead, you can use Sentinel, a policy-as-code framework, to automatically enforce compliance and governance policies before Terraform makes infrastructure changes. Sentinel policies are available in Terraform Enterprise and HCP Terraform.





58
Terraform
Provisioning infrastructure across multiple clouds increases fault-tolerance, allowing for more graceful recovery from cloud provider outages. However, multi-cloud deployments add complexity because each provider has its own interfaces, tools, and workflows. Terraform lets you use the same workflow to manage multiple providers and handle cross-cloud dependencies.





59
Terraform
Double Quotes vs. Single Quotes:

Double Quotes (" "): Allow variable interpolation.
Single Quotes (' '): Do not interpolate variables; they treat the content as a literal string.





60
Terraform
Local Values:
Definition: Local values allow you to define computed variables within a configuration to simplify expressions or avoid repetition.
Usage: Useful for intermediate calculations or to centralize common values.

Example:

locals {
  app_name = "myapp"
  instance_count = length(var.instance_ids)
}





61
Terraform
Meta-Arguments:
Definition: Special arguments like count, depends_on, and lifecycle that control resource behavior and relationships.
Count: Enables creating multiple instances of a resource.

resource "aws_instance" "web" {
  count = var.instance_count
  # Other configuration...
}





62
Terraform
Debugging Tips:
Check Quotes: Ensure that you use double quotes for strings that require interpolation.
Use terraform validate: Run this command frequently to catch syntax issues early.
Review Variable References: Confirm that all variable references use the correct var. prefix.





63
Azure Functions + PP365
Async Programming (Asyncio)
A programming paradigm in Python that enables concurrent execution of code using asynchronous functions and event loops. In Azure Functions, leveraging asyncio can improve performance and scalability by allowing Python functions to handle multiple tasks simultaneously without blocking.





64
Azure Functions + PP365
Dynamic Content
Data dynamically pulled from triggers or previous actions in Power Automate flows. Dynamic content allows flows to be flexible and responsive to varying input data, enabling customized and context-aware operations when interacting with services like Azure Functions and Dataverse.





65
Azure Functions + PP365
Azure Service Principal
An identity created for use with applications, hosted services, and automated tools to access Azure resources. Service principals enable secure, programmatic access to Azure services, acting as non-human users with specific permissions, essential for authenticating applications like Power Automate and Azure Functions.





66
Azure Functions + PP365
Function Proxies
A feature in Azure Functions that allows developers to create a façade over one or more functions or APIs. Function Proxies can manage routing, transformation, and composition of requests to Python Azure Functions, simplifying API management and enhancing security by abstracting backend services.





67
Azure Functions + PP365
host.json
A global configuration file for Azure Functions that defines settings applicable to all functions within a Function App. For Python developers, host.json can be used to configure logging, extensions, and other runtime behaviors, enabling centralized control over function execution.





68
Azure Functions + PP365
Dependency Management
The practice of managing external libraries and packages that a Python application relies on. In Azure Functions, managing dependencies through requirements.txt ensures that all necessary packages are installed and versioned correctly, maintaining consistency between development and production environments.





69
Azure Functions + PP365
Function App Secrets
Sensitive information required by Azure Functions, such as API keys or connection strings. Python Azure Functions manage secrets through environment variables, Azure Key Vault integrations, or managed identities, ensuring that sensitive data is stored securely and accessed only by authorized functions.





70
Azure Functions + PP365
HTTP Triggers
A type of function trigger that activates an Azure Function in response to HTTP requests. Python Azure Functions with HTTP triggers can handle RESTful API calls, webhooks, and other HTTP-based interactions, making them suitable for building APIs and integrating with web services.





71
Azure Functions + PP365
Service Bus Triggers
Triggers that activate Azure Functions in response to messages in Azure Service Bus queues or topics. Python functions with Service Bus triggers can process asynchronous messages, enabling decoupled and scalable communication between different parts of an application or between services.





72
Azure Functions + PP365
Local Debugging
Running and testing Azure Functions on a local machine to identify and fix issues before deployment. Python developers use tools like Azure Functions Core Tools and VS Code to debug functions locally, allowing for rapid development and troubleshooting in a controlled environment.





73
Azure DevOps Pipelines
What is the default working directory for a pipeline job in Azure DevOps?
Answer: $(Build.SourcesDirectory)





74
Azure DevOps Pipelines
How can you pass secrets securely in Azure DevOps YAML pipelines?
Answer: You pass secrets using pipeline variables marked as secret in Azure DevOps. They are referenced in the YAML file as $(secret_variable) but are masked and not exposed in logs.





75
Azure DevOps Pipelines
How do you cache dependencies in Azure DevOps pipelines to speed up builds?
Answer: Use the cache task in the YAML file to store and reuse files between pipeline runs. This can help speed up build times by caching dependencies.





76
Azure DevOps Pipelines
How do you use stages with dependencies in Azure DevOps YAML pipelines?
Answer: You can define dependsOn between stages to specify the execution order. Stages will run sequentially based on the dependencies defined, ensuring that one stage only runs after another has completed.





77
Azure DevOps Pipelines
In Azure DevOps, what command is used to run a pipeline manually from the Azure DevOps portal?
Answer: "Run pipeline" button in the Azure DevOps portal.





78
Azure DevOps Pipelines
What is the default trigger for a YAML-based pipeline in Azure DevOps?
Answer: A trigger based on code changes in a Git repository.





79
Azure DevOps Pipelines
What is the purpose of the trigger: none keyword in an Azure DevOps YAML pipeline?
Answer: It disables automatic triggers, meaning the pipeline will not run automatically on code changes. This is useful for manual execution or scheduled runs.





80
Azure DevOps Pipelines
How do you run a pipeline on a self-hosted agent in Azure DevOps?
Answer: pool: self-hosted





81
Azure DevOps Pipelines
How can you trigger a pipeline based on a Git tag in Azure DevOps?
Answer: You use the trigger keyword with the tags sub-keyword to specify that the pipeline should trigger when a Git tag is pushed.

Example:
trigger:
  tags:
    include:
      - v*





82
Azure DevOps Pipelines
Which YAML element in an Azure DevOps pipeline defines the steps or tasks to be executed?
Answer: steps





83
TSQL
Common Table Expressions (CTEs):

Defined with the WITH clause to create temporary result sets within a query.
Recursive CTEs: Handle hierarchical data by repeatedly referencing the CTE itself.





84
TSQL
Transactions and Isolation Levels:

Use BEGIN TRANSACTION, COMMIT, and ROLLBACK to group related SQL statements, ensuring data integrity.
Isolation levels (e.g., READ COMMITTED) manage concurrency and data consistency.





85
TSQL
Stored Procedures:

Precompiled TSQL routines that encapsulate one or more SQL statements, enhancing reusability, performance, and security.





86
TSQL
Pivoting Data:

Use the PIVOT operator to transform rows into columns for reporting or data summarization.





87
TSQL
Column and Table Aliasing:

Use the AS keyword to rename columns and tables (e.g., ts_name AS ar_adjustment_name).
Consistent naming conventions (like using underscores) improve readability and maintenance.





88
TSQL
Derived Tables:

Subqueries in the FROM clause that act as temporary tables with an alias.





89
TSQL
Table Variables:

Declared using DECLARE and used similarly to temporary tables, often for smaller data sets with a more limited scope.





90
TSQL
Q: What is the purpose of the GROUP BY clause in T-SQL?
A: It collapses rows into groups based on the values of one or more columns and applies aggregate functions to each group.





91
TSQL
Indexing Considerations:

Ensure columns used in JOINs or WHERE clauses are indexed for better performance.





92
TSQL
CASE Expressions:

Implements conditional logic within queries to create computed columns or flags (e.g., flagging which date or account source is used).





93
PowerShell Modules
Find-Module

Definition: Searches for modules in a repository like the PowerShell Gallery.
Example Usage: Find-Module -Name SQLServer searches for the "SQLServer" module.





94
PowerShell Modules
Uninstall-Module

Definition: A cmdlet used to remove a module from the system.
Explanation: Example: Uninstall-Module -Name ActiveDirectory removes the ActiveDirectory module.





95
PowerShell Modules
Module.psm1

Definition: The primary script file for a PowerShell module.
Explanation: Contains the functions, cmdlets, and other code that define the module's functionality.





96
PowerShell Modules
Module Conflicts

Definition: Situations where multiple modules have cmdlets or functions with the same name.
Explanation: Resolved by fully qualifying cmdlet names with the module name (e.g., Az\Get-AzVM).





97
PowerShell Modules
Module Version Specification

Definition: The practice of specifying exact module versions when importing to ensure script compatibility.
Explanation: Done using parameters like -RequiredVersion in Import-Module. Example: Import-Module -Name Az -RequiredVersion 5.0.0.





98
PowerShell Modules
New-AzVM

Definition: Deploys a new Azure Virtual Machine.
Example Usage: New-AzVM -ResourceGroupName "TestResourceGroup" -Name "TestVM" -Location "EastUS" -Image "Win2019Datacenter".





99
PowerShell Modules
Auto-Import

Definition: A feature in PowerShell that automatically imports a module when a cmdlet from that module is invoked.
Explanation: Starting from PowerShell 3.0, modules can be auto-imported, eliminating the need to manually run Import-Module for each module you use.





100
PowerShell Modules
New-AzResourceGroup

Definition: Creates a new Azure Resource Group.
Example Usage: New-AzResourceGroup -Name "TestResourceGroup" -Location "EastUS".





101
PowerShell Modules
Get-Module -ListAvailable

Definition: Lists all modules installed on the system that are available to be imported.
Explanation: Shows modules in all module paths, regardless of whether they are currently loaded.





102
PowerShell Modules
Update-Module

Definition: A cmdlet used to update an installed module to its latest version from the repository.
Explanation: Example: Update-Module -Name Az updates the Az module. To update all modules: Get-InstalledModule | Update-Module.





103
CCH Axcess
There are some grids in the client profile that allow selection of only one record at a time. For grids that allow selection of multiple records, the total number of selected records across all pages displays in the status bar.





104
CCH Axcess
For tax filing purposes, sole proprietors should be added as an Individual client type. Sole Proprietorship is not an accepted client type in Tax.





105
CCH Axcess
The sub-ID field displays only when the option to identify clients by both the main ID and the sub-ID is selected in Firm > Settings and defaults.





106
CCH Axcess
Grids are used to list and access items, such as clients and staff. Grid data can be manipulated in various ways. Some of the behaviors for managing grid data, such as Print, Export, and Find, follow Microsoft® standards. Additional grid components exist on the ribbon, right-click menu, and in the grid itself.





107
CCH Axcess
You can create teams in Staff Manager that mirror the working groups, departments, reporting relationships, or other groupings used in your firm. Grouping staff into teams can simplify Staff Manager since administrative tasks, such as assigning staff to projects, can be performed for all team members at one time. You can also organize reports by teams.





108
CCH Axcess
Providing Access Through Staff Attributes
Granting access by organizational unit or position allows for less maintenance, but gives less precise control. Including or excluding some staff in various groups may be required. An advantage of granting access through attributes is that new staff or staff whose attributes change are automatically granted access according to their organizational unit or position.





109
CCH Axcess
Templates are used to add new staff without having to repeatedly enter the same basic information. Enter default options in profile templates to decrease the time required to create staff. See Setting Up Staff Templates for more information.





110
CCH Axcess
You can customize some of the functional options and design features of CCH Axcess™ modules you have installed by accessing User Options from the Application menu located in the upper-left corner of the window. Customizations are applied to the modules available under your personal login.





111
CCH Axcess
Different Client Status values available:
    Active. Available in all modules for all activity.
    Inactive. Available for reporting only.
    On hold. Available in all areas.
    Litigation hold. On hold for litigation reasons and cannot be deleted.
    Terminated. Not available in lists and unavailable for activity.





112
CCH Axcess
All client access groups with an assigned organizational unit the same as the organizational unit (office and business unit) of the client displays in the Client Access Group Assignments grid.





113
C# Basics
What’s the difference between delegates and events in C#?

C#: A delegate is a type that holds references to methods, while an event is a special type of delegate that can only be invoked by the class that declares it, enforcing encapsulation.
Example:
public delegate void MyEvent();
public event MyEvent EventTriggered;





114
C# Basics
What are common libraries and frameworks in C#/.NET?

Web: ASP.NET, Blazor.
Data: LINQ, Entity Framework.
UI: Windows Forms, WPF.





115
C# Basics
What is the concept of properties in C#?

C#: Properties allow getting/setting fields with control.
Example:
public class Person {
    private string _name;
    public string Name {
        get { return _name; }
        set { _name = value; }
    }
}





116
C# Basics
How do nullable types work in C#?

C#: Nullable types allow value types (like int) to represent null in addition to their normal range of values.
Example:
int? x = null;





117
C# Basics
An enum is a distinct value type that defines a set of named constants.
Example:
public enum Day { Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday }

Day today = Day.Monday;





118
C# Basics
How does asynchronous programming work in C#?

C#: Asynchronous programming is implemented using async and await.
Example:
public async Task<string> FetchData() {
    await Task.Delay(1000);
    return "Data fetched";
}





119
C# Basics
Extension methods allow you to add functionality to existing types without modifying their source code.
Example:
public static class StringExtensions {
    public static bool IsNullOrEmpty(this string str) {
        return string.IsNullOrEmpty(str);
    }
}





120
C# Basics
How is a class defined in C#?

C#:
public class Dog {
    public string Name { get; set; }
    
    public Dog(string name) {
        Name = name;
    }
}





121
C# Basics
How do you write an if-statement in C#?

C#:
if (x > 10) {
    Console.WriteLine("x is greater than 10");
}





122
C# Basics
How is inheritance implemented in C#?

public class Dog : Animal {
    public void Bark() {
        Console.WriteLine("Dog barks");
    }
}





123
FSLogix
Cloud Cache uses the concept of a proxy file, represented as Profile_%username%.vhd though it isn't a true VHD file. The proxy file is used as a means to collect and process all I/O writes destined for the local cache. The I/O writes are buffered in memory and tracked via the proxy file before they're written out as block-level cache objects in the cache directory.





124
FSLogix
Q: How does FSLogix improve Office 365 performance in Azure Virtual Desktop?
A: FSLogix isolates Office 365 data (such as Outlook, Teams, OneDrive) in a container (VHDX), reducing load times and ensuring that data is quickly accessible without syncing delays.





125
FSLogix
During a user's session when the connection to any storage provider becomes unhealthy, FSLogix queues up all the changes and then flushes them to the providers when they return to a healthy state.





126
FSLogix
Profile Container:
A core FSLogix component that encapsulates the entire user profile in a VHD/VHDX file. This approach improves logon/logoff times and reduces issues associated with traditional roaming profiles by loading a single container instead of numerous individual files.





127
FSLogix
Cloud Cache operates the user's profile from the local cache during the user's session and must be configured with one or more remote storage providers as specified in CCDLocations. These remote storage providers store copies of the local cache and are used during the current session and for subsequent sign ins.





128
FSLogix
Redirector Driver:
A mechanism within FSLogix that intercepts and reroutes file system I/O operations aimed at profile containers. It helps mitigate file locking issues—especially in multi-session environments—by ensuring controlled access to VHD/VHDX files.





129
FSLogix
Data is written to all storage providers regardless of which provider is used during data hydration.
Performance (latency, utilization, bottlenecks) of a storage provider affects its sync status with the local copy.
Having one (1) or more provider that is behind in updates from local cache could be an indicator of an under performing storage provider.





130
FSLogix
Q: What does the FSLogix Profile Container do when a user is logging into multiple Azure Virtual Desktops (AVD)?
A: FSLogix mounts the same Profile Container (VHDX) to any virtual desktop the user logs into, ensuring that their profile settings, documents, and application preferences are consistent and immediately available across all virtual machines. This provides a unified experience regardless of which VM the user accesses.





131
FSLogix
Q: Where are FSLogix Profile Containers typically stored in Azure Virtual Desktop environments?
A: FSLogix Profile Containers are typically stored in Azure Files or network shares (SMB share) to allow consistent access across different virtual desktop sessions.





132
FSLogix
A full VHD(x) clone is performed when Cloud Cache determines, at sign in, that a storage provider isn't at the same sequence. During this operation, all pending writes are kept in the local cache until all storage providers are at the same sequence. Once complete, the flush operation begins sending new data to the storage providers.





133
Azure VM + Developer
Custom Script Extension
A VM extension that allows you to run PowerShell or shell scripts post-deployment, useful for automation, configuration, or app installation after the VM is provisioned.





134
Azure VM + Developer
Linter
A code analysis tool that detects errors, bugs, and style violations before runtime; common examples include ESLint (JavaScript) and Pylint (Python).





135
Azure VM + Developer
Availability Zone
A physically isolated datacenter location within an Azure region, designed for high availability by spreading resources across separate zones with independent power, cooling, and networking.





136
Azure VM + Developer
Inbound NAT Rule
A networking rule used with load balancers to map a public-facing port to a specific VM's internal port, enabling external access to individual VMs in backend pools.





137
Azure VM + Developer
X11 Forwarding
An SSH technique that lets GUI applications run on a remote Linux machine but display on your local computer; requires an X server locally.





138
Azure VM + Developer
Port Forwarding
An SSH feature that lets you tunnel remote ports (e.g., a web app running on port 5000 on a VM) to your local machine for testing and access.





139
Azure VM + Developer
REPL
Short for “Read-Eval-Print Loop,” an interactive shell that allows developers to run and evaluate code statements live (e.g., Python shell, Node.js REPL).





140
Azure VM + Developer
Cloud-Init
A Linux-native tool that enables automatic VM customization on boot using YAML config files, typically used to install packages, configure networking, or run scripts.





141
Azure VM + Developer
Persistent vs Ephemeral
A comparison between VMs that retain data and configurations across reboots (persistent) vs temporary VMs used for disposable environments like Codespaces (ephemeral).





142
Azure VM + Developer
SSH Config File
A local file (`~/.ssh/config`) used to define aliases and settings for SSH connections, making it easier to reuse hostnames, ports, and identities.





143
Azure Compute Gallery
Azure Policy Enforcement – Some organizations restrict Compute Gallery usage via Azure Policies.





144
Azure Compute Gallery
Azure Marketplace Image as a Base – Using a pre-configured image from Azure Marketplace to deploy new VMs.





145
Azure Compute Gallery
Image Definition – A logical representation of an image, specifying OS type, publisher, and general metadata.





146
Azure Compute Gallery
Image Retention Policy – A strategy for keeping or removing older image versions to manage storage costs and subscription quotas.





147
Azure Compute Gallery
Shared Image – An image in ACG that is accessible across multiple subscriptions with proper RBAC configuration.





148
Azure Compute Gallery
Replication Time Constraints – Image replication is not instantaneous and can take several minutes to hours.





149
Azure Compute Gallery
SAS Token (Shared Access Signature) – A temporary, secure URL-based access method often used for sharing VHD files in Azure Storage.





150
Azure Compute Gallery
Generalized Image – A VM image that has been "cleaned" of system-specific data (using Sysprep for Windows or waagent -deprovision for Linux) to be reused across multiple VM deployments.





151
Azure Compute Gallery
Cross-Tenant Sharing – Not supported in ACG; images cannot be shared between different Azure Active Directory (Azure AD) tenants.





152
Azure Compute Gallery
Subscription Quotas – Limits on the number of image versions, definitions, and replication regions.





153
VMWare
Type 2 Hypervisor

A hypervisor that runs on top of an existing host operating system, using the OS for resource management. Examples: VMware Workstation, Oracle VirtualBox.





154
VMWare
ESXi Lockdown Mode

A security feature that restricts access to an ESXi host to only a few trusted sources, such as the vCenter Server or specific administrators. When Lockdown Mode is enabled, direct access to the ESXi host (such as via SSH or the vSphere Client) is disabled, except for users who have administrative privileges.





155
VMWare
Storage vMotion

The ability to migrate virtual machine disk files from one datastore to another without downtime, essential for managing storage resources across a cluster.





156
VMWare
DirectPath I/O

A feature in VMware ESXi that allows direct access to a physical device (e.g., a network adapter, GPU, or storage controller) by a virtual machine, bypassing the hypervisor for better performance. This is typically used for workloads requiring high performance, such as GPU acceleration or network-intensive applications.





157
VMWare
Type 1 Hypervisor

A hypervisor that runs directly on physical hardware, without an underlying operating system. Examples: VMware ESXi, Microsoft Hyper-V.





158
VMWare
vSphere HA Agent

A software agent installed on each ESXi host in a vSphere Cluster to enable High Availability (HA). The HA agent monitors the health of the host and communicates with other hosts to restart VMs automatically in the event of a host failure.





159
VMWare
vCenter Server Appliance (VCSA)

A Linux-based virtual appliance version of vCenter Server, which is optimized for VMware environments. The VCSA is a lightweight, pre-configured appliance designed to simplify deployment and management of vCenter Server without needing a Windows server.





160
VMWare
ESXi Host

A physical server that runs the VMware ESXi hypervisor to host virtual machines (VMs).





161
VMWare
vCenter Server

VMware's centralized management platform for multiple ESXi hosts and their associated virtual machines, used for configurations, monitoring, and management tasks.





162
VMWare
ESXi Free License (VMware ESXi Free)

A free version of VMware ESXi that provides basic virtualization capabilities without advanced features like vMotion, HA, or DRS. It's limited to 8 physical CPU cores and does not include access to vCenter Server for centralized management.





163
Asynchronous Python
asyncio.wait_for()
Runs a coroutine with a timeout in Python; raises TimeoutError if the coroutine doesn’t finish in time.





164
Asynchronous Python
async with (async context manager)
Manages asynchronous resources in Python like network sessions or database connections with proper cleanup.





165
Asynchronous Python
Thread Safety
Thread safety means that code or data structures function correctly when accessed by multiple threads simultaneously, usually achieved with proper synchronization.





166
Asynchronous Python
return_exceptions=True (in gather)
A parameter in Python's asyncio.gather() that returns exceptions as part of the results instead of cancelling all tasks on error.





167
Asynchronous Python
Daemon Thread
Daemon threads are background threads that do not prevent the program from exiting; they automatically close when all non-daemon threads have finished.





168
Asynchronous Python
Coroutine Object
The result of calling an async def function; it must be awaited or scheduled with the event loop to execute.





169
Asynchronous Python
asyncio.Queue
An async-safe queue in Python used for communication between producer and consumer coroutines.





170
Asynchronous Python
Thread
A thread is an independent sequence of execution within a program. Multiple threads can run concurrently within the same process.





171
Asynchronous Python
asyncio.shield()
Prevents a coroutine in Python from being cancelled even if the calling task is, ensuring it runs to completion.





172
Asynchronous Python
async
A keyword used in Python to declare an asynchronous function (async def), enabling the use of await inside it.





173
Microsoft Purview
Federated governance provides a centralized place to develop data safety, quality, and standards, but provides tools to create self-service access control, discoverability, and maintenance.





174
Microsoft Purview
To get started quickly, you might pick the preconfigured U.K. Financial Data policy template, which includes the Credit Card Number, EU Debit Card Number, and SWIFT Code sensitive information types.





175
Microsoft Purview
The most effective end-user documentation will be customized guidance and instructions you provide for the label names and configurations you choose. You can use the label policy setting Provide users with a link to a custom help page to specify an internal link for this documentation.





176
Microsoft Purview
Sensitivity labels provide users and admins with visibility into the sensitivity of the data that they're using, and the labels themselves can apply protection actions that include encryption, access restrictions, and visual markings.





177
Microsoft Purview
DLP policies can be applied to the following locations:
    Exchange online email
    SharePoint sites
    OneDrive accounts
    Teams chat and channel messages
    Windows 10, 11 and macOS Devices
    Microsoft Defender for Cloud Apps
    On-premises repositories





178
Microsoft Purview
Microsoft Purview Privileged Access Management helps protect your organization from breaches and helps to meet compliance best practices by limiting standing access to sensitive data or access to critical configuration settings. Instead of administrators having constant access, just-in-time access rules are implemented for tasks that need elevated permissions.





179
Microsoft Purview
DLP policies are how you monitor the activities that users take on sensitive items at rest, sensitive items in transit, or sensitive items in use and then take protective actions. For example, when a user attempts a prohibited action, like copying a sensitive item to an unapproved location or sharing medical information in an email, DLP can:

show a pop-up policy tip to the user that warns them that they might be trying to share a sensitive item inappropriately





180
Microsoft Purview
After you create a DLP policy, it's stored in a central policy store and then synced to the various content sources, including:
    • Exchange, and from there to Outlook on the web and Outlook
    • OneDrive
    • SharePoint sites
    • Office desktop programs (Excel, PowerPoint, and Word)
    Microsoft Teams channels and chat messages.





181
Microsoft Purview
For organization-wide data consumers:
    Data discovery - helps you easily find the data you need.
    Secure access - facilitates safe access to your data.
    Data understanding - providing what you need to know about the data.





182
Microsoft Purview
Because a Sensitivity Label is stored in clear text in the metadata for files and emails, third-party apps and services can read it and then apply their own protective actions, if required.





183
PnP PowerShell
Invoke-RestMethod Parameters
Key parameters include -Method (HTTP method), -Uri (API endpoint), -Headers (authentication and content type), and -Body (data payload), crucial for API interactions.





184
PnP PowerShell
Connect-PnPOnline (PnP.PowerShell)
Establishes a connection to a SharePoint site using various authentication methods like client credentials or device code flow, enabling subsequent PnP.PowerShell cmdlets to interact with SharePoint.





185
PnP PowerShell
Export-Clixml (Microsoft.PowerShell.Utility)
Serializes PowerShell objects to an XML format file. Useful for securely storing complex objects, including credentials, for later retrieval.





186
PnP PowerShell
Azure Key Vault Integration
Securely stores and manages secrets, keys, and certificates used by applications. Enhances security by preventing hardcoding of sensitive information in scripts.





187
PnP PowerShell
Remove-PnPListItem (PnP.PowerShell)
Deletes an item from a SharePoint list. Useful for maintaining data integrity and automating data cleanup processes





188
PnP PowerShell
Grant-PnPAzureADAppPermission (PnP.PowerShell)
Grants specific API permissions to an Azure AD application directly from PowerShell. Streamlines the permission assignment process for SharePoint access.





189
PnP PowerShell
Retry Logic
A programming practice where failed operations are attempted again after a delay. Essential for handling transient errors like API throttling or network issues.





190
PnP PowerShell
Import-Clixml (Microsoft.PowerShell.Utility)
Deserializes PowerShell objects from an XML format file. Allows retrieving previously exported objects, maintaining their original structure and properties.





191
PnP PowerShell
Set-PnPWeb (PnP.PowerShell)
Configures properties of a SharePoint site, such as title, description, and logo. Enables automated site customization and configuration management.





192
PnP PowerShell
Token Expiry
The duration an OAuth 2.0 access token remains valid before needing renewal. Scripts must handle token refresh logic to maintain uninterrupted API access.





193
Python
Q:
Which itertools function can be used to create an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable?

A:
itertools.chain().





194
Python
Q:
What are the two essential methods that an iterator class must implement?

A:
__iter__() and __next__().





195
Python
How can you compare two Path objects for equality regardless of their string representations? By resolving both paths and comparing them.

path1 = Path('/home/user/file.txt').resolve()
path2 = Path('./file.txt').resolve()
are_equal = path1 == path2





196
Python
Q:
How can you define a custom exception in Python?

A:
By creating a new class that inherits from the built-in Exception class.
Example:
class MyCustomError(Exception):
    pass





197
Python
Q:
What is the primary purpose of exit codes in Python scripts?

A:
To communicate the termination status of a script to the operating system or calling process.





198
Python
Q:
How do you retrieve the next value from a generator named gen?

A:
Using the built-in next(gen) function.





199
Python
Q:
What is the advantage of using context managers for resource management?

A:
They ensure that resources are properly acquired and released, even if errors occur, promoting cleaner and more reliable code.





200
Python
Q:
Explain the difference between except Exception as e and except (ValueError, TypeError) as e.

A:
except Exception as e catches all exceptions that inherit from Exception, while except (ValueError, TypeError) as e only catches ValueError and TypeError exceptions.





201
Python
Which pathlib method can be used to iterate recursively through all files matching a pattern?

for file in Path('/path/to/directory').rglob('*.txt'):
    print(file)





202
Python
Q:
How does the os.walk() function handle permission errors by default?

A:
It can be configured to print an error message and continue by using the onerror parameter.





203
Azure Developer Associate
A company has an App Service web app that requires a TLS/SSL certificate. The certificate will be used in other App Service apps. The certificate must be automatically renewed with the least management overhead.
You need to add the certificate. What should you do?

Purchase an App Service Certificate
not 
Create a free App Service Managed Certificate





204
Azure Developer Associate
The top-level resource in Azure Container Instances is the container group. A container group is a collection of containers that get scheduled on the same host machine. Containers in a container group share a lifecycle, resources, local network, and storage volumes. It's similar in concept to a pod in Kubernetes.





205
Azure Developer Associate
What's the recommended authentication method for Azure Container Registry?

Azure service principal





206
Azure Developer Associate
You manage an instance of Azure API Management. You define policies to multiple scopes.
You need to enforce a policy evaluation order.
What should you use?

the <base/>element
NOT 
the condition attribute





207
Azure Developer Associate
In Azure App Configuration,
Feature flag: A feature flag is a variable with a binary state of on or off. The feature flag also has an associated code block. The state of the feature flag triggers whether the code block runs or not.





208
Azure Developer Associate
In the .NET SDK for Azure Cosmos DB for NoSQL, which method of the ChangeFeedProcessor class should be invoked to start consuming changes from the change feed?

StartAsync





209
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container
Lease container
Host	The host is a client application instance that listens for and reacts to changes from the change feed.
Delegate





210
Azure Developer Associate
App Configuration doesn't version key values automatically as they're modified. Use labels as a way to create multiple versions of a key value. For example, you can input an application version number or a Git commit ID in labels to identify key values associated with a particular software build.





211
Azure Developer Associate
To mount an Azure file share as a volume in a container by using the Azure CLI, specify the share and volume mount point when you create the container with az container create. 
Azure CLI
az container create \
    --resource-group $ACI_PERS_RESOURCE_GROUP \
    --name hellofiles \
    --image mcr.microsoft.com/azuredocs/aci-hellofiles \
    --dns-name-label aci-demo \
    --ports 80 \
    --azure-file-volume-account-name $ACI_PERS_STORAGE_ACCOUNT_NAME \
    --azure-file-volume-account-key $STORAGE_KEY \
    --azure-file-volume-share-name $ACI_PERS_SHARE_NAME \
    --azure-file-volume-mount-path /aci/logs/





212
Azure Developer Associate
For the .NET SDK for Azure Cosmos DB for NoSQL change feed processor, the library expects a delegate of type ChangesHandler<> that takes in a generic type to represent your serialized individual items. The delegate includes two parameters; a read-only list of changes and a cancellation token.





213
Vocab
Well of Lost Plots, Fforde
Foolscap
noun | FOOL-skap
A large sheet of writing paper, traditionally about 13 × 17 inches.
Example: He wrote his thesis on foolscap before transferring it to the computer.





214
Vocab
Something Rotten, Fforde
Barnaby Rudge
noun | BAR-nuh-bee RUHJ
A historical novel by Charles Dickens, set during the Gordon Riots of 1780, blending romance, mystery, and political unrest.
Example: “Barnaby Rudge” is one of Dickens’s lesser-known but richly atmospheric novels.





215
Vocab
Something Rotten, Fforde
Nacelle
noun | nuh-SELL
An enclosed housing on an aircraft or wind turbine, typically containing engines or equipment.
Example: The jet’s engine nacelle was inspected before takeoff.





216
Vocab
Something Rotten, Fforde
Thylacine
noun | THY-luh-seen
A now-extinct carnivorous marsupial native to Tasmania, also known as the Tasmanian tiger.
Example: The thylacine was declared extinct in the 20th century, though sightings are still reported.





217
Vocab
Structured Credit Provides Portfolio Diversification:
Investors utilize structured credit products to diversify portfolios beyond traditional bonds or equities, potentially accessing higher yields or returns not typically achievable through standard debt instruments.





218
Vocab
How to Sell a Haunted House, Hendrix
Crewelwork
Pronunciation: KROO-uhl-wurk
Definition: A type of surface embroidery using wool yarn to create decorative floral or animal motifs on linen or cotton fabric.





219
Vocab
Well of Lost Plots, Fforde
Panoply
noun | PAN-uh-plee

A full suit of armor.

A complete or splendid array of something.
Example: The museum’s exhibit displayed a panoply of medieval weaponry.





220
Vocab
Well of Lost Plots, Fforde
Milliner
noun | MIL-ih-ner
A maker or seller of women’s hats.
Example: She apprenticed with a Parisian milliner to learn haute-couture hat design.





221
Vocab
How to Sell a Haunted House, Hendrix
Debride a Wound
Pronunciation: dih-BREED uh woond
Definition: The medical removal of dead, damaged, or infected tissue from a wound to promote healing and reduce the risk of infection.





222
Vocab
Something Rotten, Fforde
Timpet
noun | TIM-pet
archaic term, possibly a variant of “timpet” meaning a small hill or mound (usage rare or regional).
Example: The sheep grazed peacefully on the grassy timpet.





223
JavaScript Concepts
Array Length Property: Remember to use array.length to get the number of elements in an array. This is a common mistake, but it's crucial for iterating through arrays correctly.
(I had mistakenly used array.len instead)





224
JavaScript Concepts
npm (Node Package Manager): The default package manager for Node.js, used to install, share, and manage JavaScript packages and dependencies.





225
JavaScript Concepts
Variable Declarations (let, const, var): Keywords to declare variables with different scopes and mutability. let and const are block-scoped, while var is function-scoped.





226
JavaScript Concepts
Express.js: A minimalist web framework for Node.js, facilitating routing, middleware integration, and handling HTTP requests/responses.





227
JavaScript Concepts
Chai: An assertion library that pairs with testing frameworks like Mocha, providing readable and expressive test assertions.





228
JavaScript Concepts
Template Literals: Enhanced string syntax using backticks, allowing embedded expressions and multi-line strings for better readability.





229
JavaScript Concepts
By default, all parameters defined in the function declaration are optional in JavaScript. If you provide fewer arguments than there are parameters, the missing arguments will be undefined inside the function, see Null and Undefined.





230
JavaScript Concepts
Parcel: A zero-configuration bundler that automatically handles various file types, offering faster builds with minimal setup.





231
JavaScript Concepts
TypeScript: A superset of JavaScript that adds static typing, enhancing code quality, maintainability, and developer tooling through type checking.





232
JavaScript Concepts
Template Literals: Use template literals for string interpolation and multi-line strings. They are enclosed by backticks (`) and allow you to embed expressions using ${expression}. For example:

const name = 'Jay';
const greeting = `Hello, ${name}!`;





233
Azure AD Authentication
Custom Roles
User-defined roles with specific permissions, used when built-in roles don’t provide the required access or for more granular control.





234
Azure AD Authentication
Service Principal
A security identity for an app to authenticate and access Azure resources. Used for automated services and applications instead of using user credentials.





235
Terraform
Variable References:
Refer to variables using the var. prefix within interpolation expressions. For example:

${var.env}





236
Terraform
Expressions and Operators:
Definition: Terraform uses expressions to compute values. These support arithmetic operations, string concatenation, and comparisons.
Usage: Allows dynamic configuration based on variable values or conditions.

Example:


"${var.a + var.b}"
"${var.env == "prod" ? "Production" : "Staging"}"





237
Azure Functions + PP365
OAuth 2.0 Authentication Flow
A sequence of steps in the OAuth 2.0 protocol where an application obtains an access token from an authorization server. This flow involves redirecting users for consent, exchanging authorization codes for tokens, and securely accessing protected resources using the obtained tokens, enabling secure delegation of access.





238
Azure Functions + PP365
local.settings.json
A configuration file used during local development of Azure Functions. It stores environment variables, connection strings, and other settings required to run functions locally. This file is not deployed to Azure, ensuring that sensitive information remains secure during development.





239
Azure Functions + PP365
Azure Functions Extensions
Additional modules or packages that extend the capabilities of Azure Functions. For Python developers, extensions can provide support for integrating with other Azure services, enhancing bindings, and adding new triggers, enabling more complex and feature-rich serverless applications.





240
Azure Functions + PP365
Azure AD TokenRequestContext
A context object used in Azure AD token acquisition processes, specifying the scopes and resources for which an access token is requested. TokenRequestContext ensures that tokens are issued with the appropriate permissions and are valid for the intended resources, facilitating secure and targeted access in applications.





241
Azure Functions + PP365
Power Platform CLI
A command-line interface tool for managing Power Platform resources, including Power Apps, Power Automate, and Dataverse. The Power Platform CLI facilitates automation, scripting, and advanced management tasks, enabling developers and administrators to interact with the platform efficiently.





242
Azure Functions + PP365
XMLHttpRequest vs. Fetch API
Both are JavaScript APIs for making HTTP requests from web pages. XMLHttpRequest is older and more verbose, while the Fetch API is modern, promise-based, and provides a more streamlined approach to handling asynchronous requests, making it preferable for integrating custom scripts in Dynamics 365.





243
Azure DevOps Pipelines
How do you specify a deployment environment like 'staging' or 'production' in a YAML pipeline?
Answer: Use the environment keyword, e.g., environment: 'staging'.





244
Azure DevOps Pipelines
How do you add a manual approval gate before a pipeline proceeds to the next stage?
Answer: Set a ApprovalRequired flag on the pipeline's stages.





245
Azure DevOps Pipelines
What is the purpose of the 'checkout' step in an Azure DevOps YAML pipeline?
Answer: It checks out the source code from the repository for use in the pipeline.





246
Azure DevOps Pipelines
In an Azure DevOps pipeline, which YAML syntax would you use to reference a variable?
Answer: $(variable_name)





247
Azure DevOps Pipelines
What does the 'variables' keyword do in a YAML pipeline?
Answer: It declares the variables that can be used throughout the pipeline.





248
Azure DevOps Pipelines
What is a Deployment Pool in Azure DevOps?
Answer: A Deployment Pool is a set of environments where deployments occur. You can configure and target specific deployment pools for releases to ensure the proper deployment environment is used.





249
TSQL
Q: What happens in T-SQL if you use GROUP BY but select columns that are not aggregated or not in the GROUP BY clause?
A: You get an error. All columns in the SELECT must either be part of the GROUP BY clause or be wrapped in an aggregate function like SUM, AVG, MAX, etc.





250
TSQL
Temporary Tables:

Created with a hash (#) prefix to hold intermediate results for complex or staged queries.





251
TSQL
COALESCE Function:

Returns the first non-null value from a list of expressions (e.g., COALESCE(ts_invoiceid, inv.ts_invoiceid)).





252
TSQL
Q: What does SUM(x) OVER (PARTITION BY y) do?
A: It sums the values of x for each group of rows where y has the same value, but keeps each row intact in the result set.





253
TSQL
JOIN Types and Conditions:

FULL OUTER JOIN: Returns rows when there is a match in either table, useful for capturing unmatched records.
Self-Joins: Joining a table to itself using different aliases to handle relationships within the same table.





254
TSQL
Q: Why would you use COALESCE(a, b) in a SELECT statement?
A: It returns the first non-null value among its arguments. Useful for fallback values like choosing between custom and default rates.





255
TSQL
Self-Joins for Hierarchies:

Useful for comparing or relating data within the same table.
Effective for simple or fixed-level hierarchies; consider recursive CTEs for deep or variable hierarchies.





256
TSQL
Q: How do window functions differ from aggregate functions with GROUP BY?
A: Window functions (like SUM(...) OVER (...)) calculate values across sets of rows without collapsing them into a single row, preserving the full row data.





257
TSQL
Q: When should you use window functions instead of GROUP BY?
A: When you want to calculate totals, ranks, or running sums without reducing the number of rows in your result set.





258
TSQL
User-Defined Functions (UDFs):

Custom functions that return scalar values or tables, encapsulating reusable logic.





259
PowerShell Modules
Get-InstalledModule

Definition: A cmdlet that retrieves modules installed on the system.
Explanation: Useful for managing and updating modules. Example: Get-InstalledModule | Update-Module updates all installed modules.





260
PowerShell Modules
PSReadLine Module

Definition: A module that enhances the command-line editing experience in PowerShell.
Explanation: Provides features like syntax highlighting, auto-completion, and customizable key bindings.





261
PowerShell Modules
Az Module

Definition: A module for managing Azure resources.
Explanation: Provides cmdlets to interact with Azure services. Example cmdlet: Get-AzVM.





262
PowerShell Modules
Connect-AzAccount

Definition: A cmdlet from the Az module that authenticates your session with Azure.
Example Usage: Connect-AzAccount prompts for Azure credentials to manage Azure resources.





263
PowerShell Modules
Module Manifest Properties

Definition: Specific attributes defined in a .psd1 file that describe module metadata.
Explanation: Includes properties like ModuleVersion, Author, RequiredModules, FunctionsToExport, etc.





264
PowerShell Modules
Get-Help

Definition: A cmdlet that displays help information for other cmdlets and functions.
Explanation: Provides detailed documentation and examples. Example: Get-Help Get-AzVM -Detailed.





265
PowerShell Modules
Module Manifest (.psd1)

Definition: A PowerShell data file that describes the contents and metadata of a module.
Explanation: Includes information like the module version, author, exported functions, dependencies, and more. Essential for publishing and sharing modules.





266
PowerShell Modules
Installing a Module:
Install-Module -Name Az -Scope CurrentUser

Importing a Module:
Import-Module -Name Az





267
PowerShell Modules
Cmdlet

Definition: A lightweight command used in the PowerShell environment.
Explanation: Cmdlets follow a Verb-Noun naming pattern (e.g., Get-Module, Import-Module) and perform specific functions within PowerShell.





268
PowerShell Modules
PowerShell Module

Definition: A package that contains PowerShell cmdlets, functions, scripts, and other resources.
Explanation: Extends PowerShell’s functionality and can be shared or reused across different environments and users.





269
CCH Axcess
Client IDs can have up to 15 characters and can include spaces.





270
CCH Axcess
Views define the columns and associated data that display in the Client Manager and Staff Manager grids. These grids display the existing records for the selected view that you have assigned rights to view. Column selection, sorting, and number of records per page preferences are retained on your machine for each view.





271
CCH Axcess
Enable AutoText descriptions
Allows you to create return and firm-level descriptions for fields that allow multiple entries, for example, fields for interest items or dividend items. The descriptions are then available for selection from the repeater fields in other areas of the return.





272
CCH Axcess
You can search for grid contents in several ways.
    Search. The Search box immediately above the grid is used to search the entire system, not just the current grid contents, by client or staff name or ID. This feature refreshes the grid, displaying only the records that match your search criteria.
    Find. 
    Quick Search.





273
CCH Axcess
You can select records across multiple pages in Clients, Staff, and Shared views. There is no restriction on the maximum number of records that can be selected; however, the Open option is available only for a maximum of ten selected Clients or Staff records. To clear all selected records across multiple pages, click Clear Selection in the Grid View group on the Home tab.





274
CCH Axcess
The ribbon is used throughout CCH Axcess™. It replaces the menus used in previous product versions. You no longer have to navigate menus or open multiple toolbars to locate the commands you need. Each ribbon can have multiple tabs. Commands displayed on each tab vary by module. On each tab, commands are grouped by similar functions.





275
CCH Axcess
The Export Grid option exports up to 20,000 records from all pages of the Client Manager Quick Search results. For the Staff Manager Quick Search, only the current page of results are exported with this option. 

That behavior seems really inconsistent to me.





276
CCH Axcess
Custom client types that are set up in Global Lists allow you to add client profile detail that is not limited to a specific tax product and can be used in the Tax system or for a purpose not related to tax returns.





277
CCH Axcess
You can search for grid contents in several ways.
    Search. 
    Find. The Find command in the Grid View group on the Home tab searches all grid columns for the current grid view. This feature selects the rows containing content that matches your criteria.
    Quick Search.





278
CCH Axcess
To launch the Data Migration Utility, click Utilities under Firm on the Application Links window in Dashboard, and then click Migrate data.





279
C# Basics
Indexers allow objects to be indexed like arrays. They enable you to access elements in an object using the array-like syntax.
Example:
public class Student {
    private string[] grades = new string[3];

    public string this[int index] {
        get { return grades[index]; }
        set { grades[index] = value; }
    }
}





280
C# Basics
How do basic data types work in C#?

C#: Statically typed, types must be explicitly declared.
Example:
int x = 10;  
string y = "Hello";





281
C# Basics
Lambda expressions provide a concise way to represent anonymous methods.
Example:
Func<int, int, int> add = (x, y) => x + y;





282
C# Basics
A constructor is a special method used to initialize an object when it is created.
Example:
public class Car {
    public string Model { get; set; }
    
    public Car(string model) {
        Model = model;
    }
}





283
C# Basics
Reflection allows you to inspect the metadata of types (classes, properties, methods, etc.) at runtime.
Example:
var type = typeof(String);
Console.WriteLine(type.FullName);  // Output: System.String





284
C# Basics
What is the basic syntax for declaring a variable in C#?

C#:
int x = 10;





285
C# Basics
An interface defines a contract that classes must implement. It can contain methods, properties, and events.
Example:
public interface IAnimal {
    void Speak();
}

public class Dog : IAnimal {
    public void Speak() {
        Console.WriteLine("Dog barks");
    }
}





286
C# Basics
What are the key access modifiers in C#?

public: Accessible anywhere.
private: Accessible only within the same class.
protected: Accessible within the same class and derived classes.
internal: Accessible within the same assembly.





287
C# Basics
Events use delegates to provide a way for a class to notify other classes when something happens.
Example:
public delegate void EventHandler();

public class Publisher {
    public event EventHandler Notify;    
    public void RaiseEvent() {
        Notify?.Invoke();
    }
}
public class Subscriber {
    public void OnNotify() {
        Console.WriteLine("Event triggered!");
    }
}





288
C# Basics
How do you handle exceptions in C#?

C#:
try {
    int x = 1 / 0;
}
catch (DivideByZeroException) {
    Console.WriteLine("Cannot divide by zero");
}





289
FSLogix
Cloud Cache uses the locally mounted container to provide periodic updates to the remote storage providers. Cloud Cache is designed to insulate users from short-term or intermittent local (inner-region, close proximity) storage issues.





290
FSLogix
Outlook OST Files:
Offline Storage Table files used by Microsoft Outlook to store a synchronized copy of mailbox data locally. They enable offline access to email, calendar, and contact data. Managing these files in an Office Container prevents them from bloating the main user profile.





291
FSLogix
FSLogix Agent Log:
A log file generated by the FSLogix agent that provides detailed diagnostic information. It is crucial for troubleshooting issues related to mounting Profile Containers and other FSLogix operations.





292
FSLogix
Antivirus Software Exclusions for FSLogix Container Files:
A best practice in FSLogix deployments. It involves configuring antivirus software to exclude FSLogix container files (both Profile and Office Containers stored in VHD/VHDX format) from scanning. This prevents potential performance degradation and issues during file access.





293
FSLogix
Q: What is the role of Profile Disk Differencing in FSLogix?
A: Profile Disk Differencing allows FSLogix to create differencing VHDX disks, where changes to the user profile are stored in separate files, reducing the load on the main profile disk. This improves performance by ensuring faster read/write operations and reducing storage overhead.





294
FSLogix
When the local cache doesn't contain the data requested by the file system, Cloud Cache hydrates (reads and copies) the data from 1 of the remote storage providers to the local cache. This operation is also part of the sign in process when populating the local cache for the user's profile.





295
FSLogix
FSLogix Cloud Cache:
A caching mechanism within FSLogix that stores user profile data in the cloud. This improves redundancy and performance by ensuring that profiles remain available even if primary storage becomes inaccessible.





296
FSLogix
Cloud Cache uses storage providers based on the order of entries in CCDLocations.
Storage providers should be listed in order of proximity, then preference.
Only one (1) provider is used when data is hydrated from the storage provider.





297
FSLogix
VHD/VHDX:
Virtual hard disk file formats used by FSLogix Profile Containers to store user profiles. They are optimized for efficient I/O operations and are crucial for fast loading times in virtual environments.





298
FSLogix
SMB Share (Server Message Block):
A network file-sharing protocol used in Windows environments. SMB shares, like those provided by Azure Files, are commonly used for storing FSLogix Profile Containers, ensuring centralized and efficient access.





299
Azure VM + Developer
Azure Policy
A governance tool that defines and enforces organizational rules on Azure resources, such as restricting VM sizes, locations, or blocking public IP assignments.





300
Azure VM + Developer
Language Server Protocol (LSP)
A communication protocol between an editor and a language-specific server that provides smart features like autocomplete, go-to-definition, and linting.





301
Azure VM + Developer
Pre-Commit Hook
A Git hook that runs scripts (e.g., formatters, tests) before committing code, helping catch issues early in the development workflow.





302
Azure VM + Developer
Formatter
A tool that automatically reformats source code to follow a defined style guide, improving consistency and readability (e.g., Prettier, Black).





303
Azure VM + Developer
.ssh/known_hosts
A file used by SSH to store server fingerprints, preventing man-in-the-middle attacks by validating that the server hasn’t changed unexpectedly.





304
Azure VM + Developer
12-Factor App
A set of best practices for building cloud-native apps, including stateless processes, config via environment variables, and dev/prod parity.





305
Azure VM + Developer
Build Tool
A program used to automate the compilation, packaging, and dependency resolution of a software project (e.g., `make`, `npm`, `dotnet build`, `gradle`).





306
Azure VM + Developer
Debugger Config (launch.json)
A JSON config file in VS Code that specifies how to run and debug an app, including which script to execute, arguments, environment variables, and breakpoints.





307
Azure VM + Developer
VS Code Workspace (.code-workspace)
A VS Code config file that defines multi-root folders, editor settings, and extension recommendations for a consistent project layout and experience.





308
Azure VM + Developer
Startup Script / Bootstrap Script
A script (Bash or PowerShell) that sets up tools, environment variables, or dependencies on a VM right after it is created or logged into for the first time.





309
Azure Compute Gallery
ACG	Azure Compute Gallery
AIB	Azure Image Builder
RBAC	Role-Based Access Control
SAS	Shared Access Signature





310
Azure Compute Gallery
Image Version Deletion – Permanent action that cannot be undone.





311
Azure Compute Gallery
Specialized Image – A VM image that retains system-specific settings, including machine name, user accounts, and configurations—ideal for cloning.





312
Azure Compute Gallery
Maximum Image Versions Per Definition – Each image definition can store up to 1,000 versions.





313
Azure Compute Gallery
VHD	Virtual Hard Disk
VM	Virtual Machine
IaC	Infrastructure as Code
CI/CD	Continuous Integration/Continuous Deployment
SemVer	Semantic Versioning





314
Azure Compute Gallery
Azure Compute Gallery Roles:
Reader – Can list and read images.
Contributor – Can create and manage images.
Owner – Full control over the gallery.
Shared Image Gallery Reader – Read-only access to images across subscriptions.





315
Azure Compute Gallery
Cross-Subscription Sharing – ACG images can be shared with multiple subscriptions, but not across Azure AD tenants.





316
Azure Compute Gallery
Packer – An open-source tool that automates multi-cloud VM image building, often used with Terraform or Azure DevOps.
Terraform Compute Gallery Module – A way to define ACG image builds and deployments using Infrastructure as Code (IaC).





317
Azure Compute Gallery
Replication Region Limit – Each image version can be replicated to a maximum of 50 regions.





318
Azure Compute Gallery
Manual VHD Upload – A process where you create a VHD file, upload it to Azure Storage, and convert it into an image.





319
VMWare
vSAN (Virtual SAN)

A VMware product that creates virtualized storage by aggregating local storage from ESXi hosts in a cluster, providing a shared storage solution without needing external storage hardware.





320
VMWare
vSphere Cluster

A group of ESXi hosts that work together as a single entity, allowing for resource pooling and the management of VMs in a unified way.





321
VMWare
ESXi Shell

A command-line interface (CLI) used to manage and troubleshoot VMware ESXi hosts. The ESXi Shell allows administrators to run shell commands directly on the ESXi host for tasks like system configuration, troubleshooting, and diagnostics.





322
VMWare
vMotion

A VMware feature that allows the live migration of virtual machines between ESXi hosts with no downtime.





323
VMWare
Host Failure

When a physical ESXi host becomes unavailable due to hardware failure, power loss, or other issues, potentially affecting the VMs running on it.





324
VMWare
vMotion Network

A dedicated network connection used for transferring virtual machine memory and CPU state during a vMotion migration. This network should be optimized for high throughput and low latency to ensure smooth VM migration without performance degradation.





325
VMWare
ESXi Logging and Troubleshooting

A set of logs and diagnostic tools built into VMware ESXi for monitoring system health, performance, and troubleshooting issues. Logs like vmkernel.log and hostd.log provide valuable information about system events, errors, and VM status for troubleshooting.





326
VMWare
Distributed Resource Scheduler (DRS)

A feature of VMware vSphere that automatically balances workloads across ESXi hosts in a cluster, ensuring optimal resource usage.





327
VMWare
ESXi Virtual Machine Monitor (VMM)

A component of VMware ESXi that manages virtual machine execution, including CPU, memory, and I/O operations. It ensures that VMs are isolated from each other and allows each VM to operate independently of the host.





328
VMWare
VMware Horizon

A VMware product used for Virtual Desktop Infrastructure (VDI), enabling the delivery of virtual desktops and applications.





329
Asynchronous Python
Coroutine
An async def function in Python that can pause at await expressions and resume later, enabling non-blocking asynchronous execution.





330
Asynchronous Python
Race Condition
A race condition occurs when multiple threads access and modify shared data concurrently, leading to unpredictable or incorrect results if not managed properly.





331
Asynchronous Python
Backpressure
A condition in async Python where producers send data faster than consumers can process; addressed using queues or throttling.





332
Asynchronous Python
Semaphore
A semaphore is a synchronization tool that limits the number of threads that can access a resource simultaneously, often used for managing a pool of resources.





333
Asynchronous Python
Deadlock
A state in async Python where tasks wait on each other indefinitely, halting progress—usually due to poor coordination.





334
Asynchronous Python
asyncio.Future
A low-level object representing a pending result in Python's asyncio; used internally by Tasks.





335
Asynchronous Python
asyncio.Lock
An asynchronous lock in Python used to prevent multiple coroutines from accessing a shared resource at the same time.





336
Asynchronous Python
Thread Pool Executor
A thread pool executor, provided by the concurrent.futures module, is an abstraction that manages a pool of worker threads and simplifies scheduling and executing asynchronous tasks.





337
Asynchronous Python
asyncio.Semaphore
A concurrency control mechanism in Python’s asyncio used to limit how many coroutines run at once.





338
Asynchronous Python
Event Loop
The core of Python’s asyncio system, which schedules and runs asynchronous tasks cooperatively on a single thread.





339
Microsoft Purview
Microsoft Purview includes:
Sensitive information types to identify sensitive items by using built-in or custom regular expressions, or a function.
Trainable classifiers 
Data classification





340
Microsoft Purview
Publish the labels. After your sensitivity labels are configured, publish them by using a label policy. Decide which users and groups should have the labels and what policy settings to use. A single label is reusable—you define it once, and then you can include it in several label policies assigned to different users.





341
Microsoft Purview
In a data loss prevention policy, you:

    Define the sensitive information you want to monitor for, like financial, health, medical, and privacy data.
    Where to monitor, like Microsoft 365 services or Windows and macOS devices.
    The conditions that must be matched for a policy to be applied to an item, like items containing credit card, driver's license, or social security numbers.
    The actions to take when a match is found, like audit, block the activity, and block the activity with override.





342
Microsoft Purview
Governance domains: Governance domains are a new way of organizing your data estate through business concepts, like Marketing or Finance, providing context for your data assets. A governance domain is a boundary that enables the common governance, ownership, and discovery of data products and business concepts like glossary terms, OKRs, or critical data.





343
Microsoft Purview
Microsoft Purview includes:
Sensitive information 
Trainable classifiers 
Data classification provides a graphical identification of items in your organization that have a sensitivity label, a retention label, or have been classified and the actions your users are taking on them





344
Microsoft Purview
Administrative units in Microsoft Entra ID enable you to restrict administrative permissions to specific parts of your Microsoft Entra organization. You can create, delete, and edit administrative units in Microsoft Entra.





345
Microsoft Purview
Choose administrative scoping - DLP supports assigning Administrative Units to policies. Administrators who are assigned to an administrative unit can only create and manage policies for the users, groups, distribution groups, accounts, and sites that they're assigned to.





346
Microsoft Purview
You can apply just one sensitivity label to an item such as a document, email, or container. If you use the option that requires your users to provide a justification for changing a label to a lower sensitivity for files, emails, and meetings, the order of this list identifies the lower sensitivity.





347
Microsoft Purview
When you create your sensitivity labels in the Microsoft Purview portal, they appear in a list on the Labels page from Information Protection. In this list, the order of the labels is important because it sets their priority. You want your most restrictive sensitivity label, such as Highly Confidential to appear at the bottom of the list and your least restrictive sensitivity label, such as Personal or Public, to appear at the top.





348
Microsoft Purview
As you work with Data Map and Unified Catalog, keep these points in mind:

    All data in Data Map and Unified Catalog is metadata, not the underlying data itself.
    None of the permissions or roles in Data Map or Unified Catalog provide access to underlying data itself.





349
PnP PowerShell
SharePoint Site URL
The web address of a SharePoint site (e.g., https://accuityllp.sharepoint.com/sites/ASB), serving as the entry point for accessing site resources and APIs.





350
PnP PowerShell
Import-PnPProvisioningTemplate (PnP.PowerShell)
Imports a provisioning template into a SharePoint site, applying configurations and structures defined in the template. Enables automated site setup and customization.





351
PnP PowerShell
Get-PnPWeb (PnP.PowerShell)
Fetches details about the current SharePoint site, including properties like language, template, and navigation settings. Useful for site audits and management.





352
PnP PowerShell
PowerShell Scopes
Defines the visibility and lifetime of variables and functions within PowerShell. Includes global, script, and local scopes, managing how data is accessed and modified.





353
PnP PowerShell
PowerShell Profiles
Scripts that run automatically when PowerShell starts. Used to customize the environment, load modules, and define functions for enhanced productivity.





354
PnP PowerShell
Set-PnPFileCheckedIn (PnP.PowerShell)
Checks in a previously uploaded file in SharePoint, optionally adding comments. Essential for managing document versions and maintaining collaboration workflows.





355
PnP PowerShell
System.IO.Stream (System.IO)
Represents a sequence of bytes, such as a file. Used in PowerShell to handle file data streams for operations like uploading files to SharePoint.





356
PnP PowerShell
Environment Variables
Variables that are set at the operating system level and accessible within PowerShell. Used to store configuration data and secrets securely without hardcoding.





357
PnP PowerShell
Remove-PnPFile (PnP.PowerShell)
Deletes a specified file from a SharePoint library or folder. Useful for automating cleanup tasks or managing outdated documents programmatically.





358
PnP PowerShell
API Rate Limits
Restrictions on the number of API calls an application can make within a specific timeframe. Requires managing request rates to avoid exceeding limits and facing throttling.





359
Python
Q:
Which Python module provides an object-oriented approach to handling filesystem paths?

A:
pathlib





360
Python
Q:
What is the default exit code if a Python script ends without calling sys.exit()?

A:
0 (indicating successful execution).





361
Python
Q:
What method is used to gracefully terminate a generator?

A:
The .close() method.





362
Python
How do you resolve a relative path to an absolute path using pathlib?

from pathlib import Path
relative_path = Path('some/relative/path')
absolute_path = relative_path.resolve()





363
Python
Q:
What function from the os module is used to iterate through directories and files?

A:
os.walk()





364
Python
Q:
What does an exit code of 0 typically signify in a Python script?

A:
Successful execution without errors.





365
Python
import time
from contextlib import contextmanager

@contextmanager 
def timer():
    start = time.time()
    try: yield
    finally:
        end = time.time()
        print(f"Elapsed time: {end - start} seconds")

# Usage
with timer():
    # Code block to measure
    time.sleep(2)
# Output: Elapsed time: 2.002 seconds





366
Python
Q:
What are the two methods that a context manager class must implement?

A:
__enter__() and __exit__(exc_type, exc_value, traceback).





367
Python
Q:
What method do you call to parse the command-line arguments after defining them with argparse?

A:
.parse_args()





368
Python
Q:
Explain the concept of generator pipelines.

A:
Generator pipelines involve chaining multiple generators together, where each generator processes data and passes it to the next, enabling efficient and modular data processing.





369
Azure Developer Associate
This item tests the candidate's knowledge about securing Azure Functions.

The Standard plan supports both custom domains and Microsoft Defender for Cloud, which can automatically alert on dangling DNS domains. The Consumption plan is incorrect because it does not support Microsoft Defender for Cloud. This can automatically alert on dangling DNS domains. The Premium plan supports custom domains and Microsoft Defender for Cloud, which can automatically alert on dangling DNS domains. This, however, is not the lowest cost option. The Free plan does not support custom domains, although it does support Microsoft Defender for Cloud, which can automatically alert on dangling DNS domains.





370
Azure Developer Associate
In the .NET SDK for Azure Cosmos DB for NoSQL, which method of the Container class is used to create a new change feed estimator?


GetChangeFeedEstimatorBuilder





371
Azure Developer Associate
Azure Container Instances can mount an Azure file share created with Azure Files. Azure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol.





372
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container
Lease container	The lease container serves as a storage mechanism to manage state across multiple change feed consumers (clients).
Host
Delegate





373
Azure Developer Associate
In Read and Delete mode, Service Bus receives the request from the consumer, it marks the message as consumed and returns it to the consumer application. This mode is the simplest model. It works best for scenarios in which the application can tolerate not processing a message if a failure occurs.





374
Azure Developer Associate
In Azure App Configuration,
Feature manager: A feature manager is an application package that handles the lifecycle of all the feature flags in an application. The feature manager typically provides extra functionality, such as caching feature flags and updating their states.





375
Azure Developer Associate
As a solution architect/developer, you should consider using Storage queues when:

Your application must store over 80 gigabytes of messages in a queue.
You require server side logs of all of the transactions executed against your queues.





376
Azure Developer Associate
As a solution architect/developer, you should consider using Storage queues when:

Your application wants to track progress for processing a message in the queue. It's useful if the worker processing a message crashes. Another worker can then use that information to continue from where the prior worker left off.





377
Azure Developer Associate
Azure supports two types of queue mechanisms: Service Bus queues and Storage queues.

Storage queues are part of the Azure Storage infrastructure. They allow you to store large numbers of messages. You access messages from anywhere in the world via authenticated calls using HTTP or HTTPS. A queue might contain millions of messages, up to the total capacity limit of a storage account. Queues are commonly used to create a backlog of work to process asynchronously.





378
Azure Developer Associate
Azure Service Bus is a fully managed enterprise message broker with message queues and publish-subscribe topics. Service Bus is used to decouple applications and services. Data is transferred between different applications and services using messages. A message is a container decorated with metadata, and contains data. The data can be any kind of information, including structured data encoded with the common formats such as the following ones: JSON, XML, Apache Avro, and Plain Text.





379
Vocab
Something Rotten, Fforde
Paella
noun | pah-AY-yuh
A Spanish rice dish originally from Valencia, typically made with seafood, meat, and vegetables.
Example: We shared a large pan of seafood paella by the beach.





380
Vocab
Something Rotten, Fforde
Creosote
noun | KREE-uh-soht
A dark, oily liquid used to preserve wood, especially in railway ties and fences.
Example: The fence smelled strongly of creosote after being treated.





381
Vocab
Something Rotten, Fforde
Rusk
noun | RUSK
A dry, hard biscuit or twice-baked bread, often used for teething babies or in soups.
Example: She dipped a rusk into her tea for a quick snack.





382
Vocab
How to Sell a Haunted House, Hendrix
Codicil
Pronunciation: KOH-duh-sil
Definition: A legal document that modifies, explains, or adds to a previously executed will without replacing it entirely.





383
Vocab
Something Rotten, Fforde
Cazique
noun | kuh-ZEEK
A native chief in parts of Latin America and the Caribbean during the colonial period.
Example: The Spanish chroniclers often referred to the local ruler as a cazique.





384
Vocab
Something Rotten, Fforde
Brocade (dress)
noun | bro-KAYD
A rich fabric woven with a raised pattern, often in gold or silver thread, used in formal garments.
Example: Her brocade dress shimmered under the ballroom lights.





385
Vocab
Well of Lost Plots, Fforde
Eminence grise
noun | EM-uh-nence GREEZ
A powerful advisor or decision-maker working behind the scenes.
Example: Although never elected, the minister’s chief of staff was the real eminence grise.





386
Vocab
Palimpsest
noun
SPA: PAL-imps-est
IPA: /ˈpælɪmpsɛst/

A manuscript or document that has been written on, scraped off, and reused, often revealing traces of previous writings beneath the surface.
Example: Archaeologists discovered an ancient palimpsest where earlier texts were still legible under the more recent writing.





387
Vocab
Well of Lost Plots, Fforde
Inveigle
verb | in-VAY-guhl
To entice, lure, or persuade by flattery or deception.
Example: He tried to inveigle his way into the VIP lounge using a fake invitation.





388
Vocab
Something Rotten, Fforde
Buddleia
noun | BUD-lee-uh
A flowering shrub, also known as the butterfly bush, popular for attracting pollinators.
Example: The garden was full of buddleia, drawing in bees and butterflies.





389
JavaScript Concepts
In certain contexts, JavaScript will automatically convert a value to another data type before it evaluates some statement. This implicit conversion is called type coercion.





390
JavaScript Concepts
Server-Side Rendering (SSR): Rendering web pages on the server before sending them to the client, improving performance and SEO.





391
JavaScript Concepts
Arrow Functions: Arrow functions provide a concise syntax for writing functions. They are especially useful for short functions and callbacks. For example:

const add = (a, b) => a + b;





392
JavaScript Concepts
When ... appears on the left-hand side of an assignment, those three dots are known as the rest operator. The three dots together with a variable name is called a rest element. It collects zero or more values, and stores them into a single array.

    const [a, b, ...everythingElse] = [0, 1, 1, 2, 3, 5, 8];
    everythingElse;
    // => [1, 2, 3, 5, 8]





393
JavaScript Concepts
Delete Operator: You can remove a key-value pair from an object using the delete operator.

const obj = { key1: "value1", key2: "value2", key3: "value3" };
delete obj.key3; // Removes key3





394
JavaScript Concepts
Promises: Objects representing the eventual completion or failure of asynchronous operations, allowing chaining with .then() and .catch().





395
JavaScript Concepts
Array reverse Function: The reverse method reverses the order of the elements in an array in place.
let array = [1, 2, 3, 4, 5];
array.reverse();
console.log(array); // Output: [5, 4, 3, 2, 1]





396
JavaScript Concepts
Callback functions are functions passed as arguments. This programming pattern creates a sequence of function calls in both synchronous and asynchronous programming. Writing a callback function is no different from writing a function; however, the callback function must match the signature defined by the calling function.





397
JavaScript Concepts
Middleware: Functions in frameworks like Express.js that have access to request and response objects, used for tasks like authentication and logging.





398
JavaScript Concepts
Ensure to use the comparison operator === instead of the assignment operator = when comparing values in switch cases. In an exercise, I had something like 
    case converted_value = 0
instead of
    case converted_value === 0
and that screwed up all of the following cases.





399
TSQL
Set Operations:

UNION / UNION ALL: Combine result sets from multiple queries (with or without duplicate removal).
INTERSECT: Returns rows common to both queries.
EXCEPT: Returns rows from the first query that do not appear in the second.





400
TSQL
Subqueries:

Queries nested within other queries (in SELECT, FROM, or WHERE clauses) to return single or multiple values.





401
TSQL
Window Functions:

Functions like ROW_NUMBER(), RANK(), LEAD(), and LAG() perform calculations across sets of rows related to the current row without collapsing the result set.





402
TSQL
Inline Comments in SQL:

Queries nested within other queries (in SELECT, FROM, or WHERE clauses) to return single or multiple values.





403
PowerShell Modules
Scope (Installation)

Definition: Determines whether a module is installed for all users or just the current user.
Explanation: Controlled via the -Scope parameter in Install-Module. Options include CurrentUser and AllUsers.





404
PowerShell Modules
Module.dll

Definition: A dynamic link library file that can be part of a PowerShell module.
Explanation: Contains compiled code (e.g., C#) that can be used by PowerShell modules for enhanced performance or functionality.





405
PowerShell Modules
AllUsers Scope

Definition: An installation scope that makes a PowerShell module available to all users on the system.
Explanation: When installing a module with -Scope AllUsers, it requires administrative privileges and places the module in a system-wide directory, typically C:\Program Files\PowerShell\Modules.





406
PowerShell Modules
Dependencies

Definition: Other modules or components that a PowerShell module requires to function correctly.
Explanation: Dependencies are specified in a module's manifest and must be present for the module to operate as intended. They can be viewed using properties like RequiredModules.





407
PowerShell Modules
Select-Object

Definition: A cmdlet that selects specific properties of an object or set of objects.
Explanation: Often used to filter and display only the needed information. Example: Get-Module -ListAvailable | Select-Object Name, Version, Path.





408
PowerShell Modules
Listing All Available Modules:
Get-Module -ListAvailable | Select-Object Name, Version, Path

Updating All Installed Modules:
Get-InstalledModule | Update-Module





409
PowerShell Modules
Module Load Order

Definition: The sequence in which modules are loaded into a PowerShell session.
Explanation: Important when resolving cmdlet conflicts or ensuring dependencies are loaded first.





410
CCH Axcess
You can search for grid contents in several ways.
    Search. 
    Find. 
    Quick Search. Quick Search filters can be expanded on the Client Manager and Staff Manager navigation panels to search the entire system, not just the current grid contents, for client or staff criteria other than ID or name. See Using Quick Search for more information about this feature.





411
CCH Axcess
In Client Manager, opened from the links on the Application Links window in Dashboard, you can manage information about your clients and client groups. When you set up client profiles, the information about each client is available in all CCH Axcess products and pre-populates whenever applicable.





412
CCH Axcess
Your client's information is managed in profiles containing details you enter about them. For example, in addition to the client's ID and name, a client's profile may include tax filing type, addresses, phone numbers, and classification in your firm.





413
CCH Axcess
To quickly add an item to the Quick Access Toolbar, right-click any ribbon command, ribbon group command, or Application menu command and select Add to Quick Access Toolbar from the menu.





414
CCH Axcess
Views are organized on the navigation panel. Do one of the following to display the Views section:

    In Staff Manager, click the Staff navigation bar.
    In Client Manager, click the Clients navigation bar.





415
CCH Axcess
Custom identification number types are defined in Global Lists and are used to store identification numbers that are in addition to the identification numbers used for tax-specific client types.





416
CCH Axcess
Security groups with any level of rights can be created. Staff can be assigned to multiple security groups and have the cumulative rights granted in the various groups. Staff assigned to any group where a function is indicated as Never allow have no access to that function under any circumstance.





417
CCH Axcess
The application menu contains the available actions for CCH AxcessTM product. The menu also provides access to user options and, if applicable, a list of recently accessed records. Click the X emblem in the upper left corner of the window to display the menu and view the available options.





418
CCH Axcess
Enter a client or staff ID, or a client or staff name in the Search box above the grid. Enter the complete criteria to search for specific records or partial information to search for similar matches.

    Name refers to the sort name saved in the client or staff profile.
    You can search for the client ID and sub ID by adding periods to the search string. For example, find client ID 123 with sub ID 001 by entering 123.001 in the Search box.





419
C# Basics
What is the syntax for a for loop in C#?

C#:
for (int i = 0; i < 5; i++) {
    Console.WriteLine(i);
}





420
C# Basics
.NET uses a garbage collector that automatically manages memory. The GC.Collect() method can be called manually if needed, but generally not required.





421
C# Basics
What is the role of namespaces in C#?

C#: Namespaces organize classes, structs, and other types into logical groups.
Example:
using System;
using System.Linq;





422
C# Basics
How do you use LINQ methods like Select, Where, and OrderBy in C#?

C#: LINQ methods provide a concise way to query and manipulate collections.
Example:
var numbers = new List<int> { 1, 2, 3, 4, 5 };
var evenNumbers = numbers.Where(n => n % 2 == 0).OrderBy(n => n);





423
C# Basics
What are static classes and methods in C#?

C#: A static class cannot be instantiated. Static members belong to the type itself, not an instance.
Example:
public static class MathUtils {
    public static int Add(int x, int y) {
        return x + y;
    }
}





424
C# Basics
Generics allow you to define classes, methods, or data structures with type parameters, enabling type safety and reusability.
Example:
public class Box<T> {
    public T Value { get; set; }
}

var intBox = new Box<int> { Value = 10 };





425
C# Basics
What is LINQ in C# and how is it used?

C#:
LINQ (Language Integrated Query) is used to query collections in a declarative way.
Example:
var squares = from x in Enumerable.Range(0, 5) select x * x;





426
C# Basics
Inheritance allows one class to inherit members (fields, properties, methods) from another class.
Example:
public class Animal {
    public void Speak() {
        Console.WriteLine("Animal speaks");
    }
}





427
C# Basics
Tuples allow grouping multiple values into a single object without defining a class.
Example:
var person = (Name: "John", Age: 30);
Console.WriteLine(person.Name);  // Output: John





428
C# Basics
C#: Delegates are type-safe function pointers, allowing methods to be passed as parameters.
Example:
delegate void GreetDelegate();

GreetDelegate greet = () => Console.WriteLine("Hello!");
greet();





429
FSLogix
Q: How does FSLogix prevent user profile corruption in virtual desktop sessions?
A: FSLogix stores user profiles in isolated containers (VHDX), reducing the chances of corruption by ensuring the profile is handled in a controlled environment that can be mounted and saved properly.





430
FSLogix
FSLogix Application Masking:
A component of FSLogix used to control application visibility. It isolates and hides applications (and their dependencies) from users who should not access them, based on group policies, thereby simplifying desktop environments.





431
FSLogix
Q: What happens to a FSLogix Profile Container when a user logs off?
A: When a user logs off, the changes made to the profile are saved back into the Profile Container (VHDX file), ensuring that all settings and data are retained for the next session.





432
FSLogix
Remote Desktop Services (RDS):
A session-based technology where multiple users share a single server or a pool of servers. RDS provides centralized management and efficient resource sharing, although performance can vary with heavy concurrent usage.





433
FSLogix
Q: What is the main difference between FSLogix Profile Containers and traditional roaming profiles?
A: FSLogix uses VHDX containers to store user profiles, ensuring portability and faster logons, while traditional roaming profiles can become fragmented and inconsistent across multiple virtual machines.





434
FSLogix
All data written to the user's profile is temporarily stored as block-level cache objects in the same directory. Those block-level cache objects are then committed to the local cache. Before the block-level cache objects are created, the writes into the user's profile are processed in memory through a proxy file.





435
FSLogix
Multi-Session Environment:
A setup where multiple users share the same operating system instance (typical of RDS and multi-session AVD deployments). This environment requires special considerations—such as the use of a Redirector Driver—to handle concurrent access and prevent file locking issues.





436
FSLogix
Q: Which format does FSLogix use to store user profile data?
A: FSLogix uses the VHDX (Virtual Hard Disk) format to store user profile data in containers.





437
FSLogix
Q: What is FSLogix App Masking, and how does it relate to managing applications in virtual desktops?
A: FSLogix App Masking is a feature that allows administrators to control which applications are visible to which users in a virtual desktop environment. This "masks" applications based on user roles, ensuring that users only see the apps they have permissions for, without the need for separate application installations.





438
FSLogix
On a lazy asynchronous operation, Cloud Cache flushes the changes to all storage providers simultaneously as each provider is flushed on its own thread. FSLogix doesn't throttle this operation and utilizes as much throughput as the system will allow.





439
Azure VM + Developer
Debug Adapter Protocol
A VS Code protocol that enables consistent debugging experiences across languages by abstracting debugger backends from the editor interface.





440
Azure VM + Developer
Package Manager
A tool for installing, updating, and managing external libraries your app depends on (e.g., `pip`, `npm`, `nuget`, `brew`).





441
Azure VM + Developer
Test Pyramid
A testing strategy that favors many fast unit tests, fewer integration tests, and minimal end-to-end tests to maintain speed and reliability.





442
Azure VM + Developer
Remote Development
A workflow where the code is executed and debugged on a remote machine (e.g., cloud VM), while edited locally through a tool like VS Code, keeping compute and environment remote.





443
Azure VM + Developer
Dev Containers
A container-based dev environment defined in `.devcontainer.json`, allowing full isolation and consistent tooling across developers, either locally or in Codespaces.





444
Azure VM + Developer
.env File
A flat file storing environment variables (like `DEBUG=true`, `API_KEY=xyz`) for local development and testing, typically excluded from version control.





445
Azure VM + Developer
Dotfiles
A collection of personal configuration files (e.g., `.bashrc`, `.gitconfig`, `.vimrc`) that define your shell, editor, and tool preferences across machines.





446
Azure VM + Developer
Systemd Service
A background service on Linux managed by `systemctl`, which can run your app as a daemon, restart on failure, and start automatically on boot.





447
Azure VM + Developer
Dependency Management
The process of tracking and resolving software dependencies, ensuring your project uses compatible versions of external libraries.





448
Azure VM + Developer
Language Runtime
The software layer that interprets and executes code written in a particular language (e.g., Python, Node.js, .NET Core), and must be installed in the dev environment.





449
Azure Compute Gallery
Replication Completion Check – Before deploying a VM, images must be fully replicated to the region where deployment is taking place.





450
Azure Compute Gallery
Compute Gallery Resource – The top-level container that stores multiple image definitions and versions.





451
Azure Compute Gallery
Managed Image – A single, region-bound image stored in Azure, lacking versioning and replication features found in ACG.





452
Azure Compute Gallery
Storage Costs for ACG – Storage pricing depends on:
Number of versions retained
Number of replicas in different regions
Image size





453
Azure Compute Gallery
Capture from Existing VM – Creating an image by generalizing or specializing a VM and capturing it into ACG.





454
Azure Compute Gallery
Deployment Latency – The time required for a newly published image to become available for VM creation.





455
Azure Compute Gallery
Shared Image Gallery Reader Role – An RBAC role that allows users to access images for deployment but not modify them.





456
Azure Compute Gallery
License Considerations – Some images (e.g., RHEL, Windows Server) require Azure Hybrid Benefit or additional licensing.





457
Azure Compute Gallery
OS Disk Image – An image containing only the operating system and configurations.
Data Disk Image – A separate image that includes application and data disks but does not contain an OS.





458
Azure Compute Gallery
One Compute Gallery Per Subscription – ACG is bound to a single Azure subscription.





459
VMWare
vSphere Client

A graphical user interface (GUI) tool used to manage and configure VMware ESXi hosts and virtual machines. The vSphere Client connects to vCenter Server to manage multiple ESXi hosts and provides an easy interface for monitoring, configuration, and troubleshooting tasks.





460
VMWare
Virtual Machine Snapshot

A point-in-time copy of the state, data, and configuration of a virtual machine. Snapshots allow for the restoration of the VM to a previous state, which is useful for testing, troubleshooting, or backup purposes.





461
VMWare
Shared Storage

A storage system that is accessible by multiple ESXi hosts in a cluster, essential for vMotion, HA, and Storage vMotion.





462
VMWare
vSphere

VMware's suite of products for virtualization, including vCenter Server, ESXi, vMotion, and more, used to create and manage virtualized data centers.





463
VMWare
VMware ESXi

A Type 1 hypervisor that runs on physical servers to create and manage virtual machines in a VMware environment.





464
VMWare
VMFS (Virtual Machine File System)

A high-performance file system used by VMware ESXi to store virtual machine disk files (VMDKs) on shared storage. VMFS is optimized for virtual machine workloads and allows multiple ESXi hosts to access the same datastore simultaneously.





465
VMWare
Resource Pool

A logical grouping of CPU, memory, and storage resources in a VMware cluster, which can be allocated to virtual machines.





466
VMWare
ESXi Host Profiles

A feature that allows administrators to configure, enforce, and standardize settings across multiple ESXi hosts in a cluster. Host profiles ensure consistency in configuration, such as networking, storage, and security settings, across all hosts in a given environment.





467
VMWare
Storage I/O Control (SIOC)

A feature in VMware vSphere that manages storage I/O requests to ensure that all virtual machines receive fair access to storage resources. It helps avoid I/O contention by controlling the bandwidth allocated to different VMs when accessing shared storage.





468
VMWare
Hypervisor

Software that allows the creation and management of virtual machines by abstracting the physical hardware. There are two types: Type 1 (bare-metal) and Type 2 (hosted).





469
Asynchronous Python
Idle Task
An asynchronous Python coroutine that’s currently waiting (e.g., on I/O or sleep), allowing others to run in the meantime.





470
Asynchronous Python
await
A keyword that pauses an asynchronous Python function until the awaited coroutine or awaitable completes.





471
Asynchronous Python
pytest-asyncio
A Python testing plugin that allows you to write and run tests for asynchronous code using async def and await.





472
Asynchronous Python
Parallelism
Running code in true simultaneous execution on multiple cores; not directly supported by asyncio, which is single-threaded.





473
Asynchronous Python
aiohttp
An asynchronous HTTP client/server library in Python used to make non-blocking web requests.





474
Asynchronous Python
Cooperative Multitasking
The async model in Python where tasks yield control voluntarily (e.g., via await) instead of being preempted.





475
Asynchronous Python
Lock (Mutex)
A lock is a synchronization primitive used to control access to a shared resource, ensuring that only one thread can access a specific block of code at a time.





476
Asynchronous Python
Structured Concurrency
A design principle (used in Trio) ensuring all async Python tasks are scoped and cleaned up together, reducing leaks and bugs.





477
Asynchronous Python
Race Condition
An issue in async Python code where multiple coroutines access shared data without proper coordination, leading to bugs.





478
Asynchronous Python
asyncio.create_task()
Schedules a coroutine to run concurrently as a Task in Python's event loop and starts it immediately.





479
Microsoft Purview
All DLP policies are created and maintained in the Microsoft Purview portal. See Create and Deploy data loss prevention policies for more information. 
After you create a DLP policy, it's stored in a central policy store and then synced to the various content sources.





480
Microsoft Purview
Data access is about quickly providing the right access and enforcing the right use to balance safety and innovation.

Data curation is about organizing, annotating, and publishing your data so that it's safely accessible, reuseable, and protected.





481
Microsoft Purview
Create the labels. Create and name your sensitivity labels according to your organization's classification taxonomy for different sensitivity levels of content. Use common names or terms that make sense to your users. You can then use sublabels to group similar labels by category.





482
Microsoft Purview
Microsoft Purview comes with preconfigured DLP templates for Financial, Medical and health, and Privacy policy templates. Additionally, you can build your own using the Custom template. As you design and create your actual DLP policies, having a working knowledge of the sensitive items you need to protect helps you choose the right sensitive information type.





483
Microsoft Purview
For data officers and CxO stakeholders:
    Data value creation - maximize value creation from your data while reducing operations spend.
    Data estate standardization - create common controls across your data estate with federated accountability so your data is healthy and safe.





484
Microsoft Purview
Extend SharePoint protection when files are downloaded when you configure a default sensitivity label for SharePoint document libraries and select the option to extend protection for unencrypted files. Then, when these files are downloaded, the current SharePoint permissions travel with the labeled file.





485
Microsoft Purview
OKRs (objectives and key results) in Microsoft Purview are trackable business objectives tied to governance domains and data products to emphasize the value of business data.





486
Microsoft Purview
When you create your DLP policies, you should consider rolling them out gradually, so you can assess their impact and test their effectiveness before fully enforcing them. For example, you don't want a new DLP policy to unintentionally block access to thousands of documents or to break an existing business process.





487
Microsoft Purview
You can configure your policies so that, when a DLP policy is triggered, email notifications are sent automatically, and policy tips are shown to admins and end users. Policy tips are useful ways to raise awareness of risky behaviors on sensitive items and train users to avoid those behaviors in the future.





488
Microsoft Purview
For files, emails, and meetings, but not for groups and sites, if a user tries to remove a label or replace it with a label that has a lower priority, by default the user must provide a justification to perform this action.





489
PnP PowerShell
Add-PnPFile (PnP.PowerShell)
Uploads a file to a specified SharePoint document library or folder. Supports parameters like -Path for local files and -Stream for uploading via a data stream.





490
PnP PowerShell
Delegated Permissions
Permissions granted to applications to act on behalf of a signed-in user. Requires user consent and is used in interactive authentication scenarios.





491
PnP PowerShell
Parameter Set Conflict
Occurs when incompatible or conflicting parameters are used together in a PowerShell cmdlet, leading to errors as PowerShell cannot determine the intended operation.





492
PnP PowerShell
REST API Endpoints
Specific URLs used to access SharePoint resources via REST API. Includes paths for sites, lists, libraries, and items, enabling targeted operations.





493
PnP PowerShell
ConvertFrom-SecureString (Microsoft.PowerShell.Security)
Transforms a secure string object back into plain text. Should be used cautiously to avoid exposing sensitive information.





494
PnP PowerShell
PowerShell Pipeline
A feature that allows the output of one cmdlet to be passed as input to another cmdlet. Enables chaining commands for efficient data processing.





495
PnP PowerShell
Chained Cmdlets
Using multiple cmdlets in a sequence where each cmdlet processes data output from the previous one. Enhances script efficiency and readability.





496
PnP PowerShell
Export-PnPProvisioningTemplate (PnP.PowerShell)
Exports a SharePoint site's configuration into a provisioning template. Facilitates site replication, migration, and backup through PowerShell.





497
PnP PowerShell
OAuth 2.0 Client Credentials Flow
An authentication method where applications authenticate using a client ID and client secret, enabling server-to-server interactions without user involvement.





498
PnP PowerShell
PSCredential (Microsoft.PowerShell.Security)
A PowerShell object that securely stores a username and password. Utilized for authentication purposes, ensuring sensitive information is handled safely.





499
Python
Q:
How can you raise an exception inside a generator from outside?

A:
Using the .throw(type, value=None, traceback=None) method.





500
Python
Q:
How can you display help messages for command-line arguments using argparse?

A:
By running the script with the -h or --help flag, which is automatically handled by argparse.





501
Python
Q:
Which pathlib method can be used to get the parent directory of a given path?

A:
.parent

Example:
path = Path('/path/to/file.txt')
parent = path.parent  # '/path/to'





502
Python
Q:
What does the .with_suffix(new_suffix) method do in pathlib?

A:
It returns a new Path object with the file’s suffix changed to new_suffix.

Example:
file = Path('document.txt')
new_file = file.with_suffix('.md')  # 'document.md'
Command-Line Argument Parsing (argparse)





503
Python
Q:
What is the difference between itertools.accumulate() and itertools.reduce()?

A:
itertools.accumulate() returns an iterator that yields accumulated sums (or results of a specified function), while functools.reduce() applies a function cumulatively to the items of a sequence, reducing it to a single value.





504
Python
Q:
How can you nest multiple tqdm progress bars?

A:
By using multiple tqdm instances with different levels, often by setting the position parameter to avoid overlapping.

Example:
from tqdm import tqdm
for i in tqdm(range(3), desc='Outer', position=0):
    for j in tqdm(range(5), desc='Inner', position=1, leave=False):
        pass





505
Python
Q:
How can generators be used to process streaming data, such as reading from a live sensor?

A:
By creating a generator that yields data points as they are received, allowing real-time processing without storing the entire stream.

Example:
def sensor_data_stream():
    while True:
        data = get_sensor_data()  # Hypothetical function
        yield data





506
Python
Q:
What is the purpose of the leave parameter in tqdm?

A:
To determine whether to keep the progress bar display after completion (leave=True) or remove it (leave=False).





507
Python
Q:
How do you iterate over an asynchronous generator?

A:
Using async for.

Example:
async def async_gen():
    yield 1
    yield 2

async def main():
    async for value in async_gen():
        print(value)





508
Python
Q:
What method can be used to send a value into a generator, allowing it to receive data?

A:
The .send(value) method.





509
Azure Developer Associate
The .NET SDK for Azure Cosmos DB for NoSQL ships with a change feed processor, which has four core components:

Monitored container	This container is monitored for any insert or update operations. These changes are then reflected in the feed.
Lease container
Host
Delegate





510
Azure Developer Associate
This item tests the candidate’s knowledge of configuring change feed processor as part of developing solutions that use Azure Cosmos DB.

The lease container component serves as a storage mechanism to manage state across multiple change feed consumers. The monitored container component is monitored for any insert or update operations. It does not serve as a storage mechanism to manage state across multiple change feed consumers.





511
Azure Developer Associate
As the .NET SDK for Azure Cosmos DB for NoSQL change feed processor handles changes, it functions as a time-based pointer. The pointer moves forward in time across the change feed and sends batches of changes to the delegate to run business logic.





512
Azure Developer Associate
This item tests the candidate’s knowledge of creating solutions by using Azure Container Apps. Azure Container Apps enables you to build serverless microservices based on containers. It is optimized for running general purpose containers and provides many application-specific concepts on top of containers. 

Azure Container Instances does not support scaling, load balancing, revisions, scale, or environments and does not meet the mentioned requirements.





513
Azure Developer Associate
As a solution architect/developer, you should consider using Service Bus queues when:

Your solution requires the queue to provide a guaranteed first-in-first-out (FIFO) ordered delivery.
Your solution needs to support automatic duplicate detection.





514
Azure Developer Associate
This question tests the candidate's knowledge of Azure Service Bus message expiration.

To avoid affecting existing applications, the time to live of the existing topic must not be changed. A new topic needs to be created. Changing the topic's default time to live will affect other applications. A message-level time to live cannot be higher than the topic's time to live.





515
Azure Developer Associate
You are developing a cloud native containerized background task application. You need to choose the appropriate container deployment option based on the following requirements:
  Minimize cost
  Support service discovery and traffic splitting
  Enable event-driven application architecture
  Do not require access to native Kubernetes API
What should you use?

Azure Container Apps
Not
Azure Container Instances





516
Azure Developer Associate
As a solution architect/developer, you should consider using Service Bus queues when:

Your solution needs to receive messages without having to poll the queue. With Service Bus, you can achieve it by using a long-polling receive operation using the TCP-based protocols that Service Bus supports.





517
Azure Developer Associate
In the Azure Service Bus Peek Lock mode, the receive operation becomes two-stage, which makes it possible to support applications that can't tolerate missing messages.

  Finds the next message to be consumed, locks it to prevent other consumers from receiving it, and then, return the message to the application.

  After the application finishes processing the message, it requests the Service Bus service to complete the second stage of the receive process. Then, the service marks the message as consumed.





518
Azure Developer Associate
You plan to generate a shared access signature (SAS) token for read access to a blob in a storage account.
You need to secure the token from being compromised. What should you use?

Microsoft Entra ID credentials assigned the Contributor role
NOT 
Microsoft Entra ID credentials assigned the Reader role (Readers can't do the action described, but definitely only give read access).





519
Vocab
Well of Lost Plots, Fforde
Pinafore
noun | PIN-uh-for

A sleeveless garment worn over a dress, like an apron.

A light sleeveless dress.
Example: She wore a blue gingham pinafore while painting in the studio.





520
Vocab
Something Rotten, Fforde
Bête noire
noun | BET NWAHR
A person or thing that one particularly dislikes or avoids.
Example: Bureaucracy was his bête noire.





521
Vocab
Jingo, Pratchett
Pro tem
adverb/adjective | proh TEM
Short for pro tempore, meaning “for the time being” or temporary.
Example: He served as chairperson pro tem until a permanent replacement was elected.





522
Vocab
Lost in a Good Book
Perfidious: Deceitful and untrustworthy, often describing betrayal or disloyalty.





523
Vocab
Something Rotten, Fforde
De rigueur
adjective | duh ree-GUR
Required by etiquette or current fashion; socially obligatory.
Example: Wearing black tie was de rigueur at the gala.





524
Vocab
Well of Lost Plots, Fforde
(naval) Pinnance
noun | PIN-ans
A small boat carried aboard a larger ship, used for transporting personnel or light cargo.
Example: The admiral boarded the pinnance for his trip ashore.





525
Vocab
Jingo, Pratchett
Cornice
noun | KOR-nis
A decorative molding that crowns a building or furniture element, often found where the wall meets the ceiling.
Example: The ornate cornice added elegance to the room’s architecture.





526
Vocab
Something Rotten, Fforde
Salver
noun | SAL-ver
A flat tray, typically made of silver, used for serving food or drinks.
Example: The butler carried the tea on a polished salver.





527
Vocab
Lost in a Good Book
Impresario: A manager or producer of theatrical, musical, or other artistic performances, often entrepreneurial in nature.





528
Vocab
Red Side Story, FForde
Osculation
Pronunciation: oss-kyoo-LAY-shun
Definition: The act of kissing; in mathematics, it can also refer to the contact between curves or surfaces.





529
JavaScript Concepts
Prototype-Based Inheritance: JavaScript's inheritance model where objects inherit properties and methods from a prototype object, enabling dynamic property sharing.





530
JavaScript Concepts
Syntax to convert an aray to a set and back again to remove duplicates
  export function removeDuplicates(playlist) { //playlist is an array of songs
    const play_set = new Set (playlist)
    return Array.from(play_set)
  }





531
JavaScript Concepts
For arrays, the String function will apply the string conversion for each element and join the results with a comma. You can also apply the join method yourself, e.g. to customize the separator. Note that in these cases null and undefined will be converted to an empty string.

String([42, null, true, 'abc']);
// => '42,,true,abc'





532
JavaScript Concepts
To create a deep copy of an object in JavaScript, you can use the JSON.parse(JSON.stringify(object)) method. This approach works well for simple objects, such as those with string:number pairs, and ensures that the original object remains unmodified.





533
JavaScript Concepts
Dot Notation: You can add a new key-value pair to an object using dot notation. This is useful when you know the name of the property.

const obj = { key1: "value1", key2: "value2" };
obj.key3 = "value3"; // Adds key3 with value3





534
JavaScript Concepts
MDN Web Docs: Comprehensive documentation for web technologies, including JavaScript, HTML, CSS, and various APIs.





535
JavaScript Concepts
Built-In Methods: JavaScript objects come with built-in methods like Object.keys(), Object.values(), and Object.entries() which allow you to interact with the object's properties in various ways4.





536
JavaScript Concepts
Testing Library: A family of libraries that encourage testing best practices by focusing on user interactions rather than implementation details.





537
JavaScript Concepts
Vue.js: A progressive framework for building user interfaces, known for its simplicity and flexibility, with features like directives and single-file components.





538
JavaScript Concepts
In JavaScript, you can only return exactly one value. If you want to pass more information, you need to combine it into one entity first, usually into an object, or an array.

function divide(a, b) {
  return {
    quotient: Math.floor(a / b),
    remainder: a % b,
  };
}





539
FSLogix
During a first-time sign-in, FSLogix creates the container for the user in C:\ProgramData\FSLogix\Cache and mounts the container to the virtual machine. Next, FSLogix sets up all the necessary redirections for the user's profile. Then the User Profile Service creates the user's profile into the local cache.





540
Azure VM + Developer
Makefile / Task Runner
A scriptable command list (via `make` or tools like `npm run`) used to automate tasks such as builds, tests, or environment setup in a dev workflow.





541
Azure VM + Developer
Remote - SSH (VS Code)
A VS Code extension that allows seamless editing, terminal access, and debugging on a remote machine via SSH, making a remote system feel local.





542
Azure Compute Gallery
Region Availability – Not all Azure regions support Compute Gallery replication.
Azure Government & Sovereign Clouds – Some regions (e.g., China, US Gov) have restricted ACG availability.





543
Azure Compute Gallery
Azure Image Builder (AIB) – A managed service that automates image creation by defining customizations (e.g., software installations, updates, configurations).





544
Azure Compute Gallery
Azure DevOps Pipelines for Image Deployment – A CI/CD workflow that automatically builds, tests, and publishes images.

const name = 'Jay';
const greeting = `Hello, ${name}!`;





545
Azure Compute Gallery
Azure Compute Gallery (ACG) – A service that helps manage, share, and distribute VM images across multiple subscriptions and regions.

147
JavaScript Concepts
When ... appears on the left-hand side of an assignment, those three dots are known as the rest operator. The three dots together with a variable name is called a rest element. It collects zero or more values, and stores them into a single array.

    const [a, b, ...everythingElse] = [0, 1, 1, 2, 3, 5, 8];
    everythingElse;
    // => [1, 2, 3, 5, 8]





546
VMWare
ESXi Console Access

The ability to access the ESXi host’s console directly via the physical server or over a network using remote tools like SSH or the vSphere Client. This allows administrators to troubleshoot and configure the host or to work around issues when vCenter Server is unavailable.





547
VMWare
ESXi Datastore

A storage container used by ESXi hosts to store virtual machine disk files (VMDKs), ISO images, templates, and other data related to virtual machines. Datastores can be backed by shared storage solutions, such as SAN (Storage Area Network), NFS (Network File System), or vSAN.





548
VMWare
vMotion Compatibility

The requirement for shared storage and network configuration to allow seamless migration of virtual machines between hosts without downtime.





549
VMWare
vSphere Distributed Switch (vDS)

A virtual switch that allows the central management of network configurations across multiple ESXi hosts. A vDS provides enhanced features like port mirroring, private VLANs, and traffic shaping for advanced network management in VMware environments.





550
VMWare
Fault Tolerance (FT)

A VMware feature that provides continuous availability by creating a shadow VM on a different host that automatically takes over in case of a host failure, ensuring zero downtime.





551
VMWare
High Availability (HA)

A VMware feature that automatically restarts virtual machines on another host if the original host fails. It ensures minimal downtime in case of host failure.





552
VMWare
VMkernel

The core operating system that VMware ESXi uses to manage physical resources, such as CPU, memory, and storage. The VMkernel is responsible for creating and managing virtual machines, handling I/O operations, and providing resource management.





553
VMWare
Live Migration

The process of moving a running virtual machine from one physical host to another with no interruption in service, typically using vMotion.





554
Asynchronous Python
asyncio.CancelledError
An exception in Python that is raised inside a coroutine when it’s cancelled, allowing it to perform cleanup.





555
Asynchronous Python
async for (async iterator)
Used to iterate over async sequences in Python, such as streaming data or asynchronous file lines.





556
Asynchronous Python
Context Switching
Context switching is the process of storing and restoring the state of a thread so that execution can resume later, which can introduce performance overhead.





557
Asynchronous Python
Task
A wrapper around a coroutine in Python’s asyncio that is managed by the event loop and can be cancelled, awaited, or monitored.





558
Asynchronous Python
Blocking Code
Code like time.sleep() that halts the event loop and prevents other asynchronous Python tasks from running—should be avoided.





559
Asynchronous Python
Global Interpreter Lock (GIL)
The GIL is a mutex in CPython that ensures only one thread executes Python bytecode at a time, affecting true parallel execution of threads.





560
Asynchronous Python
Timeouts
Techniques like asyncio.wait_for() used in Python to limit how long a coroutine can run before it's cancelled.





561
Asynchronous Python
Non-blocking I/O
A key feature of async Python where I/O operations (e.g., file or network access) don’t block the event loop.





562
Microsoft Purview
DLP reports a vast amount of information to Microsoft Purview from monitoring policy matches and actions, to user activities. You need to consume and act on that information to tune your policies and triage actions taken on sensitive items. The telemetry goes into the Microsoft 365 audit Logs first, is processed, and makes its way to different reporting tools.





563
Microsoft Purview
For data owners and stewards:
    Data curation and management - helps you deliver high quality data that's easy to understand and safely access for organization-wide applications.
    Responsible data use - helps you ensure that your data is used by intended users for intended purposes.
    Impact analysis - understand actions on the data that may impact your data.





564
Microsoft Purview
Evaluate the impact of the controls by implementing them with a DLP policy in simulation mode. Actions defined in a policy aren't applied while the policy is in simulation mode.





565
Microsoft Purview
Steps to create a DLP policy
    Choose what you want to monitor
    Choose administrative scoping
    Choose where you want to monitor
    Choose the conditions that must be matched for a policy to be applied to an item
    Choose the action to take when the policy conditions are met





566
Microsoft Purview
A governance domain can house many data products but a data product is managed by a single governance domain and can be discovered across many domains.





567
Microsoft Purview
Members of your compliance team who will create and sensitivity labels need permissions to the Microsoft Purview portal. You can use the following role groups:

    Information Protection
    Information Protection Admins
    Information Protection Analysts
    Information Protection Investigators
    Information Protection Readers





568
Microsoft Purview
If your organization has implemented administrative units, you can scope your DLP policies by administrative unit or leave the scope default, which applies policies to the full directory. For more information, see Policy Scoping.





569
Microsoft Purview
Microsoft Purview includes:
Sensitive information types 
Trainable classifiers to identify sensitive items by using examples of the data you're interested in rather than identifying elements in the item.
Data classification





570
Microsoft Purview
Run the policy in simulation mode, without Policy Tips and then use the DLP reports, and any incident reports, to assess the impact of the policies. You can use DLP reports to view the number, location, type, and severity of policy matches. Based on the results, you can fine-tune your policies as needed.





571
Microsoft Purview
When viewed by users in your organization, an applied sensitivity label appears like a tag on apps and can be easily integrated into their existing workflows. Your sensitivity labels aren't visible in apps to users from other organizations, or to guests.





572
PnP PowerShell
App-Only Authentication
A mode where applications authenticate without a user context, using client credentials to perform operations based on granted permissions. Suitable for automated scripts and services.





573
PnP PowerShell
OAuth 2.0 Authorization Code Flow
An interactive authentication method involving user login and authorization, suitable for applications that can securely handle client secrets and require delegated permissions.





574
PnP PowerShell
Throttling in SharePoint
Limits the number of API requests to prevent abuse and ensure service stability. Requires implementing retry logic and handling throttling responses in scripts.





575
PnP PowerShell
Client Secret (client_secret)
A confidential key associated with an Azure AD application, used alongside the client ID to authenticate the application in secure authentication flows.





576
PnP PowerShell
JSON Payloads
Data formatted in JSON used in REST API requests and responses. PowerShell uses ConvertTo-Json and ConvertFrom-Json for handling JSON data structures.





577
PnP PowerShell
Invoke-WebRequest Parameters (Microsoft.PowerShell.Utility)
Includes -Method, -Uri, -Headers, -Body, and others. Facilitates detailed HTTP request configurations for interacting with web services.





578
PnP PowerShell
Add-PnPField (PnP.PowerShell)
Adds a new field (column) to a SharePoint list or library. Supports various field types and configurations for customized data structures.





579
PnP PowerShell
Get-AzureADServicePrincipal (AzureAD)
Retrieves information about service principals in Azure Active Directory. Used to manage application identities and their associated permissions.





580
PnP PowerShell
SharePoint App Permissions
Defines the access rights granted to SharePoint apps via AppInv.aspx or Azure AD. Controls what resources and actions an app can perform within SharePoint.





581
PnP PowerShell
Invoke-WebRequest (Microsoft.PowerShell.Utility)
Sends HTTP and HTTPS requests to web pages or web services. Similar to Invoke-RestMethod but provides more detailed response information.





582
Python
Q:
How can you create an asynchronous generator in Python?

A:
By defining a generator function with async def and using yield or yield from within it.

Example:
async def async_gen():
    for i in range(3):
        yield i





583
Python
Q:
How can you check if a Path object points to a symbolic link?

A:
Using the .is_symlink() method.

Example:
path = Path('/path/to/symlink')
if path.is_symlink():
    print("It's a symbolic link.")





584
Python
Q:
What does itertools.islice() do?

A:
It creates an iterator that returns selected elements from the input iterable by specifying start, stop, and step indices.





585
Python
Q:
Name a common use case for generators in Python.

A:
Reading large files one line at a time without loading the entire file into memory.





586
Python
Q:
How can you iterate over all files in a directory (non-recursively) using pathlib?

A:
Using the .iterdir() method.

Example:
for file in Path('/path/to/directory').iterdir():
    if file.is_file():
        print(file)





587
Python
Q:
What does the .stem attribute of a Path object return?

A:
The filename without its suffix.

Example:
path = Path('/path/to/file.txt')
print(path.stem)  # Output: 'file'





588
Python
Q:
What is the purpose of the raise ... from ... syntax in exception handling?

A:
To chain exceptions, indicating that one exception was the direct cause of another.

Example:
try:
    1 / 0
except ZeroDivisionError as e:
    raise ValueError("Invalid operation") from e
Additional Python Modules and Functions





589
Python
Q:
How do you make a custom object iterable?

A:
By implementing the __iter__() method that returns an iterator (which can be the object itself with a __next__() method).





590
Python
Q:
Why is lazy evaluation beneficial when dealing with large datasets?

A:
It reduces memory consumption and can improve performance by avoiding the storage and processing of the entire dataset at once.





591
Python
Q:
What is the purpose of the argparse module in Python?

A:
To parse command-line arguments and options in a user-friendly way.





592
Azure Developer Associate
Feature management is a modern software-development practice that decouples feature release from code deployment and enables quick changes to feature availability on demand. It uses a technique called feature flags (also known as feature toggles, feature switches, and so on) to dynamically administer a feature's lifecycle.





593
Azure Developer Associate
You create an Azure Service Bus topic with a default message time to live of 10 minutes.
You need to send messages to this topic with a time to live of 15 minutes. The solution must not affect other applications that are using the topic.
What should you recommend?

Create a new topic with a default time to live of 15 minutes. Send the messages to this topic.
NOT 
Change the specific message’s time to live to 15 minutes.





594
Azure Developer Associate
A company plans to implement a Microsoft Defender for Cloud solution.
The company has the following requirements:
  Notifies when DNS domains are not deleted when a new Azure Functions app is deleted.
  Use native alerting.
  Minimize costs.
You need to select a hosting plan. Which hosting plan should you use?


Standard
NOT 
Premium





595
Azure Developer Associate
Your company is developing a new web application that will be deployed as a containerized solution on Azure. The application is expected to have fluctuating workloads and needs to be highly available.

You need to create a solution that allows the application to scale based on demand and recover from failures automatically.

Each correct answer presents part of the solution. Which two actions should you perform? (Choose two.)

  Deploy the containerized application to Azure Container Apps.
  Publish the application's image to Azure Container Registry.





596
Azure Developer Associate
Messages carry a payload and metadata. The metadata is in the form of key-value pair properties, and describes the payload, and gives handling instructions to Service Bus and applications. Occasionally, that metadata alone is sufficient to carry the information that the sender wants to communicate to receivers, and the payload remains empty.





597
Azure Developer Associate
Azure supports two types of queue mechanisms: Service Bus queues and Storage queues.

Service Bus queues are part of a broader Azure messaging infrastructure that supports queuing, publish/subscribe, and more advanced integration patterns. They're designed to integrate applications or application components that might span multiple communication protocols, data contracts, trust domains, or network environments.





598
Azure Developer Associate
An Azure Service Bus queue allows processing of a message by a single consumer. In contrast to queues, topics and subscriptions provide a one-to-many form of communication in a publish and subscribe pattern. It's useful for scaling to large numbers of recipients.





599
Azure Developer Associate
You plan to implement a storage mechanism for managing state across multiple change feed consumers.
You need to configure the change feed processor in the .NET SDK for Azure Cosmos DB for NoSQL API.
Which component should you use?

Lease Container 
not 
Monitored Container





600
Azure Developer Associate
Q: In Azure Event Hubs with .NET 5+, which client should you use for load-balanced consumption?
A: EventProcessorClient





601
Azure Developer Associate
Q: In Azure Cosmos DB Change Feed Processor, what component defines custom logic to process changes?
A: Delegate





602
Vocab
Well of Lost Plots, Fforde
Reigate
noun | RYE-gate
A market town in Surrey, England.
Example: They enjoyed a day trip to Reigate, exploring its castle ruins.





603
Vocab
Something Rotten, Fforde
Muslin (curtains)
noun | MUZ-lin
A lightweight cotton fabric, often used for curtains or clothing.
Example: The muslin curtains let in a soft, diffused light.





604
Vocab
How to Sell a Haunted House, Hendrix
Trimalleolar Fracture
Pronunciation: try-mal-ee-OH-lar FRAK-chur
Definition: A severe ankle fracture involving all three malleoli—the medial, lateral, and posterior parts of the tibia and fibula—typically requiring surgical repair.





605
Vocab
Jingo, Pratchett
Crinoline
noun | KRIN-uh-lin
A stiffened or structured fabric or petticoat worn under a skirt to give it a full shape, popular in the 19th century.
Example: Her gown was supported by a wide crinoline that swayed as she walked.





606
Vocab
Jingo, Pratchett
Cruet
noun | KROO-it
A small container or bottle for holding liquids like oil or vinegar, often part of a dining set.
Example: The table was set with a cruet of balsamic vinegar and olive oil.





607
Vocab
How to Sell a Haunted House, Hendrix
Truckle
Pronunciation: TRUHK-uhl
Definition: To act in a subservient or groveling manner, often to gain favor or avoid punishment; can also refer to a small wheel of cheese.





608
Vocab
Lost in a Good Book
Wisteria: A climbing flowering plant with fragrant, cascading purple or white blooms, often grown on pergolas or trellises.





609
Vocab
Anacoluthon
noun
SPA: an-uh-koh-LOO-thon
IPA: /ˌænəkəˈluːθɒn/

A grammatical construction in which a sentence begins in one way but ends in another, often disrupting the expected syntax or logical sequence.
Example: His speech was full of anacoluthons, making it difficult to follow his intended argument.





610
Vocab
Something Rotten, Fforde
Florin
noun | FLOR-in
A former British coin worth two shillings, or one-tenth of a pound, used before decimalization.
Example: He found an old florin in the attic among his grandfather’s coins.





611
Vocab
How to Sell a Haunted House, Hendrix
Stollen (bread)
Pronunciation: SHTOH-luhn
Definition: A traditional German fruit bread containing dried fruits, nuts, and spices, often dusted with powdered sugar and associated with Christmas festivities.





612
JavaScript Concepts
Front: Can you nest string templates within each other?
Back: Yes, you can nest string templates within each other.
  const name = 'Jay';
  const nestedTemplate = `Hello, ${`dear ${name}`}!`;
  console.log(nestedTemplate); // Output: Hello, dear Jay!





613
JavaScript Concepts
RESTful APIs: Architectural style for designing networked applications, using HTTP requests to access and manipulate data through standard endpoints.





614
JavaScript Concepts
Using Object.keys() with for...of Loop: The Object.keys() method returns an array of the object's own enumerable property names. You can then use the for...of loop to iterate over these keys1.





615
JavaScript Concepts
Front: What are the benefits of using callback functions?

Back:
Flexibility: Allows functions to be more modular and reusable.
Asynchronous Handling: Enables handling of asynchronous operations like network requests and timers.
Improved Code Organization: Helps in organizing code by separating concerns and improving readability.





616
JavaScript Concepts
Object Literals: The most common way to create an object is using object literals, which are a list of name-value pairs inside curly braces {}. For example:
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};





617
JavaScript Concepts
Type Coercion to boolean commonly occurs for
    the condition of an if statement
    the first operand of the ternary operator ?
    the operand of the logical NOT operator !
    the operands of the logical AND && and OR || operators (the result of the expression is one of the operands, not necessarily a boolean)





618
JavaScript Concepts
With Boolean(value) you can convert any value to a boolean. There is a fixed set of values, so called falsy values, that convert to false. Most importantly, false, 0, empty string, null, undefined and NaN are falsy.
Boolean(-1);// => true
Boolean(0);// => false
Boolean(' ');// => true
Boolean('');// => false





619
JavaScript Concepts
Callback
A function passed as an argument to be invoked later, once some operation completes.

  fs.readFile("file.txt", (err, data) => {
    if (err) throw err;
    console.log(data);
  });





620
JavaScript Concepts
Case Sensitivity: JavaScript identifiers are case-sensitive. This means that y and Y are considered different variables. It's important to be consistent with the use of case to avoid errors in your code1.





621
JavaScript Concepts
The basic syntax for a string template in JavaScript uses backticks (`) and ${} for embedding expressions.
  const name = 'Jay';
  const greeting = `Hello, ${name}!`;
  console.log(greeting); // Output: Hello, Jay!





622
Microsoft Purview
Data discovery is about ensuring users can find the data they need for day-to-day business and innovation.

Data health is about ensuring data quality standards are maintained across your estate, and having an active data lifecycle keeping your data fresh and secure.





623
Microsoft Purview
Related to business domains are data products. A data product is a business construct with a name, description, owners, and most importantly a list of associated data assets. The data product provides context for the assets that are included within it, and provides a use case for data consumers.





624
Microsoft Purview
Data understanding is about ensure data has quality descriptors that help users understand what the data is and how it should be used.





625
Microsoft Purview
Define what each label can do. Configure the protection settings you want associated with each label. For example, you might want lower sensitivity content (such as a "General" label) to have just a header or footer applied, while higher sensitivity content (such as a "Confidential" label) should have a watermark and encryption.





626
Microsoft Purview
Run the policy in simulation mode with notifications and Policy Tips so that you can begin to teach users about your compliance policies and prepare them for when the policies are applied. It's useful to have a link to an organization policy page that provides more details about the policy in the Policy Tip.





627
Microsoft Purview
You can view the last 30 days of DLP information in Activity Explorer using these preconfigured filters:

    Endpoint DLP activities
    Files containing sensitive info types
    Egress activities
    DLP policies that detected activities
    DLP policy rules that detected activities





628
Microsoft Purview
The Groups & sites scope becomes available and selected by default when you enable sensitivity labels for containers and synchronize labels. This option lets you protect content in SharePoint sites, Teams sites, and Loop workspaces by labeling those containers but doesn't label the items in them.





629
Microsoft Purview
In Microsoft Purview, you implement data loss prevention by defining and applying DLP policies. A DLP policy can help you identify, monitor, and automatically protect sensitive data-at-rest, data-in-motion, and data-in-use. DLP policies act on a variety of locations, methods of data transmission, and types of user activities.





630
PnP PowerShell
SecureString (System.Security)
Represents text that should be kept confidential, such as passwords. Provides methods to encrypt and handle sensitive information securely in scripts.





631
PnP PowerShell
CSOM (Client-Side Object Model)
An alternative to REST API for interacting with SharePoint from client applications. Provides a different set of libraries and methods for SharePoint operations.





632
PnP PowerShell
PSCredential Object (Microsoft.PowerShell.Security)
Stores and manages user credentials securely within PowerShell. Used for authenticating commands that require user-based permissions.





633
PnP PowerShell
New-PnPField (PnP.PowerShell)
Creates a new field in a SharePoint list or library. Supports defining field types, settings, and validations for structured data management.





634
PnP PowerShell
ConvertTo-SecureString (Microsoft.PowerShell.Security)
Transforms plain text into a secure string object in PowerShell. Essential for handling sensitive data like passwords and client secrets securely.





635
PnP PowerShell
SharePoint CSOM (Client-Side Object Model)
A programming model that allows interaction with SharePoint data from client applications. Provides an alternative to REST API for performing SharePoint operations.





636
PnP PowerShell
JSON Conversion
Transforms PowerShell objects to JSON format and vice versa using ConvertTo-Json and ConvertFrom-Json. Essential for handling REST API payloads and responses.





637
PnP PowerShell
Invoke-PnPRequest (PnP.PowerShell)
Sends custom HTTP requests to SharePoint APIs within PnP.PowerShell scripts. Allows for advanced interactions beyond standard cmdlet capabilities.





638
PnP PowerShell
Remove-PnPUserFromGroup (PnP.PowerShell)
Removes a user from a SharePoint group. Helps in maintaining accurate group memberships and enforcing access policies through scripts.





639
PnP PowerShell
Remove-PnPField (PnP.PowerShell)
Deletes a field from a SharePoint list or library. Useful for cleaning up unused or outdated columns programmatically.





640
Python
Q:
How can you measure the performance of a generator function?

A:
By using the timeit module or integrating timing within the generator using time measurements.





641
Python
Q:
How do you add a required positional argument using argparse?

A:
By using the .add_argument() method without specifying -- prefixes.

Example:
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('filename', help='Name of the file to process')
args = parser.parse_args()





642
Python
Q:
How can you add a dynamic description to a tqdm progress bar?

A:
By using the desc parameter when initializing the progress bar.

Example:
from tqdm import tqdm
for i in tqdm(range(100), desc='Processing'):
    pass





643
Python
Q:
How can decorators be used to modify the behavior of generator functions?

A:
By defining a decorator that wraps the generator function, potentially altering how yield statements are handled or adding additional functionality before and after iteration.





644
Python
Q:
How can you create a context manager that suppresses specific exceptions?

A:
By using the contextlib.suppress() context manager.

Example:
from contextlib import suppress

with suppress(FileNotFoundError):
    os.remove('non_existent_file.txt')
# No exception is raised if the file does not exist





645
Python
Q:
What is lazy evaluation, and how do generators implement it in Python?

A:
Lazy evaluation is a strategy where computations are deferred until their results are needed. Generators implement lazy evaluation by yielding one item at a time, generating each value only when requested.





646
Python
Q:
What are some ways to optimize generator performance in Python?

A:

Minimizing the number of yield statements.
Avoiding complex computations within the generator.
Using built-in functions and libraries that are optimized in C.





647
Python
How can you add an optional argument with a default value using argparse?

A:
By specifying the argument name with -- and providing the default parameter.

Example:
parser.add_argument('--verbose', action='store_true', default=False, help='Enable verbose output')





648
Python
How can you check if two Path objects refer to the same file in different locations?

A:
By comparing their resolved absolute paths using the .resolve() method.

Example:
path1 = Path('/path/to/file').resolve()
path2 = Path('../path/to/file').resolve()
are_same = path1 == path2
Flashcard 56





649
Python
from functools import wraps

def my_decorator(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        # Pre-processing
        result = func(*args, **kwargs)
        # Post-processing
        return result
    return wrapper





650
Azure Developer Associate
Q: In Azure App Service, what’s the correct Key Vault reference syntax?
A: @Microsoft.KeyVault(SecretName=MySecret;VaultName=MyVault)





651
Azure Developer Associate
Q: In Azure Storage, which SAS type supports Azure AD identity delegation?
A: User delegation SAS (Blob service only)





652
Azure Developer Associate
Q: In Azure Service Bus topics, which filter matches properties like MessageId or CorrelationId?
A: Correlation filter





653
Azure Developer Associate
Q: In Azure API Management, which policy lets you return fake responses without calling the backend?
A: Mock-response policy





654
Azure Developer Associate
Q: In Azure Event Hubs, what provides independent views of an event stream?
A: Consumer group





655
Azure Developer Associate
Q: In Azure Event Hubs, what unit enables parallel processing of events?
A: Partition





656
Azure Developer Associate
Q: In Azure API Management, which pipeline is used to remove headers from responses?
A: Outbound pipeline





657
Azure Developer Associate
Q: In Application Insights, which feature shows real-time telemetry?
A: Live Metrics





658
Azure Developer Associate
Q: In Azure Cosmos DB, which consistency level guarantees that batch updates appear together in order?
A: Consistent Prefix





659
Azure Developer Associate
Q: In Azure API Management, which element enforces policy evaluation order?
A: <base/>





660
Vocab
Jingo, Pratchett
Rotas
noun (plural) | ROH-tuhs
Schedules or lists showing when people are assigned to particular duties or tasks, especially in British English.
Example: The hospital staff checked the rotas to see who was on night duty.





661
Vocab
Well of Lost Plots, Fforde
Gerund
noun | JER-und
A verb form ending in -ing that functions as a noun.
Example: In the sentence “Swimming is fun,” swimming is a gerund.





662
Vocab
How to Sell a Haunted House, Hendrix
Probate
Pronunciation: PROH-bayt
Definition: The legal process of validating a deceased person’s will and administering their estate according to that will or state law.





663
Vocab
How to Sell a Haunted House, Hendrix
Camellia
Pronunciation: kuh-MEE-lee-uh
Definition: An evergreen shrub native to Asia, prized for its glossy leaves and showy, rose-like flowers. Commonly used in landscaping and known for varieties like Camellia japonica and Camellia sinensis (the tea plant).





664
Vocab
Pharmacogenetic Markers
Pronunciation: FAR-mah-koh-juh-NET-ik MAR-kurz
Definition: Genetic indicators that predict how an individual will respond to specific medications, guiding personalized treatment for better efficacy and reduced side effects.





665
Vocab
Lacunary
adjective
SPA: LACK-yoo-nary
IPA: /ˈlækjʊnəri/

Characterized by gaps or missing portions, particularly in texts or manuscripts.
Example: The ancient manuscript was lacunary, with several sections of the text lost to time.





666
Vocab
Well of Lost Plots, Fforde
Frontispiece
noun | FRUNT-ih-peess
An illustration or decorative page facing the title page of a book.
Example: The antique volume featured an engraved frontispiece of its author.





667
Vocab
Jingo, Pratchett
Effendi
noun | eh-FEN-dee
A title of respect or courtesy for a man, especially in Turkey or formerly in the Ottoman Empire.
Example: The effendi greeted us warmly as we entered his home.





668
Vocab
Jingo, Pratchett
Windlass
noun | WIND-luhs
A mechanical device used for lifting or hauling, typically consisting of a horizontal cylinder turned by a crank or motor.
Example: The sailors used a windlass to raise the anchor.





669
Vocab
Well of Lost Plots, Fforde
Lych-gate
noun | LICH-gate
A roofed gateway at the entrance to a churchyard, often where a coffin rests before burial.
Example: The mourners paused under the ancient lych-gate before entering the churchyard.





670
JavaScript Concepts
Prototype-Based Inheritance: JavaScript uses prototype-based inheritance, meaning objects can inherit properties and methods from other objects. This is achieved through the prototype chain3.





671
JavaScript Concepts
For objects, by default String returns an unhelpful text.

String({ key: 'value' });
// => '[object Object]'





672
JavaScript Concepts
Array slice Function: The slice method returns a shallow copy of a portion of an array into a new array object.
let array = [1, 2, 3, 4, 5];
let slicedArray = array.slice(1, 4); // Output: [2, 3, 4]





673
JavaScript Concepts
NaN is not equal to itself (NaN !== NaN), so using case NaN: in a switch statement will not work.
Use the isNaN function to check for NaN values before the switch statement or within a switch statement using switch (true).





674
JavaScript Concepts
Reserved Words: Identifiers cannot be the same as JavaScript reserved words (keywords). Reserved words are predefined in the language and have special meanings, such as var, let, const, function, and class. Using these as identifiers will result in syntax errors1.





675
JavaScript Concepts
When ... appears on the right-hand side of an assignment, it's known as the spread operator. It expands an array into a list of elements. Unlike the rest element, it can appear anywhere in an array literal expression, and there can be more than one.

    const oneToFive = [1, 2, 3, 4, 5];
    const oneToTen = [...oneToFive, 6, 7, 8, 9, 10];
    oneToTen;
    // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]





676
JavaScript Concepts
Context API: A React feature that provides a way to pass data through the component tree without prop drilling, useful for simple state management.





677
JavaScript Concepts
Front: How do you access the raw string content of a template literal?

Back: You can access the raw string content using the String.raw tag.
  const rawString = String.raw`Hello\nWorld`;
  console.log(rawString); // Output: Hello\nWorld





678
JavaScript Concepts
Object.assign(): This method can be used to copy the values of all enumerable own properties from one or more source objects to a target object.

const obj = { key1: "value1", key2: "value2" };
Object.assign(obj, { key3: "value3" }); // Adds key3 with value3





679
JavaScript Concepts
Front: What are tagged templates and how do you use them?

Back: Tagged templates allow you to parse template literals with a function. The function receives the template string and the values as arguments.
  function tag(strings, ...values) {
  console.log(strings); // Array of string segments
  console.log(values);  // Array of values
  return 'Tagged template result';
}
const result = tag`Hello, ${name}!`;
console.log(result); // Output: Tagged template result





680
Python
Q:
What is the purpose of @functools.wraps in decorator functions?

A:
To preserve the original function’s metadata (such as the name and docstring) when it is wrapped by a decorator.





681
Python
Q:
What keyword is used to define an asynchronous generator function in Python?

A:
async def





682
Python
Q:
How can you use tqdm with file operations, such as reading lines from a file?

A:
By wrapping the file iterator with tqdm to display a progress bar.

Example:
from tqdm import tqdm
for i in tqdm(range(100), desc='Processing'):
    pass





683
Azure Developer Associate
Q: In Azure Cosmos DB, what’s the difference between a push and a pull change feed model?
A: Push = automatic triggers (Functions/Processor); Pull = client polls manually.





684
Azure Developer Associate
Q: In Azure Storage, what protocol must always be enforced for SAS?
A: HTTPS





685
Azure Developer Associate
Q: In Azure Storage, which feature allows revoking SAS tokens without rotating keys?
A: Stored access policy





686
Azure Developer Associate
Q: In Azure API Management, what’s the difference between a Subscription and a Policy?
A: Subscription = access key for consumers; Policy = runtime behavior (rate limiting, transformations, security).





687
Azure Developer Associate
Q: In Application Insights, what’s the technique that traces requests across services?
A: Distributed tracing





688
Vocab
Well of Lost Plots, Fforde
Insouciance
noun | in-SOO-see-ance
Casual lack of concern; indifference.
Example: His insouciance about deadlines frustrated his teammates.





689
Vocab
Jingo, Pratchett
Equerry
noun | EK-wuh-ree
An officer of a royal household who attends or assists members of the royal family.
Example: The equerry accompanied the prince during his official visit.





690
Vocab
Something Rotten, Fforde
Owen Wister

An American writer best known for his novel The Virginian (1902), considered the first true Western novel.
Example: Owen Wister’s work laid the foundation for cowboy fiction.





691
Vocab
Well of Lost Plots, Fforde
The Decameron
noun | the deh-KAM-er-on
A 14th-century collection of 100 novellas by Giovanni Boccaccio, framed as stories told by ten people sheltering from the Black Death.
Example: The Decameron opens with its narrators deciding to entertain themselves with tales during the plague.





692
Vocab
Lost in a Good Book
Pelmet(s): A decorative framework or fabric cover above a window, concealing curtain fittings or rods.





693
Vocab
Lost in a Good Book
Phaeton (bodied automobile): A type of early open-top car with no fixed roof, evoking the design of 19th-century horse-drawn carriages.





694
Vocab
Jingo, Pratchett
Scull
noun/verb | SKUHL
A type of oar used in rowing, or the act of propelling a boat using such oars.
Example: She learned to scull on the calm waters of the lake.





695
Vocab
Well of Lost Plots, Fforde
Thrombosis
noun | throm-BOH-sis
The formation or presence of a blood clot within a blood vessel.
Example: She was hospitalized with deep-vein thrombosis in her leg.





696
Vocab
Something Rotten, Fforde
Zane Grey

An American author known for popularizing the Western genre in the early 20th century. Best Known for Riders of the Purple Sage (1912).
Example: Zane Grey’s novels helped define the mythic American frontier.





697
Vocab
How to Sell a Haunted House, Hendrix
Tulle
Pronunciation: tool
Definition: A lightweight, fine netting often used in veils, gowns, and tutus, typically made from silk, nylon, or rayon.





698
JavaScript Concepts
Unique Names: All JavaScript variables must be identified with unique names, called identifiers. These names can be short (like x and y) or more descriptive (like age, sum, totalVolume). Identifiers can contain letters, digits, underscores, and dollar signs, but they must begin with a letter, underscore, or dollar sign1.





699
JavaScript Concepts
A callback function is a function that is passed as an argument to another function and is executed after some operation has been completed. This allows for more flexible and modular code, especially when dealing with asynchronous operations.





700
JavaScript Concepts
Key-Value Pairs: Objects in JavaScript are collections of key-value pairs. Each key is a string (or symbol) and each value can be any data type, including other objects2.





701
JavaScript Concepts
Closures: Functions that retain access to their lexical scope even when executed outside their original context, enabling data privacy and function factories.





702
JavaScript Concepts
Bracket Notation: You can also use bracket notation, which is useful when the property name is dynamically determined.

const obj = { key1: "value1", key2: "value2" };
obj["key3"] = "value3"; // Adds key3 with value3





703
JavaScript Concepts
Component-Based Architecture: Building applications by encapsulating functionality into independent, reusable components, commonly used in frontend frameworks.





704
JavaScript Concepts
Using for...in Loop: The for...in loop is useful for iterating over all enumerable properties of an object, including inherited ones. To avoid iterating over inherited properties, use the hasOwnProperty method1.





705
JavaScript Concepts
Checks potentially very long playlsit for a specific track by converting to a set and using the Set.has() funciton.
  export function hasTrack(playlist, track) {
    const play_set = new Set (playlist)
    return play_set.has(track)
  }





706
JavaScript Concepts
In many cases, it makes sense to assign a more appropriate default value than undefined. This can be done by specifying default parameters directly in the function definition.

function someName(param1 = defaultValue1, param2 = defaultValue2) {
  // ...
}





707
JavaScript Concepts
Virtual DOM: An in-memory representation of the real DOM used by libraries like React to optimize and batch DOM updates efficiently.





708
Vocab
Red Side Story, FForde
Probity
Pronunciation: PROB-ih-tee
Definition: Adherence to the highest principles and ideals; uprightness and integrity.





709
JavaScript Concepts
Yarn: An alternative package manager to npm, offering faster installs and more reliable dependency management through lock files.





710
JavaScript Concepts
Front: How do you create multiline strings using string templates?
Back: String templates allow for multiline strings without the need for concatenation or escape characters.
  const multiline = `This is a string
  that spans multiple
  lines.`;
  console.log(multiline);





711
JavaScript Concepts
Front: Can you call functions within a string template?

Back: Yes, you can call functions within ${} in a string template.
  function getName() {
    return 'Jay';
  }
  const greeting = `Hello, ${getName()}!`;
  console.log(greeting); // Output: Hello, Jay!





712
JavaScript Concepts
Many operators coerce the operands into numbers (if necessary) according to the logic of the Number function explained above.
    Arithmetic operators: + (if no string is involved), -, *, /, %, **
    Unary plus and unary negation operators: +, -
    Relational operators (for non-string operands): >, >=, <, <=
    Bitwise operators: |, &, ^, ~





713
JavaScript Concepts
JavaScript's array destructuring syntax is a concise way to extract values from an array and assign them to distinct variables. In this example, each value in the numberOfMoons array is assigned to its corresponding planet:

    const numberOfMoons = [0, 2, 14];
    const [venus, mars, neptune] = numberOfMoons;

    neptune;
    // => 14





714
JavaScript Concepts
If the addition operator + is used for primitive values and one operand is a string, the other one will be coerced into a string as well. The conversion logic is the same as when using the String function. Afterwards, the two strings are concatenated.

let name;
'hello ' + name;
// => 'hello undefined'





715
JavaScript Concepts
Using Object.entries(): The Object.entries() method returns an array of the object's own enumerable property [key, value] pairs. You can use the for...of loop to iterate over these pairs1.





716
JavaScript Concepts
Logical AND (&&) and OR (||) Statements
if (condition1 && condition2) {
    // Code to execute if both condition1 and condition2 are true
}

if (condition1 || condition2) {
    // Code to execute if either condition1 or condition2 is true
}





717
JavaScript Concepts
Webpack: A powerful module bundler that compiles JavaScript modules into a single bundle, optimizing assets for production.





718
JavaScript Concepts
Array slice Function: The slice method returns a shallow copy of a portion of an array into a new array object.
let array = [1, 2, 3, 4, 5];
let slicedArray = array.slice(1, 4); // Output: [2, 3, 4]

196
Azure Private DNS
Hybrid DNS
Definition: A DNS architecture that combines Azure DNS (Private and Public) with on-premises DNS services.
Feature: Azure Private DNS allows integration with hybrid DNS setups, where DNS queries can be resolved both within Azure and on-premises, facilitating a seamless DNS experience across environments.





719
JavaScript Concepts
Front: How do you access the raw string content of a template literal?

197
Azure Private DNS
DNS Zones Delegation
Definition: The process of delegating authority for a DNS zone to another DNS server.
Feature: Delegation in Azure enables hybrid DNS setups and can be used to delegate the management of specific domains within your DNS infrastructure.





720
JavaScript Concepts
Prototype-Based Inheritance: JavaScript uses prototype-based inheritance, meaning objects can inherit properties and methods from other objects. This is achieved through the prototype chain3.

195
Azure Private DNS
Automatic DNS Record Management
Definition: A feature of Azure Private DNS that automatically manages DNS records for Azure resources.
Feature: Automatic DNS Record Management makes it easier to manage internal DNS records by automatically registering records for Azure resources such as VMs or load balancers in the Private DNS Zone.





721
JavaScript Concepts
Front: What are the benefits of using callback functions?

Back:
Flexibility: Allows functions to be more modular and reusable.
Asynchronous Handling: Enables handling of asynchronous operations like network requests and timers.
Improved Code Organization: Helps in organizing code by separating concerns and improving readability.

192
Azure Compute Gallery
Ephemeral OS Disk – A temporary VM disk that cannot be used with ACG images.