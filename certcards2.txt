





1
Azure Developer Associate
As the .NET SDK for Azure Cosmos DB for NoSQL change feed processor handles changes, it functions as a time-based pointer. The pointer moves forward in time across the change feed and sends batches of changes to the delegate to run business logic.





2
Azure Developer Associate
In the Azure Service Bus Peek Lock mode, the receive operation becomes two-stage, which makes it possible to support applications that can't tolerate missing messages.

  Finds the next message to be consumed, locks it to prevent other consumers from receiving it, and then, return the message to the application.

  After the application finishes processing the message, it requests the Service Bus service to complete the second stage of the receive process. Then, the service marks the message as consumed.





3
Azure Developer Associate
Event Hubs Capture Destinations

Event Hubs can auto-archive streaming data straight to:
    Blob Storage
    Data Lake Gen1
    Data Lake Gen2
Each partition writes its own rolling blob file (based on time or size).
Capture is about cold storage, not real-time processing — for that, you’d wire up Functions or Stream Analytics instead.





4
Azure Developer Associate
API Management – Policies

Policies are programmable rules that run on every request and response.
They live inside <inbound>, <backend>, <outbound>, and <on-error> blocks.
Use them for things like JWT validation, header cleanup (set-header exists-action="delete"), or throttling (rate-limit-by-key).
Think of them as the middleware pipeline of API Management — configuration, not code, but just as powerful.





5
Python
Q:
What is the primary purpose of exit codes in Python scripts?

A:
To communicate the termination status of a script to the operating system or calling process.





6
Python
Q:
How can you display help messages for command-line arguments using argparse?

A:
By running the script with the -h or --help flag, which is automatically handled by argparse.





7
Python
Q:
How do you add a required positional argument using argparse?

A:
By using the .add_argument() method without specifying -- prefixes.

Example:
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('filename', help='Name of the file to process')
args = parser.parse_args()





8
Python
Q:
How can you nest multiple tqdm progress bars?

A:
By using multiple tqdm instances with different levels, often by setting the position parameter to avoid overlapping.

Example:
from tqdm import tqdm
for i in tqdm(range(3), desc='Outer', position=0):
    for j in tqdm(range(5), desc='Inner', position=1, leave=False):
        pass





9
Python
Q:
Name a common use case for generators in Python.

A:
Reading large files one line at a time without loading the entire file into memory.





10
Python
Q:
What function from the os module is used to iterate through directories and files?

A:
os.walk()





11
Python
Q:
What does the .with_suffix(new_suffix) method do in pathlib?

A:
It returns a new Path object with the file’s suffix changed to new_suffix.

Example:
file = Path('document.txt')
new_file = file.with_suffix('.md')  # 'document.md'
Command-Line Argument Parsing (argparse)





12
Python
Q:
What is lazy evaluation, and how do generators implement it in Python?

A:
Lazy evaluation is a strategy where computations are deferred until their results are needed. Generators implement lazy evaluation by yielding one item at a time, generating each value only when requested.





13
Python
Q:
Which pathlib method can be used to get the parent directory of a given path?

A:
.parent

Example:
path = Path('/path/to/file.txt')
parent = path.parent  # '/path/to'





14
Python
Q:
What is the purpose of the raise ... from ... syntax in exception handling?

A:
To chain exceptions, indicating that one exception was the direct cause of another.

Example:
try:
    1 / 0
except ZeroDivisionError as e:
    raise ValueError("Invalid operation") from e
Additional Python Modules and Functions





15
Python
Q:
Which itertools function can be used to create an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable?

A:
itertools.chain().





16
Python
Q:
What are some ways to optimize generator performance in Python?

A:

Minimizing the number of yield statements.
Avoiding complex computations within the generator.
Using built-in functions and libraries that are optimized in C.





17
Python
Q:
How can you create an asynchronous generator in Python?

A:
By defining a generator function with async def and using yield or yield from within it.

Example:
async def async_gen():
    for i in range(3):
        yield i





18
Python
How can you compare two Path objects for equality regardless of their string representations? By resolving both paths and comparing them.

path1 = Path('/home/user/file.txt').resolve()
path2 = Path('./file.txt').resolve()
are_equal = path1 == path2





19
Python
import time
from contextlib import contextmanager

@contextmanager 
def timer():
    start = time.time()
    try: yield
    finally:
        end = time.time()
        print(f"Elapsed time: {end - start} seconds")

# Usage
with timer():
    # Code block to measure
    time.sleep(2)
# Output: Elapsed time: 2.002 seconds





20
Python
Q:
What are the two methods that a context manager class must implement?

A:
__enter__() and __exit__(exc_type, exc_value, traceback).





21
Python
How can you check if two Path objects refer to the same file in different locations?

A:
By comparing their resolved absolute paths using the .resolve() method.

Example:
path1 = Path('/path/to/file').resolve()
path2 = Path('../path/to/file').resolve()
are_same = path1 == path2
Flashcard 56





22
Python
Q:
How do you make a custom object iterable?

A:
By implementing the __iter__() method that returns an iterator (which can be the object itself with a __next__() method).





23
FSLogix
A full VHD(x) clone is performed when Cloud Cache determines, at sign in, that a storage provider isn't at the same sequence. During this operation, all pending writes are kept in the local cache until all storage providers are at the same sequence. Once complete, the flush operation begins sending new data to the storage providers.





24
FSLogix
FSLogix Application Masking:
A component of FSLogix used to control application visibility. It isolates and hides applications (and their dependencies) from users who should not access them, based on group policies, thereby simplifying desktop environments.





25
FSLogix
Q: What is the role of Profile Disk Differencing in FSLogix?
A: Profile Disk Differencing allows FSLogix to create differencing VHDX disks, where changes to the user profile are stored in separate files, reducing the load on the main profile disk. This improves performance by ensuring faster read/write operations and reducing storage overhead.





26
FSLogix
Cloud Cache uses storage providers based on the order of entries in CCDLocations.
Storage providers should be listed in order of proximity, then preference.
Only one (1) provider is used when data is hydrated from the storage provider.





27
FSLogix
Cloud Cache operates the user's profile from the local cache during the user's session and must be configured with one or more remote storage providers as specified in CCDLocations. These remote storage providers store copies of the local cache and are used during the current session and for subsequent sign ins.





28
FSLogix
When the local cache doesn't contain the data requested by the file system, Cloud Cache hydrates (reads and copies) the data from 1 of the remote storage providers to the local cache. This operation is also part of the sign in process when populating the local cache for the user's profile.





29
Asynchronous Python
Thread Pool Executor
A thread pool executor, provided by the concurrent.futures module, is an abstraction that manages a pool of worker threads and simplifies scheduling and executing asynchronous tasks.





30
Asynchronous Python
Daemon Thread
Daemon threads are background threads that do not prevent the program from exiting; they automatically close when all non-daemon threads have finished.





31
Asynchronous Python
Backpressure
A condition in async Python where producers send data faster than consumers can process; addressed using queues or throttling.





32
Asynchronous Python
Race Condition
An issue in async Python code where multiple coroutines access shared data without proper coordination, leading to bugs.





33
Asynchronous Python
return_exceptions=True (in gather)
A parameter in Python's asyncio.gather() that returns exceptions as part of the results instead of cancelling all tasks on error.





34
Asynchronous Python
Non-blocking I/O
A key feature of async Python where I/O operations (e.g., file or network access) don’t block the event loop.





35
Asynchronous Python
Race Condition
A race condition occurs when multiple threads access and modify shared data concurrently, leading to unpredictable or incorrect results if not managed properly.





36
Asynchronous Python
Semaphore
A semaphore is a synchronization tool that limits the number of threads that can access a resource simultaneously, often used for managing a pool of resources.





37
Asynchronous Python
asyncio.CancelledError
An exception in Python that is raised inside a coroutine when it’s cancelled, allowing it to perform cleanup.





38
Asynchronous Python
async for (async iterator)
Used to iterate over async sequences in Python, such as streaming data or asynchronous file lines.





39
Vocab
How to Sell a Haunted House, Hendrix
Debride a Wound
Pronunciation: dih-BREED uh woond
Definition: The medical removal of dead, damaged, or infected tissue from a wound to promote healing and reduce the risk of infection.





40
Vocab
How to Sell a Haunted House, Hendrix
Trimalleolar Fracture
Pronunciation: try-mal-ee-OH-lar FRAK-chur
Definition: A severe ankle fracture involving all three malleoli—the medial, lateral, and posterior parts of the tibia and fibula—typically requiring surgical repair.





41
Vocab
Anacoluthon
noun
SPA: an-uh-koh-LOO-thon
IPA: /ˌænəkəˈluːθɒn/

A grammatical construction in which a sentence begins in one way but ends in another, often disrupting the expected syntax or logical sequence.
Example: His speech was full of anacoluthons, making it difficult to follow his intended argument.





42
Vocab
Well of Lost Plots, Fforde
Reigate
noun | RYE-gate
A market town in Surrey, England.
Example: They enjoyed a day trip to Reigate, exploring its castle ruins.





43
Vocab
How to Sell a Haunted House, Hendrix
Camellia
Pronunciation: kuh-MEE-lee-uh
Definition: An evergreen shrub native to Asia, prized for its glossy leaves and showy, rose-like flowers. Commonly used in landscaping and known for varieties like Camellia japonica and Camellia sinensis (the tea plant).





44
Vocab
Jingo, Pratchett
Scull
noun/verb | SKUHL
A type of oar used in rowing, or the act of propelling a boat using such oars.
Example: She learned to scull on the calm waters of the lake.





45
Vocab
Red Side Story, FForde
Osculation
Pronunciation: oss-kyoo-LAY-shun
Definition: The act of kissing; in mathematics, it can also refer to the contact between curves or surfaces.





46
Vocab
Structured Credit Provides Portfolio Diversification:
Investors utilize structured credit products to diversify portfolios beyond traditional bonds or equities, potentially accessing higher yields or returns not typically achievable through standard debt instruments.





47
Vocab
Something Rotten, Fforde
Nacelle
noun | nuh-SELL
An enclosed housing on an aircraft or wind turbine, typically containing engines or equipment.
Example: The jet’s engine nacelle was inspected before takeoff.





48
Vocab
Something Rotten, Fforde
Florin
noun | FLOR-in
A former British coin worth two shillings, or one-tenth of a pound, used before decimalization.
Example: He found an old florin in the attic among his grandfather’s coins.





49
Vocab
Well of Lost Plots, Fforde
Frontispiece
noun | FRUNT-ih-peess
An illustration or decorative page facing the title page of a book.
Example: The antique volume featured an engraved frontispiece of its author.





50
Vocab
Well of Lost Plots, Fforde
Lych-gate
noun | LICH-gate
A roofed gateway at the entrance to a churchyard, often where a coffin rests before burial.
Example: The mourners paused under the ancient lych-gate before entering the churchyard.





51
Vocab
Something Rotten, Fforde
Salver
noun | SAL-ver
A flat tray, typically made of silver, used for serving food or drinks.
Example: The butler carried the tea on a polished salver.





52
Vocab
How to Sell a Haunted House, Hendrix
Probate
Pronunciation: PROH-bayt
Definition: The legal process of validating a deceased person’s will and administering their estate according to that will or state law.





53
Vocab
Well of Lost Plots, Fforde
Inveigle
verb | in-VAY-guhl
To entice, lure, or persuade by flattery or deception.
Example: He tried to inveigle his way into the VIP lounge using a fake invitation.





54
Vocab
Well of Lost Plots, Fforde
Thrombosis
noun | throm-BOH-sis
The formation or presence of a blood clot within a blood vessel.
Example: She was hospitalized with deep-vein thrombosis in her leg.





55
Vocab
Pharmacogenetic Markers
Pronunciation: FAR-mah-koh-juh-NET-ik MAR-kurz
Definition: Genetic indicators that predict how an individual will respond to specific medications, guiding personalized treatment for better efficacy and reduced side effects.





56
PnP PowerShell
Remove-PnPFile (PnP.PowerShell)
Deletes a specified file from a SharePoint library or folder. Useful for automating cleanup tasks or managing outdated documents programmatically.





57
PnP PowerShell
Environment Variables
Variables that are set at the operating system level and accessible within PowerShell. Used to store configuration data and secrets securely without hardcoding.





58
PnP PowerShell
Parameter Set Conflict
Occurs when incompatible or conflicting parameters are used together in a PowerShell cmdlet, leading to errors as PowerShell cannot determine the intended operation.





59
PnP PowerShell
Connect-PnPOnline (PnP.PowerShell)
Establishes a connection to a SharePoint site using various authentication methods like client credentials or device code flow, enabling subsequent PnP.PowerShell cmdlets to interact with SharePoint.





60
PnP PowerShell
Import-Clixml (Microsoft.PowerShell.Utility)
Deserializes PowerShell objects from an XML format file. Allows retrieving previously exported objects, maintaining their original structure and properties.





61
PnP PowerShell
Get-AzureADServicePrincipal (AzureAD)
Retrieves information about service principals in Azure Active Directory. Used to manage application identities and their associated permissions.





62
PnP PowerShell
JSON Payloads
Data formatted in JSON used in REST API requests and responses. PowerShell uses ConvertTo-Json and ConvertFrom-Json for handling JSON data structures.





63
PnP PowerShell
Get-PnPWeb (PnP.PowerShell)
Fetches details about the current SharePoint site, including properties like language, template, and navigation settings. Useful for site audits and management.





64
PnP PowerShell
Remove-PnPListItem (PnP.PowerShell)
Deletes an item from a SharePoint list. Useful for maintaining data integrity and automating data cleanup processes





65
PnP PowerShell
Delegated Permissions
Permissions granted to applications to act on behalf of a signed-in user. Requires user consent and is used in interactive authentication scenarios.





66
PnP PowerShell
CSOM (Client-Side Object Model)
An alternative to REST API for interacting with SharePoint from client applications. Provides a different set of libraries and methods for SharePoint operations.





67
PnP PowerShell
Token Expiry
The duration an OAuth 2.0 access token remains valid before needing renewal. Scripts must handle token refresh logic to maintain uninterrupted API access.





68
PnP PowerShell
Invoke-PnPRequest (PnP.PowerShell)
Sends custom HTTP requests to SharePoint APIs within PnP.PowerShell scripts. Allows for advanced interactions beyond standard cmdlet capabilities.





69
VMWare
Type 1 Hypervisor

A hypervisor that runs directly on physical hardware, without an underlying operating system. Examples: VMware ESXi, Microsoft Hyper-V.





70
VMWare
VMware ESXi

A Type 1 hypervisor that runs on physical servers to create and manage virtual machines in a VMware environment.





71
VMWare
DirectPath I/O

A feature in VMware ESXi that allows direct access to a physical device (e.g., a network adapter, GPU, or storage controller) by a virtual machine, bypassing the hypervisor for better performance. This is typically used for workloads requiring high performance, such as GPU acceleration or network-intensive applications.





72
VMWare
High Availability (HA)

A VMware feature that automatically restarts virtual machines on another host if the original host fails. It ensures minimal downtime in case of host failure.





73
VMWare
Live Migration

The process of moving a running virtual machine from one physical host to another with no interruption in service, typically using vMotion.





74
VMWare
Hypervisor

Software that allows the creation and management of virtual machines by abstracting the physical hardware. There are two types: Type 1 (bare-metal) and Type 2 (hosted).





75
VMWare
ESXi Host Profiles

A feature that allows administrators to configure, enforce, and standardize settings across multiple ESXi hosts in a cluster. Host profiles ensure consistency in configuration, such as networking, storage, and security settings, across all hosts in a given environment.





76
VMWare
ESXi Console Access

The ability to access the ESXi host’s console directly via the physical server or over a network using remote tools like SSH or the vSphere Client. This allows administrators to troubleshoot and configure the host or to work around issues when vCenter Server is unavailable.





77
VMWare
ESXi Free License (VMware ESXi Free)

A free version of VMware ESXi that provides basic virtualization capabilities without advanced features like vMotion, HA, or DRS. It's limited to 8 physical CPU cores and does not include access to vCenter Server for centralized management.





78
VMWare
Resource Pool

A logical grouping of CPU, memory, and storage resources in a VMware cluster, which can be allocated to virtual machines.





79
VMWare
Fault Tolerance (FT)

A VMware feature that provides continuous availability by creating a shadow VM on a different host that automatically takes over in case of a host failure, ensuring zero downtime.





80
VMWare
vMotion

A VMware feature that allows the live migration of virtual machines between ESXi hosts with no downtime.





81
VMWare
vSAN (Virtual SAN)

A VMware product that creates virtualized storage by aggregating local storage from ESXi hosts in a cluster, providing a shared storage solution without needing external storage hardware.





82
JavaScript Concepts
Middleware: Functions in frameworks like Express.js that have access to request and response objects, used for tasks like authentication and logging.





83
JavaScript Concepts
Variable Declarations (let, const, var): Keywords to declare variables with different scopes and mutability. let and const are block-scoped, while var is function-scoped.





84
JavaScript Concepts
Front: How do you access the raw string content of a template literal?

Back: You can access the raw string content using the String.raw tag.
  const rawString = String.raw`Hello\nWorld`;
  console.log(rawString); // Output: Hello\nWorld





85
JavaScript Concepts
Ensure to use the comparison operator === instead of the assignment operator = when comparing values in switch cases. In an exercise, I had something like 
    case converted_value = 0
instead of
    case converted_value === 0
and that screwed up all of the following cases.





86
JavaScript Concepts
Express.js: A minimalist web framework for Node.js, facilitating routing, middleware integration, and handling HTTP requests/responses.





87
JavaScript Concepts
JavaScript's array destructuring syntax is a concise way to extract values from an array and assign them to distinct variables. In this example, each value in the numberOfMoons array is assigned to its corresponding planet:

    const numberOfMoons = [0, 2, 14];
    const [venus, mars, neptune] = numberOfMoons;

    neptune;
    // => 14





88
JavaScript Concepts
Reserved Words: Identifiers cannot be the same as JavaScript reserved words (keywords). Reserved words are predefined in the language and have special meanings, such as var, let, const, function, and class. Using these as identifiers will result in syntax errors1.





89
JavaScript Concepts
Type Coercion to boolean commonly occurs for
    the condition of an if statement
    the first operand of the ternary operator ?
    the operand of the logical NOT operator !
    the operands of the logical AND && and OR || operators (the result of the expression is one of the operands, not necessarily a boolean)





90
JavaScript Concepts
Array reverse Function: The reverse method reverses the order of the elements in an array in place.
let array = [1, 2, 3, 4, 5];
array.reverse();
console.log(array); // Output: [5, 4, 3, 2, 1]





91
JavaScript Concepts
Front: What are the benefits of using callback functions?

Back:
Flexibility: Allows functions to be more modular and reusable.
Asynchronous Handling: Enables handling of asynchronous operations like network requests and timers.
Improved Code Organization: Helps in organizing code by separating concerns and improving readability.





92
JavaScript Concepts
With Boolean(value) you can convert any value to a boolean. There is a fixed set of values, so called falsy values, that convert to false. Most importantly, false, 0, empty string, null, undefined and NaN are falsy.
Boolean(-1);// => true
Boolean(0);// => false
Boolean(' ');// => true
Boolean('');// => false





93
JavaScript Concepts
Front: Can you call functions within a string template?

Back: Yes, you can call functions within ${} in a string template.
  function getName() {
    return 'Jay';
  }
  const greeting = `Hello, ${getName()}!`;
  console.log(greeting); // Output: Hello, Jay!





94
JavaScript Concepts
Case Sensitivity: JavaScript identifiers are case-sensitive. This means that y and Y are considered different variables. It's important to be consistent with the use of case to avoid errors in your code1.





95
JavaScript Concepts
In many cases, it makes sense to assign a more appropriate default value than undefined. This can be done by specifying default parameters directly in the function definition.

function someName(param1 = defaultValue1, param2 = defaultValue2) {
  // ...
}





96
JavaScript Concepts
Yarn: An alternative package manager to npm, offering faster installs and more reliable dependency management through lock files.





97
JavaScript Concepts
If the addition operator + is used for primitive values and one operand is a string, the other one will be coerced into a string as well. The conversion logic is the same as when using the String function. Afterwards, the two strings are concatenated.

let name;
'hello ' + name;
// => 'hello undefined'





98
JavaScript Concepts
Closures: Functions that retain access to their lexical scope even when executed outside their original context, enabling data privacy and function factories.





99
JavaScript Concepts
For objects, by default String returns an unhelpful text.

String({ key: 'value' });
// => '[object Object]'





100
JavaScript Concepts
Object literal { length: n } is just “array-like”: any object with a numeric .length can drive Array.from.
  let cols = Array.from({ length: n }, () => [])





101
JavaScript Concepts
Promise
An object representing the eventual outcome of an asynchronous operation:
  Pending – neither fulfilled nor rejected

  Fulfilled – operation succeeded, value available

  Rejected – operation failed, reason available





102
JavaScript Concepts
Use a private backing field for getter-only properties
  this._rows = …  
  get rows() { return this._rows }





103
JavaScript Concepts
Split a string and convert parts to numbers
  "1 2 3".split(" ").map(Number)





104
JavaScript Concepts
Macrotask (Task) Queue
Also called the “callback queue.” Holds callbacks from things like setTimeout, I/O events, and UI rendering.





105
JavaScript Concepts
Call Stack
A LIFO stack of frames representing currently executing functions. When it’s empty, the event loop can pick up queued callbacks.





106
JavaScript Concepts
Uncaught Promise Rejection
A Promise that rejects without any .catch() or try/catch(await). Can crash Node or trigger browser warnings.





107
Terraform
Built-In Functions:
Definition: Terraform provides functions for manipulating data types like strings, lists, and maps.
Usage: Essential for transforming and preparing data for resource configurations.

Examples:
join(separator, list): Concatenates list elements.
h
Copy
"${join(",", var.instance_ids)}"
split(delimiter, string): Splits a string into a list.
lookup(map, key, default): Retrieves a value from a map.





108
Terraform
Double Quotes vs. Single Quotes:

Double Quotes (" "): Allow variable interpolation.
Single Quotes (' '): Do not interpolate variables; they treat the content as a literal string.





109
Terraform
Provisioning infrastructure across multiple clouds increases fault-tolerance, allowing for more graceful recovery from cloud provider outages. However, multi-cloud deployments add complexity because each provider has its own interfaces, tools, and workflows. Terraform lets you use the same workflow to manage multiple providers and handle cross-cloud dependencies.





110
Terraform
Local Values:
Definition: Local values allow you to define computed variables within a configuration to simplify expressions or avoid repetition.
Usage: Useful for intermediate calculations or to centralize common values.

Example:

locals {
  app_name = "myapp"
  instance_count = length(var.instance_ids)
}





111
TSQL
Q: What is the purpose of the GROUP BY clause in T-SQL?
A: It collapses rows into groups based on the values of one or more columns and applies aggregate functions to each group.





112
TSQL
Pivoting Data:

Use the PIVOT operator to transform rows into columns for reporting or data summarization.





113
TSQL
Q: What happens in T-SQL if you use GROUP BY but select columns that are not aggregated or not in the GROUP BY clause?
A: You get an error. All columns in the SELECT must either be part of the GROUP BY clause or be wrapped in an aggregate function like SUM, AVG, MAX, etc.





114
TSQL
Common Table Expressions (CTEs):

Defined with the WITH clause to create temporary result sets within a query.
Recursive CTEs: Handle hierarchical data by repeatedly referencing the CTE itself.





115
TSQL
Set Operations:

UNION / UNION ALL: Combine result sets from multiple queries (with or without duplicate removal).
INTERSECT: Returns rows common to both queries.
EXCEPT: Returns rows from the first query that do not appear in the second.





116
TSQL
User-Defined Functions (UDFs):

Custom functions that return scalar values or tables, encapsulating reusable logic.





117
TSQL
Derived Tables:

Subqueries in the FROM clause that act as temporary tables with an alias.





118
TSQL
Inline Comments in SQL:

Queries nested within other queries (in SELECT, FROM, or WHERE clauses) to return single or multiple values.





119
Azure Compute Gallery
Compute Gallery Resource – The top-level container that stores multiple image definitions and versions.





120
Azure Compute Gallery
License Considerations – Some images (e.g., RHEL, Windows Server) require Azure Hybrid Benefit or additional licensing.





121
Azure Compute Gallery
Azure Marketplace Image as a Base – Using a pre-configured image from Azure Marketplace to deploy new VMs.





122
Azure Compute Gallery
Shared Image Gallery Reader Role – An RBAC role that allows users to access images for deployment but not modify them.





123
Azure Compute Gallery
Azure Compute Gallery Roles:
Reader – Can list and read images.
Contributor – Can create and manage images.
Owner – Full control over the gallery.
Shared Image Gallery Reader – Read-only access to images across subscriptions.





124
Azure Compute Gallery
Azure Policy Enforcement – Some organizations restrict Compute Gallery usage via Azure Policies.





125
Azure Compute Gallery
Capture from Existing VM – Creating an image by generalizing or specializing a VM and capturing it into ACG.





126
Azure Compute Gallery
Region Availability – Not all Azure regions support Compute Gallery replication.
Azure Government & Sovereign Clouds – Some regions (e.g., China, US Gov) have restricted ACG availability.





127
Azure Compute Gallery
Storage Costs for ACG – Storage pricing depends on:
Number of versions retained
Number of replicas in different regions
Image size





128
Azure Compute Gallery
Azure Compute Gallery (ACG) – A service that helps manage, share, and distribute VM images across multiple subscriptions and regions.





129
C# Basics
Indexers allow objects to be indexed like arrays. They enable you to access elements in an object using the array-like syntax.
Example:
public class Student {
    private string[] grades = new string[3];

    public string this[int index] {
        get { return grades[index]; }
        set { grades[index] = value; }
    }
}





130
C# Basics
How is a class defined in C#?

C#:
public class Dog {
    public string Name { get; set; }
    
    public Dog(string name) {
        Name = name;
    }
}





131
C# Basics
Events use delegates to provide a way for a class to notify other classes when something happens.
Example:
public delegate void EventHandler();

public class Publisher {
    public event EventHandler Notify;    
    public void RaiseEvent() {
        Notify?.Invoke();
    }
}
public class Subscriber {
    public void OnNotify() {
        Console.WriteLine("Event triggered!");
    }
}





132
C# Basics
Lambda expressions provide a concise way to represent anonymous methods.
Example:
Func<int, int, int> add = (x, y) => x + y;





133
C# Basics
.NET uses a garbage collector that automatically manages memory. The GC.Collect() method can be called manually if needed, but generally not required.





134
C# Basics
What is the role of namespaces in C#?

C#: Namespaces organize classes, structs, and other types into logical groups.
Example:
using System;
using System.Linq;





135
C# Basics
What are static classes and methods in C#?

C#: A static class cannot be instantiated. Static members belong to the type itself, not an instance.
Example:
public static class MathUtils {
    public static int Add(int x, int y) {
        return x + y;
    }
}





136
Azure VM + Developer
X11 Forwarding
An SSH technique that lets GUI applications run on a remote Linux machine but display on your local computer; requires an X server locally.





137
Azure VM + Developer
Availability Zone
A physically isolated datacenter location within an Azure region, designed for high availability by spreading resources across separate zones with independent power, cooling, and networking.





138
Azure VM + Developer
Dev Containers
A container-based dev environment defined in `.devcontainer.json`, allowing full isolation and consistent tooling across developers, either locally or in Codespaces.





139
Azure VM + Developer
Debugger Config (launch.json)
A JSON config file in VS Code that specifies how to run and debug an app, including which script to execute, arguments, environment variables, and breakpoints.





140
Azure VM + Developer
Package Manager
A tool for installing, updating, and managing external libraries your app depends on (e.g., `pip`, `npm`, `nuget`, `brew`).





141
Azure VM + Developer
REPL
Short for “Read-Eval-Print Loop,” an interactive shell that allows developers to run and evaluate code statements live (e.g., Python shell, Node.js REPL).





142
Azure VM + Developer
Persistent vs Ephemeral
A comparison between VMs that retain data and configurations across reboots (persistent) vs temporary VMs used for disposable environments like Codespaces (ephemeral).





143
Azure VM + Developer
.env File
A flat file storing environment variables (like `DEBUG=true`, `API_KEY=xyz`) for local development and testing, typically excluded from version control.





144
Azure VM + Developer
Cloud-Init
A Linux-native tool that enables automatic VM customization on boot using YAML config files, typically used to install packages, configure networking, or run scripts.





145
Azure VM + Developer
Test Pyramid
A testing strategy that favors many fast unit tests, fewer integration tests, and minimal end-to-end tests to maintain speed and reliability.





146
Azure VM + Developer
Language Runtime
The software layer that interprets and executes code written in a particular language (e.g., Python, Node.js, .NET Core), and must be installed in the dev environment.





147
Azure DevOps Pipelines
How can you pass secrets securely in Azure DevOps YAML pipelines?
Answer: You pass secrets using pipeline variables marked as secret in Azure DevOps. They are referenced in the YAML file as $(secret_variable) but are masked and not exposed in logs.





148
Azure DevOps Pipelines
How can you trigger a pipeline based on a Git tag in Azure DevOps?
Answer: You use the trigger keyword with the tags sub-keyword to specify that the pipeline should trigger when a Git tag is pushed.

Example:
trigger:
  tags:
    include:
      - v*





149
Microsoft Purview
Sensitivity labels provide users and admins with visibility into the sensitivity of the data that they're using, and the labels themselves can apply protection actions that include encryption, access restrictions, and visual markings.





150
Microsoft Purview
Run the policy in simulation mode with notifications and Policy Tips so that you can begin to teach users about your compliance policies and prepare them for when the policies are applied. It's useful to have a link to an organization policy page that provides more details about the policy in the Policy Tip.





151
Microsoft Purview
Microsoft Purview includes:
Sensitive information types to identify sensitive items by using built-in or custom regular expressions, or a function.
Trainable classifiers 
Data classification





152
Microsoft Purview
The most effective end-user documentation will be customized guidance and instructions you provide for the label names and configurations you choose. You can use the label policy setting Provide users with a link to a custom help page to specify an internal link for this documentation.





153
Microsoft Purview
When viewed by users in your organization, an applied sensitivity label appears like a tag on apps and can be easily integrated into their existing workflows. Your sensitivity labels aren't visible in apps to users from other organizations, or to guests.





154
Microsoft Purview
DLP policies can be applied to the following locations:
    Exchange online email
    SharePoint sites
    OneDrive accounts
    Teams chat and channel messages
    Windows 10, 11 and macOS Devices
    Microsoft Defender for Cloud Apps
    On-premises repositories





155
Microsoft Purview
Evaluate the impact of the controls by implementing them with a DLP policy in simulation mode. Actions defined in a policy aren't applied while the policy is in simulation mode.





156
Microsoft Purview
When you create your sensitivity labels in the Microsoft Purview portal, they appear in a list on the Labels page from Information Protection. In this list, the order of the labels is important because it sets their priority. You want your most restrictive sensitivity label, such as Highly Confidential to appear at the bottom of the list and your least restrictive sensitivity label, such as Personal or Public, to appear at the top.





157
Microsoft Purview
Data understanding is about ensure data has quality descriptors that help users understand what the data is and how it should be used.





158
Microsoft Purview
Publish the labels. After your sensitivity labels are configured, publish them by using a label policy. Decide which users and groups should have the labels and what policy settings to use. A single label is reusable—you define it once, and then you can include it in several label policies assigned to different users.





159
Microsoft Purview
As you work with Data Map and Unified Catalog, keep these points in mind:

    All data in Data Map and Unified Catalog is metadata, not the underlying data itself.
    None of the permissions or roles in Data Map or Unified Catalog provide access to underlying data itself.





160
Microsoft Purview
You can configure your policies so that, when a DLP policy is triggered, email notifications are sent automatically, and policy tips are shown to admins and end users. Policy tips are useful ways to raise awareness of risky behaviors on sensitive items and train users to avoid those behaviors in the future.





161
Microsoft Purview
The Groups & sites scope becomes available and selected by default when you enable sensitivity labels for containers and synchronize labels. This option lets you protect content in SharePoint sites, Teams sites, and Loop workspaces by labeling those containers but doesn't label the items in them.





162
Microsoft Purview
Create the labels. Create and name your sensitivity labels according to your organization's classification taxonomy for different sensitivity levels of content. Use common names or terms that make sense to your users. You can then use sublabels to group similar labels by category.





163
Microsoft Purview
Federated governance provides a centralized place to develop data safety, quality, and standards, but provides tools to create self-service access control, discoverability, and maintenance.





164
Microsoft Purview
Steps to create a DLP policy
    Choose what you want to monitor
    Choose administrative scoping
    Choose where you want to monitor
    Choose the conditions that must be matched for a policy to be applied to an item
    Choose the action to take when the policy conditions are met





165
Azure Functions + PP365
host.json
A global configuration file for Azure Functions that defines settings applicable to all functions within a Function App. For Python developers, host.json can be used to configure logging, extensions, and other runtime behaviors, enabling centralized control over function execution.





166
Azure Functions + PP365
Function Proxies
A feature in Azure Functions that allows developers to create a façade over one or more functions or APIs. Function Proxies can manage routing, transformation, and composition of requests to Python Azure Functions, simplifying API management and enhancing security by abstracting backend services.





167
Azure Functions + PP365
Power Platform CLI
A command-line interface tool for managing Power Platform resources, including Power Apps, Power Automate, and Dataverse. The Power Platform CLI facilitates automation, scripting, and advanced management tasks, enabling developers and administrators to interact with the platform efficiently.





168
Azure Functions + PP365
OAuth 2.0 Authentication Flow
A sequence of steps in the OAuth 2.0 protocol where an application obtains an access token from an authorization server. This flow involves redirecting users for consent, exchanging authorization codes for tokens, and securely accessing protected resources using the obtained tokens, enabling secure delegation of access.





169
Azure Functions + PP365
Azure AD TokenRequestContext
A context object used in Azure AD token acquisition processes, specifying the scopes and resources for which an access token is requested. TokenRequestContext ensures that tokens are issued with the appropriate permissions and are valid for the intended resources, facilitating secure and targeted access in applications.





170
CCH Axcess
You can search for grid contents in several ways.
    Search. 
    Find. 
    Quick Search. Quick Search filters can be expanded on the Client Manager and Staff Manager navigation panels to search the entire system, not just the current grid contents, for client or staff criteria other than ID or name. See Using Quick Search for more information about this feature.





171
CCH Axcess
All client access groups with an assigned organizational unit the same as the organizational unit (office and business unit) of the client displays in the Client Access Group Assignments grid.





172
CCH Axcess
There are some grids in the client profile that allow selection of only one record at a time. For grids that allow selection of multiple records, the total number of selected records across all pages displays in the status bar.





173
CCH Axcess
The application menu contains the available actions for CCH AxcessTM product. The menu also provides access to user options and, if applicable, a list of recently accessed records. Click the X emblem in the upper left corner of the window to display the menu and view the available options.





174
CCH Axcess
Custom client types that are set up in Global Lists allow you to add client profile detail that is not limited to a specific tax product and can be used in the Tax system or for a purpose not related to tax returns.





175
CCH Axcess
Security groups with any level of rights can be created. Staff can be assigned to multiple security groups and have the cumulative rights granted in the various groups. Staff assigned to any group where a function is indicated as Never allow have no access to that function under any circumstance.





176
CCH Axcess
Templates are used to add new staff without having to repeatedly enter the same basic information. Enter default options in profile templates to decrease the time required to create staff. See Setting Up Staff Templates for more information.





177
CCH Axcess
Providing Access Through Staff Attributes
Granting access by organizational unit or position allows for less maintenance, but gives less precise control. Including or excluding some staff in various groups may be required. An advantage of granting access through attributes is that new staff or staff whose attributes change are automatically granted access according to their organizational unit or position.





178
CCH Axcess
Different Client Status values available:
    Active. Available in all modules for all activity.
    Inactive. Available for reporting only.
    On hold. Available in all areas.
    Litigation hold. On hold for litigation reasons and cannot be deleted.
    Terminated. Not available in lists and unavailable for activity.





179
CCH Axcess
Views define the columns and associated data that display in the Client Manager and Staff Manager grids. These grids display the existing records for the selected view that you have assigned rights to view. Column selection, sorting, and number of records per page preferences are retained on your machine for each view.





180
Terraform Codebox
Process segmentation fault (Segmentation fault (core dumped))
An error that occurs when a program tries to access memory it shouldn’t. Often caused by running a binary built for the wrong OS or architecture (e.g., FreeBSD binary on Linux).





181
Terraform Codebox
The templatefile() function loads a local file and injects variables, often used to populate dynamic scripts, like cloud-init.


hcl
templatefile("${path.module}/cloud-init.yaml.tpl", {
  share_name = var.share_name
})





182
Terraform Codebox
In a Terraform module, names like "main" or "this" are user-defined labels for a resource block. They are not reserved words — you can choose meaningful names to reference resources elsewhere in your config.


hcl
resource "azurerm_storage_account" "this" { ... }
# Reference: azurerm_storage_account.this.name





183
Terraform Codebox
tar -xzf
A Unix command to extract .tar.gz (gzip-compressed tarballs). The flags mean x (extract), z (decompress), and f (use file). Commonly used to install binary packages like the Exercism CLI.





184
Terraform Codebox
journalctl
A log viewing tool used to inspect logs generated by systemd services. For example, journalctl -xe shows the latest system events — useful for debugging issues like failed mounts or cloud-init errors.





185
Terraform Codebox
Azure Files can be used to persist your coding workspace outside the lifecycle of a virtual machine. It is mounted via SMB on the VM, and can be referenced in Terraform using azurerm_storage_share.


bash
mount -t cifs //<storage_account>.file.core.windows.net/<share> /mnt/exercism ...





186
Terraform Codebox
Terraform allows you to target specific parts of your infrastructure using -target. This makes it possible to destroy or apply only a specific module like a VM while keeping persistent resources like storage intact.


bash
terraform destroy -target=module.ephemeral





187
Terraform Codebox
Terraform Registry is where official and community-built modules live. You can browse or install modules like Azure/network/azurerm to save time.

Site: https://registry.terraform.io/





188
Terraform Codebox
fallocate -l
A Linux command used to create a file of a specified size efficiently without actually writing data. Used to quickly set up a swap file or allocate disk space for testing.





189
Terraform Codebox
In Terraform, modules are reusable components that group resources together. You call them from the root module and pass in variables. Modules don't run independently; they're included via the module block in your main configuration.


hcl
module "vm" {
  source = "./modules/ephemeral"
  vm_name = "dev-vm"
}





190
Terraform Codebox
Shebang (#!/bin/bash)
The first line in many shell scripts, it tells the system which interpreter to use (e.g., bash). Required in cloud-init scripts if you’re writing inline scripts to ensure consistent behavior.





191
Terraform Codebox
Cloud-init is a standard way to initialize Linux VMs. Azure reads the custom_data field during VM provisioning and runs your script on first boot.





192
Terraform Codebox
.gitignore is used to tell Git which files or folders not to track. In Terraform projects, this prevents large or sensitive files like .terraform/ and .tfstate from being added accidentally.


markdown
.terraform/
*.tfstate
*.tfstate.*





193
Terraform Codebox
Systemd unit files (*.service)
Configuration files that define how a service should start, stop, and behave under systemd. Services like snapd, cloud-init, or ssh rely on these for lifecycle management on modern Linux distros.





194
Terraform Codebox
corepack enable
A command that activates Corepack globally on your system, allowing it to manage alternative Node.js package managers (like pnpm or yarn) using project-defined configuration.





195
Terraform Codebox
SSH keys are used to securely authenticate to a VM. Terraform expects you to pass the public key path and inject it into the VM at creation, enabling key-based access instead of passwords.

Example in variables.tf:

hcl
variable "ssh_public_key_path" {
  default = "~/.ssh/id_rsa.pub"
}





196
Terraform Codebox
runuser vs sudo vs su

sudo: Run a command as another user (usually root) with elevated privileges.

su: Switches to another user session entirely.

runuser: Preferred in scripts and cloud-init to run a single command as another user without opening a full session.





197
Power BI
Q: What is the typical Power BI Service behavior when you define an Incremental Refresh policy but deploy to a Pro workspace?
A: The service ignores the policy and performs a full‐table refresh each time, without partitioning.





198
Power BI
Q: Why might switching to the Dataverse (OData/CDS) connector improve performance over the SQL connector?
A: The Dataverse connector is designed to leverage server‐side paging and API optimizations, often preserving query folding more reliably and avoiding TDS‐related throttling.





199
Power BI
Q: What is VertiPaq and why is it relevant when appending tables?
A: VertiPaq is Power BI’s in‐memory columnar engine. When appending tables with identical schemas, VertiPaq compresses and merges columns efficiently, making the in‐memory append step very fast.





200
Power BI
Q: Why might a table visual in Power BI show fewer rows than exist in the dataset even if the data model has all rows?
A: Large table visuals can hit rendering timeouts or be partially truncated. Use Performance Analyzer to see if the DAX query or visual rendering is timing out.





201
Power BI
Q: What tool in Power BI Desktop lets you see which query steps are folding, how long each step takes, and row counts?
A: Query Diagnostics (in Power Query Editor → Tools → Start Diagnostics / Stop Diagnostics).





202
Power BI
Why might SUMMARIZECOLUMNS yield better performance than SUMMARIZE?
The Tabular engine has built-in optimizations for SUMMARIZECOLUMNS that reduce temporary table materializations and merge identical aggregations, resulting in faster query plans, especially on large fact tables.





203
Power BI
What pattern lets you reference intermediate calculations by name when building a calculated table?
Use a two-step ADDCOLUMNS approach: first add your intermediate columns, then in a second ADDCOLUMNS call reference those names to compute further results (for example, percentages).





204
Power BI
Q: How can Aggregations in Power BI speed up queries on large fact tables?
    A:

    Define a summarized (aggregated) table at a higher grain (e.g., daily sales totals) and point visuals to it for common queries.

    The engine stores both the detailed and aggregated tables; for queries that can be satisfied by the aggregate, Power BI never scans the full fact table, reducing query time dramatically.





205
Power BI
Q: What are the two main components of query execution time when pulling data via SQL?
A: Fixed costs (connection setup, query plan, authentication, network latency) and variable costs (reading/transmitting each row). Reducing row count cuts the variable portion.





206
Power BI
Q: How can using the “Enable Load of Related Entities” option in the Dataverse connector improve performance?
    A:

    This option, in the Dataverse (OData) connector, fetches related lookup or option‐set tables alongside the main entity in one API call.

    Reduces the number of round trips, preserves folding, and can significantly cut down on refresh time compared to separately querying each related table.





207
Power BI
How does ALLEXCEPT work in a measure?
ALLEXCEPT(table, column1, …) removes all filters on the specified table except those on the listed columns. It’s used inside CALCULATE to preserve only certain filters (for example, keep EngagementID but ignore Task Category).





208
Pandas
How can you apply multiple aggregation functions after resampling in Pandas?

You can apply functions like sum(), mean(), max(), etc., after resampling.

    Example:
df.resample('M').agg({'value': ['sum', 'mean']})





209
Azure Files Documentation
Metadata caching is an enhancement for SSD Azure file shares that reduces metadata latency and raises metadata scale limits. The feature increases latency consistency and available IOPS, and it boosts network throughput.





210
Azure Files Documentation
Microsoft Entra Domain Services

Microsoft Entra Domain Services provides managed domain services such as domain join, group policies, LDAP, and Kerberos/NTLM authentication. These services are fully compatible with Active Directory Domain Services. For more information, see Microsoft Entra Domain Services.





211
Azure Files Documentation
For Microsoft Entra Domain Services authentication, you must enable Microsoft Entra Domain Services and domain-join the VMs you plan to access file data from. Your domain-joined VM must reside in the same VNET as your Microsoft Entra Domain Services hosted domain.





212
Azure Files Documentation
Enabling AD DS authentication for your Azure file shares allows you to authenticate to your Azure file shares with your on-premises AD DS credentials. Further, it allows you to better manage your permissions to allow granular access control.





213
Azure Files Documentation
If your OU containing the storage account's computer account enforces password expiration, you must update the password before the maximum password age to prevent authentication failures when accessing Azure file shares. See Update the password of your storage account identity in AD for details.





214
Azure Files Documentation
SMB Multichannel enables an SMB client to establish multiple network connections to an SMB file share. Azure Files supports SMB Multichannel on SSD file shares for Windows clients. On the service side, SMB Multichannel is now enabled by default for all newly created storage accounts in all Azure regions. There's no extra cost for enabling SMB Multichannel.





215
Azure Files Documentation
On-premises Active Directory Domain Services (AD DS)

AD DS is commonly adopted by enterprises in on-premises environments or on cloud-hosted VMs, and AD DS credentials are used for access control. For more information, see Active Directory Domain Services Overview.





216
Azure Files Documentation
To enable AD DS authentication over SMB for Azure file shares, you need to register your Azure storage account with your on-premises AD DS and then set the required domain properties on the storage account. To register your storage account with AD DS, you create a computer account (or service logon account) representing it in your AD DS.





217
Azure Files Documentation
If a machine isn't domain joined, you can still use AD DS for authentication if the machine has unimpeded network connectivity to the on-premises AD domain controller and the user provides explicit credentials. For more information, see Mount the file share from a non-domain-joined VM or a VM joined to a different AD domain.





218
Azure Files Documentation
By default access is limited to the Active Directory forest where the storage account is registered. Users from any domain in that forest can access the file share contents, provided they have the appropriate permissions.





219
Azure Files Documentation
To assign share-level RBAC permissions to specific users or groups, on-premises AD DS identities must be synced to Microsoft Entra ID using Entra Connect Sync. If identities aren't synced, you must use a default share-level permission, which applies to all authenticated users





220
Python + Oauth2.0
urllib.parse.unquote()

Decodes percent-encoded characters in a URL. Used here to clean up the authorization code received from the redirect.





221
Python + Oauth2.0
OAuthHandler (Custom HTTP Request Handler)

A subclass of `http.server.SimpleHTTPRequestHandler` that overrides the `do_GET` method to process incoming HTTP requests. It extracts the authorization code from the URL and initiates the token exchange process.





222
Python + Oauth2.0
do_GET()

A method in `SimpleHTTPRequestHandler` that is automatically called when the server receives a GET request. You override this method to define custom behavior, such as parsing the URL and responding with HTML or triggering logic like token exchange.





223
Python + Oauth2.0
handle_request()

A method of `TCPServer` that waits for a single incoming request and then processes it using the specified handler class. It’s used here to catch the OAuth redirect containing the authorization code.





224
Python + Oauth2.0
auth_request_url

The full URL constructed from `authorize_url` and query parameters like `client_id`, `redirect_uri`, and `scope`. This is the link opened in the browser to start the OAuth flow.





225
Python + Oauth2.0
socketserver.TCPServer

A Python class that creates a simple TCP server. In this script, it listens on `localhost:8080` and uses `OAuthHandler` to handle incoming requests. The server runs inside a context manager to ensure it shuts down cleanly after handling one request.





226
Python + Oauth2.0
requests.post

Sends an HTTP POST request to the token endpoint with the authorization code and client credentials. If successful, it returns a JSON object containing the access token and other OAuth metadata.





227
Python + Oauth2.0
with socketserver.TCPServer(...) as httpd

A context manager that ensures the server is properly started and shut down. It simplifies cleanup and avoids leaving open sockets after the request is handled.





228
pfSense
SOHO stands for Small Office and Home Office Networks. It allows computers in a home office or remote office to connect to a corporate network, or access centralized, shared resources. It is a LAN (local area network) mainly referred to as a business category involving a small number of workers usually from 01 to 10.





229
pfSense
In networking, A DMZ is an area where public servers are reachable from the Internet via the WAN but isolated from the LAN. The DMZ keeps the systems in other segments from being endangered if the network is compromised, while also protecting hosts in the DMZ from other local segments and the Internet in general.





230
pfSense
Netgate offers an automatic configuration backup service, known as Auto Config Backup or ACB, which is free for anyone to use.

When pfSense software makes a backup via ACB, either automatically or manually, it encrypts the config.xml configuration file using AES-256 and a key provided by the administrator with options suitable for file encryption.





231
pfSense
pfSense software also transmits a unique and random “device key” to privately identify which backups belong to a given installation.

This device key must be unique to each firewall backing up its configuration. To do this the key is automatically generated by taking the SHA256 hash of the SSH service keys on the installation. This allows ACB to reliably and properly identify ownership of each backup in an anonymous way.





232
Accounting
Current Ratio
Liquidity ratio = Current Assets ÷ Current Liabilities. Shows ability to pay short-term obligations.





233
Accounting
Deferral
Delay recognition of revenue or expense to a later period. Example: prepaid rent (asset) or unearned revenue (liability).





234
Accounting
Journal Entry
The basic transaction record showing debits and credits across accounts.





235
Accounting
Statement of Cash Flows
Financial statement reporting cash activity in Operating, Investing, and Financing categories.





236
Accounting
Audit Trail
Evidence showing how a transaction was recorded, modified, and reported. Critical for compliance and system integrity.





237
Accounting
Allowance Method for Doubtful Accounts
Estimates bad debts in advance by setting up a contra-asset account (Allowance for Doubtful Accounts). Matches bad debt expense with related sales.





238
The Starless Crown, Rollins
Gaol (jayl)
noun
An older British spelling of “jail,” meaning a place of confinement for prisoners.
Example: The thief was taken to gaol to await his trial.





239
The Starless Crown, Rollins
Larcener (LAR-suh-ner)
noun
A person who commits larceny; a thief.
Example: The larcener vanished into the crowd before the guards could catch him.





240
The Starless Crown, Rollins
Bedlam (BED-lum)
noun
Wild uproar and confusion; originally, a shortened name for a London asylum.
Example: The marketplace was bedlam when the news spread.





241
The Starless Crown, Rollins
Deride (deh-RIDE)
verb
To mock or ridicule someone or something.
Example: The critics derided his early work as childish and crude.





242
The Starless Crown, Rollins
Habiliment (huh-BIL-ih-ment)
noun
Clothing or attire, especially those suited to a particular role or occasion.
Example: The knight’s habiliments gleamed beneath the torchlight.





243
The Starless Crown, Rollins
Scud of clouds (skuhd uhv klowdz)
noun phrase
Low, fast-moving clouds driven by wind; figuratively, fleeting or restless motion.
Example: A scud of clouds raced across the moonlit sky.





244
The Starless Crown, Rollins
Bole of a tree (bohl)

The trunk or main stem of a tree.
Example: Moss climbed the bole of the oak like green velvet.





245
The Starless Crown, Rollins
Orrery (OR-uh-ree)
noun
A mechanical model of the solar system showing the relative motions of planets and moons.
Example: The brass orrery on his desk traced the slow orbit of Saturn around the sun.





246
The Starless Crown, Rollins
Macerated (MAS-uh-ray-ted)
verb (past participle)
Soaked or softened by liquid until broken down; figuratively, weakened or wasted away.
Example: The fruit was macerated in sugar overnight for the dessert.





247
OAuth 2.0 RFC6749
OAuth defines four roles:

   resource owner
   resource server
   client

   authorization server
      The server issuing access tokens to the client after successfully
      authenticating the resource owner and obtaining authorization.





248
OAuth 2.0 RFC6749
In OAuth, the client requests access to resources controlled
   by the resource owner and hosted by the resource server, and is
   issued a different set of credentials than those of the resource
   owner.





249
OAuth 2.0 RFC6749
An authorization grant is a credential representing the resource
   owner's authorization (to access its protected resources) used by the
   client to obtain an access token.  This specification defines four
   grant types -- authorization code, implicit, resource owner password
   credentials, and client credentials -- as well as an extensibility
   mechanism for defining additional types.





250
OAuth 2.0 RFC6749
OAuth defines four roles:

   resource owner
   resource server

   client
      An application making protected resource requests on behalf of the
      resource owner and with its authorization.  The term "client" does
      not imply any particular implementation characteristics (e.g.,
      whether the application executes on a server, a desktop, or other
      devices).

   authorization server





251
Azure Developer Associate
Q: In Azure Storage, which feature allows revoking SAS tokens without rotating keys?
A: Stored access policy





252
Azure Developer Associate
App Configuration doesn't version key values automatically as they're modified. Use labels as a way to create multiple versions of a key value. For example, you can input an application version number or a Git commit ID in labels to identify key values associated with a particular software build.





253
Azure Developer Associate
Application Object vs. Service Principal

The Application Object is the blueprint — one definition in the home tenant.
The Service Principal is the instance — one per tenant that actually uses the app.
So a multi-tenant app = 1 app object, many service principals.
App object = design; service principal = deployed copy with its own roles, policies, and permissions.





254
Azure Developer Associate
Lease Container (Cosmos DB Change Feed)

The Lease Container is where Azure Cosmos DB tracks which client is processing which partition in the Change Feed.
Each processor updates its lease document as it reads changes, so other processors don’t duplicate the same work.
Think of it as a shared to-do list where each worker signs their name on the chunks they’re handling. Lose the lease, lose your checkpoint.





255
Python
Q:
How can you define a custom exception in Python?

A:
By creating a new class that inherits from the built-in Exception class.
Example:
class MyCustomError(Exception):
    pass





256
Python
Which pathlib method can be used to iterate recursively through all files matching a pattern?

for file in Path('/path/to/directory').rglob('*.txt'):
    print(file)





257
Python
Q:
What is the advantage of using context managers for resource management?

A:
They ensure that resources are properly acquired and released, even if errors occur, promoting cleaner and more reliable code.





258
Python
Q:
What method is used to gracefully terminate a generator?

A:
The .close() method.





259
Python
Q:
What are the two essential methods that an iterator class must implement?

A:
__iter__() and __next__().





260
Python
Q:
What method can be used to send a value into a generator, allowing it to receive data?

A:
The .send(value) method.





261
Python
Q:
Which Python module provides an object-oriented approach to handling filesystem paths?

A:
pathlib





262
Python
Q:
How can you add a dynamic description to a tqdm progress bar?

A:
By using the desc parameter when initializing the progress bar.

Example:
from tqdm import tqdm
for i in tqdm(range(100), desc='Processing'):
    pass





263
Python
Q:
How can you raise an exception inside a generator from outside?

A:
Using the .throw(type, value=None, traceback=None) method.





264
Python
Q:
How can you iterate over all files in a directory (non-recursively) using pathlib?

A:
Using the .iterdir() method.

Example:
for file in Path('/path/to/directory').iterdir():
    if file.is_file():
        print(file)





265
Python
Q:
What does the .stem attribute of a Path object return?

A:
The filename without its suffix.

Example:
path = Path('/path/to/file.txt')
print(path.stem)  # Output: 'file'





266
Python
Q:
Explain the difference between except Exception as e and except (ValueError, TypeError) as e.

A:
except Exception as e catches all exceptions that inherit from Exception, while except (ValueError, TypeError) as e only catches ValueError and TypeError exceptions.





267
Python
Q:
What keyword is used to define an asynchronous generator function in Python?

A:
async def





268
Python
Q:
How does the os.walk() function handle permission errors by default?

A:
It can be configured to print an error message and continue by using the onerror parameter.





269
Python
How can you add an optional argument with a default value using argparse?

A:
By specifying the argument name with -- and providing the default parameter.

Example:
parser.add_argument('--verbose', action='store_true', default=False, help='Enable verbose output')





270
Python
Q:
How do you iterate over an asynchronous generator?

A:
Using async for.

Example:
async def async_gen():
    yield 1
    yield 2

async def main():
    async for value in async_gen():
        print(value)





271
Python
Q:
What does itertools.islice() do?

A:
It creates an iterator that returns selected elements from the input iterable by specifying start, stop, and step indices.





272
Python
Q:
How can you check if a Path object points to a symbolic link?

A:
Using the .is_symlink() method.

Example:
path = Path('/path/to/symlink')
if path.is_symlink():
    print("It's a symbolic link.")





273
FSLogix
All data written to the user's profile is temporarily stored as block-level cache objects in the same directory. Those block-level cache objects are then committed to the local cache. Before the block-level cache objects are created, the writes into the user's profile are processed in memory through a proxy file.





274
FSLogix
VHD/VHDX:
Virtual hard disk file formats used by FSLogix Profile Containers to store user profiles. They are optimized for efficient I/O operations and are crucial for fast loading times in virtual environments.





275
FSLogix
Q: Where are FSLogix Profile Containers typically stored in Azure Virtual Desktop environments?
A: FSLogix Profile Containers are typically stored in Azure Files or network shares (SMB share) to allow consistent access across different virtual desktop sessions.





276
FSLogix
Q: Which format does FSLogix use to store user profile data?
A: FSLogix uses the VHDX (Virtual Hard Disk) format to store user profile data in containers.





277
FSLogix
Q: What is the main difference between FSLogix Profile Containers and traditional roaming profiles?
A: FSLogix uses VHDX containers to store user profiles, ensuring portability and faster logons, while traditional roaming profiles can become fragmented and inconsistent across multiple virtual machines.





278
FSLogix
Multi-Session Environment:
A setup where multiple users share the same operating system instance (typical of RDS and multi-session AVD deployments). This environment requires special considerations—such as the use of a Redirector Driver—to handle concurrent access and prevent file locking issues.





279
Asynchronous Python
asyncio.wait_for()
Runs a coroutine with a timeout in Python; raises TimeoutError if the coroutine doesn’t finish in time.





280
Asynchronous Python
Thread Safety
Thread safety means that code or data structures function correctly when accessed by multiple threads simultaneously, usually achieved with proper synchronization.





281
Asynchronous Python
async
A keyword used in Python to declare an asynchronous function (async def), enabling the use of await inside it.





282
Asynchronous Python
Blocking Code
Code like time.sleep() that halts the event loop and prevents other asynchronous Python tasks from running—should be avoided.





283
Asynchronous Python
Cooperative Multitasking
The async model in Python where tasks yield control voluntarily (e.g., via await) instead of being preempted.





284
Asynchronous Python
Lock (Mutex)
A lock is a synchronization primitive used to control access to a shared resource, ensuring that only one thread can access a specific block of code at a time.





285
Asynchronous Python
Idle Task
An asynchronous Python coroutine that’s currently waiting (e.g., on I/O or sleep), allowing others to run in the meantime.





286
Asynchronous Python
Task
A wrapper around a coroutine in Python’s asyncio that is managed by the event loop and can be cancelled, awaited, or monitored.





287
Asynchronous Python
Global Interpreter Lock (GIL)
The GIL is a mutex in CPython that ensures only one thread executes Python bytecode at a time, affecting true parallel execution of threads.





288
Vocab
Well of Lost Plots, Fforde
Eminence grise
noun | EM-uh-nence GREEZ
A powerful advisor or decision-maker working behind the scenes.
Example: Although never elected, the minister’s chief of staff was the real eminence grise.





289
Vocab
Well of Lost Plots, Fforde
The Decameron
noun | the deh-KAM-er-on
A 14th-century collection of 100 novellas by Giovanni Boccaccio, framed as stories told by ten people sheltering from the Black Death.
Example: The Decameron opens with its narrators deciding to entertain themselves with tales during the plague.





290
Vocab
How to Sell a Haunted House, Hendrix
Codicil
Pronunciation: KOH-duh-sil
Definition: A legal document that modifies, explains, or adds to a previously executed will without replacing it entirely.





291
Vocab
Something Rotten, Fforde
Paella
noun | pah-AY-yuh
A Spanish rice dish originally from Valencia, typically made with seafood, meat, and vegetables.
Example: We shared a large pan of seafood paella by the beach.





292
Vocab
Something Rotten, Fforde
Rusk
noun | RUSK
A dry, hard biscuit or twice-baked bread, often used for teething babies or in soups.
Example: She dipped a rusk into her tea for a quick snack.





293
Vocab
How to Sell a Haunted House, Hendrix
Stollen (bread)
Pronunciation: SHTOH-luhn
Definition: A traditional German fruit bread containing dried fruits, nuts, and spices, often dusted with powdered sugar and associated with Christmas festivities.





294
Vocab
Something Rotten, Fforde
Buddleia
noun | BUD-lee-uh
A flowering shrub, also known as the butterfly bush, popular for attracting pollinators.
Example: The garden was full of buddleia, drawing in bees and butterflies.





295
Vocab
Something Rotten, Fforde
Timpet
noun | TIM-pet
archaic term, possibly a variant of “timpet” meaning a small hill or mound (usage rare or regional).
Example: The sheep grazed peacefully on the grassy timpet.





296
Vocab
Jingo, Pratchett
Effendi
noun | eh-FEN-dee
A title of respect or courtesy for a man, especially in Turkey or formerly in the Ottoman Empire.
Example: The effendi greeted us warmly as we entered his home.





297
Vocab
Jingo, Pratchett
Rotas
noun (plural) | ROH-tuhs
Schedules or lists showing when people are assigned to particular duties or tasks, especially in British English.
Example: The hospital staff checked the rotas to see who was on night duty.





298
Vocab
Well of Lost Plots, Fforde
Panoply
noun | PAN-uh-plee

A full suit of armor.

A complete or splendid array of something.
Example: The museum’s exhibit displayed a panoply of medieval weaponry.





299
Vocab
Jingo, Pratchett
Cornice
noun | KOR-nis
A decorative molding that crowns a building or furniture element, often found where the wall meets the ceiling.
Example: The ornate cornice added elegance to the room’s architecture.





300
Vocab
Something Rotten, Fforde
De rigueur
adjective | duh ree-GUR
Required by etiquette or current fashion; socially obligatory.
Example: Wearing black tie was de rigueur at the gala.





301
Vocab
How to Sell a Haunted House, Hendrix
Truckle
Pronunciation: TRUHK-uhl
Definition: To act in a subservient or groveling manner, often to gain favor or avoid punishment; can also refer to a small wheel of cheese.





302
Vocab
Well of Lost Plots, Fforde
Gerund
noun | JER-und
A verb form ending in -ing that functions as a noun.
Example: In the sentence “Swimming is fun,” swimming is a gerund.





303
Vocab
Something Rotten, Fforde
Zane Grey

An American author known for popularizing the Western genre in the early 20th century. Best Known for Riders of the Purple Sage (1912).
Example: Zane Grey’s novels helped define the mythic American frontier.





304
PnP PowerShell
Invoke-RestMethod Parameters
Key parameters include -Method (HTTP method), -Uri (API endpoint), -Headers (authentication and content type), and -Body (data payload), crucial for API interactions.





305
PnP PowerShell
PowerShell Pipeline
A feature that allows the output of one cmdlet to be passed as input to another cmdlet. Enables chaining commands for efficient data processing.





306
PnP PowerShell
REST API Endpoints
Specific URLs used to access SharePoint resources via REST API. Includes paths for sites, lists, libraries, and items, enabling targeted operations.





307
PnP PowerShell
SharePoint Site URL
The web address of a SharePoint site (e.g., https://accuityllp.sharepoint.com/sites/ASB), serving as the entry point for accessing site resources and APIs.





308
PnP PowerShell
Invoke-WebRequest Parameters (Microsoft.PowerShell.Utility)
Includes -Method, -Uri, -Headers, -Body, and others. Facilitates detailed HTTP request configurations for interacting with web services.





309
PnP PowerShell
App-Only Authentication
A mode where applications authenticate without a user context, using client credentials to perform operations based on granted permissions. Suitable for automated scripts and services.





310
PnP PowerShell
Client Secret (client_secret)
A confidential key associated with an Azure AD application, used alongside the client ID to authenticate the application in secure authentication flows.





311
PnP PowerShell
PSCredential (Microsoft.PowerShell.Security)
A PowerShell object that securely stores a username and password. Utilized for authentication purposes, ensuring sensitive information is handled safely.





312
PnP PowerShell
ConvertTo-SecureString (Microsoft.PowerShell.Security)
Transforms plain text into a secure string object in PowerShell. Essential for handling sensitive data like passwords and client secrets securely.





313
PnP PowerShell
API Rate Limits
Restrictions on the number of API calls an application can make within a specific timeframe. Requires managing request rates to avoid exceeding limits and facing throttling.





314
PnP PowerShell
Grant-PnPAzureADAppPermission (PnP.PowerShell)
Grants specific API permissions to an Azure AD application directly from PowerShell. Streamlines the permission assignment process for SharePoint access.





315
PnP PowerShell
Remove-PnPField (PnP.PowerShell)
Deletes a field from a SharePoint list or library. Useful for cleaning up unused or outdated columns programmatically.





316
PnP PowerShell
OAuth 2.0 Authorization Code Flow
An interactive authentication method involving user login and authorization, suitable for applications that can securely handle client secrets and require delegated permissions.





317
VMWare
ESXi Shell

A command-line interface (CLI) used to manage and troubleshoot VMware ESXi hosts. The ESXi Shell allows administrators to run shell commands directly on the ESXi host for tasks like system configuration, troubleshooting, and diagnostics.





318
VMWare
Type 2 Hypervisor

A hypervisor that runs on top of an existing host operating system, using the OS for resource management. Examples: VMware Workstation, Oracle VirtualBox.





319
VMWare
vSphere

VMware's suite of products for virtualization, including vCenter Server, ESXi, vMotion, and more, used to create and manage virtualized data centers.





320
VMWare
vCenter Server Appliance (VCSA)

A Linux-based virtual appliance version of vCenter Server, which is optimized for VMware environments. The VCSA is a lightweight, pre-configured appliance designed to simplify deployment and management of vCenter Server without needing a Windows server.





321
VMWare
vSphere HA Agent

A software agent installed on each ESXi host in a vSphere Cluster to enable High Availability (HA). The HA agent monitors the health of the host and communicates with other hosts to restart VMs automatically in the event of a host failure.





322
VMWare
Virtual Machine Snapshot

A point-in-time copy of the state, data, and configuration of a virtual machine. Snapshots allow for the restoration of the VM to a previous state, which is useful for testing, troubleshooting, or backup purposes.





323
VMWare
Distributed Resource Scheduler (DRS)

A feature of VMware vSphere that automatically balances workloads across ESXi hosts in a cluster, ensuring optimal resource usage.





324
VMWare
vSphere Distributed Switch (vDS)

A virtual switch that allows the central management of network configurations across multiple ESXi hosts. A vDS provides enhanced features like port mirroring, private VLANs, and traffic shaping for advanced network management in VMware environments.





325
VMWare
vMotion Network

A dedicated network connection used for transferring virtual machine memory and CPU state during a vMotion migration. This network should be optimized for high throughput and low latency to ensure smooth VM migration without performance degradation.





326
VMWare
vCenter Server

VMware's centralized management platform for multiple ESXi hosts and their associated virtual machines, used for configurations, monitoring, and management tasks.





327
VMWare
Storage I/O Control (SIOC)

A feature in VMware vSphere that manages storage I/O requests to ensure that all virtual machines receive fair access to storage resources. It helps avoid I/O contention by controlling the bandwidth allocated to different VMs when accessing shared storage.





328
VMWare
vSphere Client

A graphical user interface (GUI) tool used to manage and configure VMware ESXi hosts and virtual machines. The vSphere Client connects to vCenter Server to manage multiple ESXi hosts and provides an easy interface for monitoring, configuration, and troubleshooting tasks.





329
JavaScript Concepts
When ... appears on the right-hand side of an assignment, it's known as the spread operator. It expands an array into a list of elements. Unlike the rest element, it can appear anywhere in an array literal expression, and there can be more than one.

    const oneToFive = [1, 2, 3, 4, 5];
    const oneToTen = [...oneToFive, 6, 7, 8, 9, 10];
    oneToTen;
    // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]





330
JavaScript Concepts
Server-Side Rendering (SSR): Rendering web pages on the server before sending them to the client, improving performance and SEO.





331
JavaScript Concepts
Callback
A function passed as an argument to be invoked later, once some operation completes.

  fs.readFile("file.txt", (err, data) => {
    if (err) throw err;
    console.log(data);
  });





332
JavaScript Concepts
A callback function is a function that is passed as an argument to another function and is executed after some operation has been completed. This allows for more flexible and modular code, especially when dealing with asynchronous operations.





333
JavaScript Concepts
Bracket Notation: You can also use bracket notation, which is useful when the property name is dynamically determined.

const obj = { key1: "value1", key2: "value2" };
obj["key3"] = "value3"; // Adds key3 with value3





334
JavaScript Concepts
Front: What are the benefits of using callback functions?

Back:
Flexibility: Allows functions to be more modular and reusable.
Asynchronous Handling: Enables handling of asynchronous operations like network requests and timers.
Improved Code Organization: Helps in organizing code by separating concerns and improving readability.

192
Azure Compute Gallery
Ephemeral OS Disk – A temporary VM disk that cannot be used with ACG images.





335
JavaScript Concepts
Front: How do you create multiline strings using string templates?
Back: String templates allow for multiline strings without the need for concatenation or escape characters.
  const multiline = `This is a string
  that spans multiple
  lines.`;
  console.log(multiline);





336
JavaScript Concepts
npm (Node Package Manager): The default package manager for Node.js, used to install, share, and manage JavaScript packages and dependencies.





337
JavaScript Concepts
Dot Notation: You can add a new key-value pair to an object using dot notation. This is useful when you know the name of the property.

const obj = { key1: "value1", key2: "value2" };
obj.key3 = "value3"; // Adds key3 with value3





338
JavaScript Concepts
For arrays, the String function will apply the string conversion for each element and join the results with a comma. You can also apply the join method yourself, e.g. to customize the separator. Note that in these cases null and undefined will be converted to an empty string.

String([42, null, true, 'abc']);
// => '42,,true,abc'





339
JavaScript Concepts
Front: Can you nest string templates within each other?
Back: Yes, you can nest string templates within each other.
  const name = 'Jay';
  const nestedTemplate = `Hello, ${`dear ${name}`}!`;
  console.log(nestedTemplate); // Output: Hello, dear Jay!





340
JavaScript Concepts
Front: How do you access the raw string content of a template literal?

197
Azure Private DNS
DNS Zones Delegation
Definition: The process of delegating authority for a DNS zone to another DNS server.
Feature: Delegation in Azure enables hybrid DNS setups and can be used to delegate the management of specific domains within your DNS infrastructure.





341
JavaScript Concepts
Built-In Methods: JavaScript objects come with built-in methods like Object.keys(), Object.values(), and Object.entries() which allow you to interact with the object's properties in various ways4.





342
JavaScript Concepts
Unique Names: All JavaScript variables must be identified with unique names, called identifiers. These names can be short (like x and y) or more descriptive (like age, sum, totalVolume). Identifiers can contain letters, digits, underscores, and dollar signs, but they must begin with a letter, underscore, or dollar sign1.





343
JavaScript Concepts
Promises: Objects representing the eventual completion or failure of asynchronous operations, allowing chaining with .then() and .catch().





344
JavaScript Concepts
TypeScript: A superset of JavaScript that adds static typing, enhancing code quality, maintainability, and developer tooling through type checking.





345
JavaScript Concepts
MDN Web Docs: Comprehensive documentation for web technologies, including JavaScript, HTML, CSS, and various APIs.





346
JavaScript Concepts
Vue.js: A progressive framework for building user interfaces, known for its simplicity and flexibility, with features like directives and single-file components.





347
JavaScript Concepts
A LIFO (Last-In, First-Out) stack is a way of organizing data so that the most recently added item is the first one you remove. Think of it like a stack of plates:

  You push a plate onto the top of the stack.

  You pop a plate off the top of the stack.





348
JavaScript Concepts
Microtask Queue
Holds promise callbacks (.then, .catch, .finally) and process.nextTick in Node.js. Microtasks always run before the next macrotask.





349
JavaScript Concepts
.then() / .catch() / .finally()
Methods on a Promise to handle its resolution (.then), rejection (.catch), or run code regardless of outcome (.finally).





350
JavaScript Concepts
Array.fill([]) shares the same array reference
  new Array(3).fill([])  
  // → [ref, ref, ref]





351
JavaScript Concepts
Event Loop
The engine that coordinates execution: it pulls tasks from the call stack and various queues (macrotasks & microtasks), ensuring non‑blocking behavior.





352
JavaScript Concepts
await
Pauses execution of its enclosing async function until the given Promise settles, then returns its value (or throws its rejection).





353
JavaScript Concepts
async function
Declares a function whose body can use await and which always returns a Promise:

  async function foo() { … }





354
Terraform
At a large organization, your centralized operations team may get many repetitive infrastructure requests. You can use Terraform to build a "self-serve" infrastructure model that lets product teams manage their own infrastructure independently.





355
Terraform
Variable References:
Refer to variables using the var. prefix within interpolation expressions. For example:

${var.env}





356
Terraform
Debugging Tips:
Check Quotes: Ensure that you use double quotes for strings that require interpolation.
Use terraform validate: Run this command frequently to catch syntax issues early.
Review Variable References: Confirm that all variable references use the correct var. prefix.





357
TSQL
Self-Joins for Hierarchies:

Useful for comparing or relating data within the same table.
Effective for simple or fixed-level hierarchies; consider recursive CTEs for deep or variable hierarchies.





358
TSQL
Temporary Tables:

Created with a hash (#) prefix to hold intermediate results for complex or staged queries.





359
TSQL
COALESCE Function:

Returns the first non-null value from a list of expressions (e.g., COALESCE(ts_invoiceid, inv.ts_invoiceid)).





360
TSQL
Subqueries:

Queries nested within other queries (in SELECT, FROM, or WHERE clauses) to return single or multiple values.





361
TSQL
CASE Expressions:

Implements conditional logic within queries to create computed columns or flags (e.g., flagging which date or account source is used).





362
TSQL
Q: Why would you use COALESCE(a, b) in a SELECT statement?
A: It returns the first non-null value among its arguments. Useful for fallback values like choosing between custom and default rates.





363
TSQL
Column and Table Aliasing:

Use the AS keyword to rename columns and tables (e.g., ts_name AS ar_adjustment_name).
Consistent naming conventions (like using underscores) improve readability and maintenance.





364
TSQL
Table Variables:

Declared using DECLARE and used similarly to temporary tables, often for smaller data sets with a more limited scope.





365
Azure Compute Gallery
Replication Time Constraints – Image replication is not instantaneous and can take several minutes to hours.





366
Azure Compute Gallery
Manual VHD Upload – A process where you create a VHD file, upload it to Azure Storage, and convert it into an image.





367
Azure Compute Gallery
OS Disk Image – An image containing only the operating system and configurations.
Data Disk Image – A separate image that includes application and data disks but does not contain an OS.





368
Azure Compute Gallery
Cross-Subscription Sharing – ACG images can be shared with multiple subscriptions, but not across Azure AD tenants.





369
Azure Compute Gallery
VHD	Virtual Hard Disk
VM	Virtual Machine
IaC	Infrastructure as Code
CI/CD	Continuous Integration/Continuous Deployment
SemVer	Semantic Versioning





370
Azure Compute Gallery
Azure DevOps Pipelines for Image Deployment – A CI/CD workflow that automatically builds, tests, and publishes images.

const name = 'Jay';
const greeting = `Hello, ${name}!`;





371
Azure Compute Gallery
One Compute Gallery Per Subscription – ACG is bound to a single Azure subscription.





372
Azure Compute Gallery
Deployment Latency – The time required for a newly published image to become available for VM creation.





373
Azure Compute Gallery
Image Version Deletion – Permanent action that cannot be undone.





374
C# Basics
How is inheritance implemented in C#?

public class Dog : Animal {
    public void Bark() {
        Console.WriteLine("Dog barks");
    }
}





375
C# Basics
How do basic data types work in C#?

C#: Statically typed, types must be explicitly declared.
Example:
int x = 10;  
string y = "Hello";





376
C# Basics
How does asynchronous programming work in C#?

C#: Asynchronous programming is implemented using async and await.
Example:
public async Task<string> FetchData() {
    await Task.Delay(1000);
    return "Data fetched";
}





377
C# Basics
C#: Delegates are type-safe function pointers, allowing methods to be passed as parameters.
Example:
delegate void GreetDelegate();

GreetDelegate greet = () => Console.WriteLine("Hello!");
greet();





378
C# Basics
Reflection allows you to inspect the metadata of types (classes, properties, methods, etc.) at runtime.
Example:
var type = typeof(String);
Console.WriteLine(type.FullName);  // Output: System.String





379
C# Basics
What is LINQ in C# and how is it used?

C#:
LINQ (Language Integrated Query) is used to query collections in a declarative way.
Example:
var squares = from x in Enumerable.Range(0, 5) select x * x;





380
C# Basics
Tuples allow grouping multiple values into a single object without defining a class.
Example:
var person = (Name: "John", Age: 30);
Console.WriteLine(person.Name);  // Output: John





381
Azure VM + Developer
Linter
A code analysis tool that detects errors, bugs, and style violations before runtime; common examples include ESLint (JavaScript) and Pylint (Python).





382
Azure VM + Developer
Azure Policy
A governance tool that defines and enforces organizational rules on Azure resources, such as restricting VM sizes, locations, or blocking public IP assignments.





383
Azure VM + Developer
Build Tool
A program used to automate the compilation, packaging, and dependency resolution of a software project (e.g., `make`, `npm`, `dotnet build`, `gradle`).





384
Azure VM + Developer
Remote Development
A workflow where the code is executed and debugged on a remote machine (e.g., cloud VM), while edited locally through a tool like VS Code, keeping compute and environment remote.





385
Azure VM + Developer
SSH Config File
A local file (`~/.ssh/config`) used to define aliases and settings for SSH connections, making it easier to reuse hostnames, ports, and identities.





386
Azure VM + Developer
Language Server Protocol (LSP)
A communication protocol between an editor and a language-specific server that provides smart features like autocomplete, go-to-definition, and linting.





387
Azure VM + Developer
.ssh/known_hosts
A file used by SSH to store server fingerprints, preventing man-in-the-middle attacks by validating that the server hasn’t changed unexpectedly.





388
Azure VM + Developer
Dependency Management
The process of tracking and resolving software dependencies, ensuring your project uses compatible versions of external libraries.





389
Azure VM + Developer
Dotfiles
A collection of personal configuration files (e.g., `.bashrc`, `.gitconfig`, `.vimrc`) that define your shell, editor, and tool preferences across machines.





390
Azure VM + Developer
Pre-Commit Hook
A Git hook that runs scripts (e.g., formatters, tests) before committing code, helping catch issues early in the development workflow.





391
Azure DevOps Pipelines
What is the default trigger for a YAML-based pipeline in Azure DevOps?
Answer: A trigger based on code changes in a Git repository.





392
Azure DevOps Pipelines
How do you cache dependencies in Azure DevOps pipelines to speed up builds?
Answer: Use the cache task in the YAML file to store and reuse files between pipeline runs. This can help speed up build times by caching dependencies.





393
Microsoft Purview
Because a Sensitivity Label is stored in clear text in the metadata for files and emails, third-party apps and services can read it and then apply their own protective actions, if required.





394
Microsoft Purview
All DLP policies are created and maintained in the Microsoft Purview portal. See Create and Deploy data loss prevention policies for more information. 
After you create a DLP policy, it's stored in a central policy store and then synced to the various content sources.





395
Microsoft Purview
Data discovery is about ensuring users can find the data they need for day-to-day business and innovation.

Data health is about ensuring data quality standards are maintained across your estate, and having an active data lifecycle keeping your data fresh and secure.





396
Microsoft Purview
If your organization has implemented administrative units, you can scope your DLP policies by administrative unit or leave the scope default, which applies policies to the full directory. For more information, see Policy Scoping.





397
Microsoft Purview
Data access is about quickly providing the right access and enforcing the right use to balance safety and innovation.

Data curation is about organizing, annotating, and publishing your data so that it's safely accessible, reuseable, and protected.





398
Microsoft Purview
Define what each label can do. Configure the protection settings you want associated with each label. For example, you might want lower sensitivity content (such as a "General" label) to have just a header or footer applied, while higher sensitivity content (such as a "Confidential" label) should have a watermark and encryption.





399
Microsoft Purview
Microsoft Purview includes:
Sensitive information types 
Trainable classifiers to identify sensitive items by using examples of the data you're interested in rather than identifying elements in the item.
Data classification





400
Microsoft Purview
Members of your compliance team who will create and sensitivity labels need permissions to the Microsoft Purview portal. You can use the following role groups:

    Information Protection
    Information Protection Admins
    Information Protection Analysts
    Information Protection Investigators
    Information Protection Readers





401
Microsoft Purview
In a data loss prevention policy, you:

    Define the sensitive information you want to monitor for, like financial, health, medical, and privacy data.
    Where to monitor, like Microsoft 365 services or Windows and macOS devices.
    The conditions that must be matched for a policy to be applied to an item, like items containing credit card, driver's license, or social security numbers.
    The actions to take when a match is found, like audit, block the activity, and block the activity with override.





402
Microsoft Purview
To get started quickly, you might pick the preconfigured U.K. Financial Data policy template, which includes the Credit Card Number, EU Debit Card Number, and SWIFT Code sensitive information types.





403
Microsoft Purview
Microsoft Purview comes with preconfigured DLP templates for Financial, Medical and health, and Privacy policy templates. Additionally, you can build your own using the Custom template. As you design and create your actual DLP policies, having a working knowledge of the sensitive items you need to protect helps you choose the right sensitive information type.





404
Microsoft Purview
For files, emails, and meetings, but not for groups and sites, if a user tries to remove a label or replace it with a label that has a lower priority, by default the user must provide a justification to perform this action.





405
Microsoft Purview
You can view the last 30 days of DLP information in Activity Explorer using these preconfigured filters:

    Endpoint DLP activities
    Files containing sensitive info types
    Egress activities
    DLP policies that detected activities
    DLP policy rules that detected activities





406
Microsoft Purview
Governance domains: Governance domains are a new way of organizing your data estate through business concepts, like Marketing or Finance, providing context for your data assets. A governance domain is a boundary that enables the common governance, ownership, and discovery of data products and business concepts like glossary terms, OKRs, or critical data.





407
Microsoft Purview
For data officers and CxO stakeholders:
    Data value creation - maximize value creation from your data while reducing operations spend.
    Data estate standardization - create common controls across your data estate with federated accountability so your data is healthy and safe.





408
Microsoft Purview
A governance domain can house many data products but a data product is managed by a single governance domain and can be discovered across many domains.





409
Azure Functions + PP365
Dependency Management
The practice of managing external libraries and packages that a Python application relies on. In Azure Functions, managing dependencies through requirements.txt ensures that all necessary packages are installed and versioned correctly, maintaining consistency between development and production environments.





410
Azure Functions + PP365
Local Debugging
Running and testing Azure Functions on a local machine to identify and fix issues before deployment. Python developers use tools like Azure Functions Core Tools and VS Code to debug functions locally, allowing for rapid development and troubleshooting in a controlled environment.





411
Azure Functions + PP365
local.settings.json
A configuration file used during local development of Azure Functions. It stores environment variables, connection strings, and other settings required to run functions locally. This file is not deployed to Azure, ensuring that sensitive information remains secure during development.





412
Azure Functions + PP365
Azure Functions Extensions
Additional modules or packages that extend the capabilities of Azure Functions. For Python developers, extensions can provide support for integrating with other Azure services, enhancing bindings, and adding new triggers, enabling more complex and feature-rich serverless applications.





413
Azure Functions + PP365
XMLHttpRequest vs. Fetch API
Both are JavaScript APIs for making HTTP requests from web pages. XMLHttpRequest is older and more verbose, while the Fetch API is modern, promise-based, and provides a more streamlined approach to handling asynchronous requests, making it preferable for integrating custom scripts in Dynamics 365.





414
CCH Axcess
Grids are used to list and access items, such as clients and staff. Grid data can be manipulated in various ways. Some of the behaviors for managing grid data, such as Print, Export, and Find, follow Microsoft® standards. Additional grid components exist on the ribbon, right-click menu, and in the grid itself.





415
CCH Axcess
The sub-ID field displays only when the option to identify clients by both the main ID and the sub-ID is selected in Firm > Settings and defaults.





416
CCH Axcess
Enable AutoText descriptions
Allows you to create return and firm-level descriptions for fields that allow multiple entries, for example, fields for interest items or dividend items. The descriptions are then available for selection from the repeater fields in other areas of the return.





417
CCH Axcess
To launch the Data Migration Utility, click Utilities under Firm on the Application Links window in Dashboard, and then click Migrate data.





418
CCH Axcess
Enter a client or staff ID, or a client or staff name in the Search box above the grid. Enter the complete criteria to search for specific records or partial information to search for similar matches.

    Name refers to the sort name saved in the client or staff profile.
    You can search for the client ID and sub ID by adding periods to the search string. For example, find client ID 123 with sub ID 001 by entering 123.001 in the Search box.





419
CCH Axcess
You can search for grid contents in several ways.
    Search. The Search box immediately above the grid is used to search the entire system, not just the current grid contents, by client or staff name or ID. This feature refreshes the grid, displaying only the records that match your search criteria.
    Find. 
    Quick Search.





420
CCH Axcess
For tax filing purposes, sole proprietors should be added as an Individual client type. Sole Proprietorship is not an accepted client type in Tax.





421
CCH Axcess
The Export Grid option exports up to 20,000 records from all pages of the Client Manager Quick Search results. For the Staff Manager Quick Search, only the current page of results are exported with this option. 

That behavior seems really inconsistent to me.





422
CCH Axcess
Views are organized on the navigation panel. Do one of the following to display the Views section:

    In Staff Manager, click the Staff navigation bar.
    In Client Manager, click the Clients navigation bar.





423
CCH Axcess
You can search for grid contents in several ways.
    Search. 
    Find. The Find command in the Grid View group on the Home tab searches all grid columns for the current grid view. This feature selects the rows containing content that matches your criteria.
    Quick Search.





424
Terraform Codebox
corepack pnpm test
A command pattern used to run tests in Exercism JavaScript exercises. It runs pnpm test through Corepack to ensure the correct version of pnpm is used without a global install.





425
Terraform Codebox
A cloud-init.yaml.tpl file is a template for provisioning Linux VMs. You use Terraform’s templatefile() function to inject variables and base64-encode it for the VM’s custom_data.





426
Terraform Codebox
/tmp directory
A temporary directory used for short-lived files. It's often cleared on reboot and used by installers, compilers, or cloud-init scripts to stage downloads and extracted files before moving them to permanent locations.





427
Terraform Codebox
chmod 600
A command that sets file permissions to read/write for the owner only. Commonly used on sensitive files like SSH keys or swapfiles to prevent unauthorized access.





428
Terraform Codebox
/usr/local/bin
A standard directory in Unix-like systems for storing user-installed executable binaries. It’s typically in the system’s PATH, making anything you move there globally accessible from the command line.





429
Terraform Codebox
Bastion Host is a secure jump box VM that provides SSH access to private resources. Not required for public VMs but useful in production setups.





430
Terraform Codebox
Terraform custom_data for cloud-init
A base64-encoded YAML string passed into a VM resource in Terraform. It feeds cloud-init configuration at boot time, allowing VM provisioning and automation through Infrastructure-as-Code.





431
Terraform Codebox
The az login command authenticates your local environment with Azure CLI. Terraform can use these credentials by enabling use_cli = true in your provider block.





432
Terraform Codebox
exercism configure
A CLI command used to link the Exercism CLI to your account. It sets your API token and optionally configures your local workspace directory, so you can download and submit coding exercises.





433
Terraform Codebox
Azure File Share Mount in Linux
A process that connects a VM to an Azure Files storage account using the CIFS protocol. It's commonly mounted at boot time using cloud-init and allows persistence across VM reboots or tear-downs.





434
Terraform Codebox
Out of Memory (OOM) condition
Occurs when a VM exceeds its allocated RAM and has no swap space, potentially leading to process termination or a system hang. Common on small instances when running memory-heavy operations.





435
Terraform Codebox
VS Code Remote - SSH extension allows you to edit files and run terminals directly inside a remote VM. Great when you can’t install tools locally.





436
Terraform Codebox
The terraform.tfvars file allows you to define values for input variables. It’s automatically loaded during terraform plan or terraform apply, so you don’t have to pass variables via CLI every time.


hcl
ssh_public_key_path = "~/.ssh/id_rsa.pub"
allowed_ssh_cidr    = "192.168.1.0/24"





437
Terraform Codebox
In Windows PowerShell, RSA SSH keys can be generated using ssh-keygen. The key pair should be placed in C:\Users\<YourName>\.ssh\, with the public key path passed into Terraform.


powershell
ssh-keygen -t rsa -b 4096 -f $env:USERPROFILE\.ssh\id_rsa





438
Terraform Codebox
TF_LOG=DEBUG is an environment variable that makes Terraform print detailed internal logs. Use this for deep debugging when plan or apply behaves unexpectedly.





439
Terraform Codebox
curl -L -o filename
A command to download files over HTTP. The -L flag tells curl to follow redirects, and -o filename specifies a custom filename for the output, useful for scripting repeatable installs.





440
Power BI
Q: What is the default command timeout for the SQL Server connector in Power Query?
A: 10 minutes. Queries taking longer will time out unless you explicitly increase the CommandTimeout in the M step.





441
Power BI
Q: What indicates a break in query folding when reviewing Query Diagnostics in Power Query?
A: In the “Folding” diagnostic table, any step marked “Not foldable” shows where folding stopped, meaning subsequent transformations happen client‐side.





442
Power BI
Q: What is the effect of data type mismatches on Power Query folding and performance?
    A:

    If you change a column’s data type (e.g., from text to date) before filtering, Power Query may break folding because the source might not support that conversion natively.

    Always apply type conversions at the end, after filters, or ensure the source can natively convert the type in the same query.





443
Power BI
Q: How can you verify gateway-related issues are not causing silent failures?
A: Download gateway logs (Admin Portal → Gateways → Diagnostics) and search for timeouts or errors (e.g., QueryTimeoutException). Also check gateway CPU/memory spikes.





444
Power BI
What is the difference between row context and filter context in DAX?
Row context iterates over rows (as in iterators like SUMX or SUMMARIZE), while filter context filters tables for evaluation (as in measures and visuals). CALCULATE is the primary way to convert row context into filter context and apply or modify filters.





445
Power BI
Q: How do incremental refresh policies handle late-arriving data, and what can you do to mitigate missed updates?
    A:

    Incremental refresh typically uses a RangeStart/RangeEnd window; any rows older than RangeStart aren’t re-queried.

    To capture late-arriving updates, include a “stale data window” (e.g., overlapping dates) so you reprocess recent partitions that might receive back‐dated changes, then drop duplicates in Power Query or DAX.





446
Power BI
Q: If you freeze only half your rows (e.g., 100 K of 200 K), what kind of refresh time improvement can you expect?
A: Roughly a proportional gain—halving the pulled rows typically cuts variable query time nearly in half; speed-up may be ~40 % overall because fixed overhead (connection setup) remains.





447
Power BI
Q: What is “query folding” and why does it matter for refresh timeouts?
A: Query folding means pushing filtering/sorting logic down to the data source. If a step breaks folding, Power Query pulls all rows client-side, increasing data volume and risking timeouts.





448
Power BI
What’s the scope of variables (VAR) inside an ADDCOLUMNS column definition?
A VAR declared inside one column’s definition lives only within that column. To share results, you must either repeat the logic or separate the columns into multiple ADDCOLUMNS calls so that the column values exist in the table.





449
Power BI
What’s the difference between SUMMARIZE and SUMMARIZECOLUMNS?
SUMMARIZE creates a virtual table using a row context that you must convert to filter context with CALCULATE, whereas SUMMARIZECOLUMNS works directly in filter context, handles aggregations and filter modifiers more predictably, and is optimized by the engine for better performance.





450
Power BI
Q: Why might using a Date dimension table improve model performance and simplify filters?
    A:

    A dedicated Date table lets you create one‐to‐many relationships to fact tables and use date‐intelligence DAX functions efficiently.

    It centralizes filters (e.g., Year, Quarter) rather than filtering on a date column in every fact, reducing the complexity of DAX queries that run during refresh or visual rendering.





451
Pandas
How can you fill missing values using interpolation in a time-series column?

Use .interpolate() to perform interpolation on missing values.

    Example:
df['value'] = df['value'].interpolate(method='linear')





452
Azure Files Documentation
If a client successfully authenticates to an identity source, that identity source returns a Kerberos ticket. Azure Files authenticates requests with that Kerberos ticket, not user credentials.





453
Azure Files Documentation
Hybrid identities

Hybrid user identities are identities in AD DS that are synced to Microsoft Entra ID using either the on-premises Microsoft Entra Connect Sync application or Microsoft Entra Connect cloud sync, a lightweight agent that can be installed from the Microsoft Entra Admin Center.





454
Azure Files Documentation
In order to enable AES-256 encryption, the domain object that represents your storage account must be a computer account (default) or service logon account in the on-premises AD domain. If your domain object doesn't meet this requirement, delete it and create a new domain object that does.





455
Azure Files Documentation
A storage account key is an administrator key for a storage account, including administrator permissions to all files and folders within the file share you're accessing, and for all file shares and other storage resources (blobs, queues, tables, etc.) contained within your storage account.





456
Azure Files Documentation
The access tier of the file share dictates to the ratio of storage to IOPS/throughput costs (in the form of transactions). There are three access tiers: transaction optimized, hot, and cool. Changing the tier of the Azure file share results in transaction costs for the movement to the new access tier.





457
Azure Files Documentation
The procedures for changing the size, cost, and performance characteristics for Azure File Shares are different for classic file shares, which use the Microsoft.Storage resource provider, versus file shares created with Microsoft.FileShares (preview).





458
Azure Files Documentation
When using AD DS authentication, you assign share-level permissions to hybrid identities synced to Microsoft Entra ID while managing file/directory-level access using Windows ACLs.





459
Azure Files Documentation
The AzFilesHybrid PowerShell module provides cmdlets for deploying and configuring Azure Files. It includes cmdlets for domain joining storage accounts to your on-premises Active Directory and configuring your DNS servers. It's provided in a .zip linked to in the learn.microsoft.com article.





460
Azure Files Documentation
To toggle paid bursting, use the --paid-bursting-enabled parameter. Paid bursting is an advanced feature of the provisioned v1 model. Consult provisioned v1 paid bursting before enabling.





461
Azure Files Documentation
Kerberos authentication is available with Active Directory using AES 256 encryption (recommended) and RC4-HMAC. AES 128 Kerberos encryption isn't yet supported.





462
Azure Files Documentation
# Create the Kerberos key on the storage account and get the Kerb1 key as the password for the AD identity 
# to represent the storage account
$ResourceGroupName = "<resource-group-name-here>"
$StorageAccountName = "<storage-account-name-here>"

New-AzStorageAccountKey -ResourceGroupName $ResourceGroupName -Name $StorageAccountName -KeyName kerb1
Get-AzStorageAccountKey -ResourceGroupName $ResourceGroupName -Name $StorageAccountName -ListKerbKey | where-object{$_.Keyname -contains "kerb1"}





463
Python + Oauth2.0
urllib.parse.urlparse / parse_qs

Functions used to break down the incoming URL and extract query parameters. In this case, they’re used to retrieve the `code` value from the redirect URL.





464
Python + Oauth2.0
handler.send_response()

Sends an HTTP status code back to the client (browser). For example, `handler.send_response(200)` indicates success, while `handler.send_response(400)` signals a bad request.
handler is an instance of OAuthHandler, which inherits from http.server.SimpleHTTPRequestHandler





465
Python + Oauth2.0
Authorization Code Flow

An OAuth 2.0 process where the user logs in via a browser, and the app receives a temporary code that it can exchange for an access token. This flow is secure because the client secret is never exposed during the initial login.





466
Python + Oauth2.0
global token_dict

Declares that `token_dict` is a global variable so it can be modified inside the `do_GET` method. This is where the access token and other OAuth metadata are stored after the token exchange.





467
Python + Oauth2.0
base64.b64encode

Encodes the client ID and secret into a base64 string for use in the `Authorization` header. This is required by the OAuth token endpoint to authenticate the client during the token exchange.





468
Python + Oauth2.0
authorize_url

The endpoint where the user is sent to log in and grant access. It’s part of the OAuth provider’s infrastructure and handles user authentication and consent.





469
Python + Oauth2.0
urllib.parse.urlencode()

Encodes a dictionary of parameters into a URL query string. This ensures special characters are properly escaped and the URL is valid.





470
Python + Oauth2.0
handler.wfile.write()

Writes raw bytes to the response body. In your code, it sends a message like “You may close this window” back to the browser after the authorization code is received.
handler is an instance of OAuthHandler, which inherits from http.server.SimpleHTTPRequestHandler





471
pfSense
For several essential and optional services, such as checking for updates, installing updates and packages, and the Auto Config Backup service, pfSense® software makes outgoing connections to servers owned and operated by Netgate.





472
pfSense
To check for updates to pfSense software, navigate to System > Update or, if the System Information widget is active and configured to check for updates, visit the Dashboard. To install new packages or check for updates to installed packages, navigate to System > Package Manager.





473
pfSense
OPT
OPT or Optional interfaces refer to any additional interfaces other than WAN and LAN. OPT interfaces can be additional LAN segments, WAN connections, DMZ segments, interconnections to other private networks, and so on.





474
pfSense
The name of a FreeBSD interface starts with the name of its network driver. It is then followed by a number starting at 0 that increases incrementally by one for each additional interface sharing that driver. For example, a common driver used by Intel gigabit network interface cards is igb. The first such card in a firewall will be igb0, the second is igb1, and so on.





475
Accounting
Retained Earnings
The cumulative net income of a company that hasn’t been distributed to shareholders as dividends.





476
Accounting
Amortization
Systematic allocation of the cost of intangible assets (patents, goodwill) over their useful life.





477
Accounting
Chart of Accounts (COA)
The master list of accounts (assets, liabilities, equity, revenue, expenses) used in the general ledger.





478
Accounting
Accruals vs. Deferrals

Accruals: record revenue/expenses before cash flow (e.g., accrued wages).

Deferrals: record after cash flow (e.g., prepaid rent, unearned revenue).





479
Accounting
General Ledger (GL)
Central accounting record where all journal entries are posted, organized by account.





480
Accounting
Depreciation Methods
Different approaches for allocating asset cost: straight-line, declining balance, or units-of-production.





481
The Starless Crown, Rollins
Verdigris (VUR-duh-greess)
noun
A greenish patina formed on copper or brass by oxidation.
Example: The statue’s surface was covered in soft verdigris from years of weathering.





482
The Starless Crown, Rollins
Travois (truh-VOY)
noun
A frame or sled used by Indigenous peoples of North America for dragging loads over land.
Example: The hunters lashed their gear to a travois and set out across the plains.





483
The Starless Crown, Rollins
Svelte (svelt)
adjective
Slender and elegant, especially in movement or appearance.
Example: The svelte dancer moved with effortless grace across the stage.





484
The Starless Crown, Rollins
Keening (KEE-ning)
noun
A wailing lament for the dead, often performed in mourning rituals.
Example: The keening of the widow echoed through the valley.





485
The Starless Crown, Rollins
Lodestone (LOHD-stohn)
noun
A naturally magnetized piece of iron ore that attracts metal; metaphorically, a powerful influence.
Example: The explorers followed their compass, its needle drawn by the invisible pull of a lodestone.





486
The Starless Crown, Rollins
Brume (broom)
noun
A poetic term for mist or fog, especially one that softens the outlines of a landscape.
Example: The harbor lay hidden beneath the silver brume of morning.





487
The Starless Crown, Rollins
Pall (pawl)
noun / verb
A cloth spread over a coffin; also, something that covers or darkens. As a verb, to lose interest or attraction.
Example: A pall of smoke settled over the ruined city.





488
The Starless Crown, Rollins
Livery (LIV-er-ee)
noun
A uniform or distinctive clothing worn by servants or officials; also, the colors or symbols of a noble house.
Example: The coachmen wore the duke’s blue-and-gold livery.





489
The Starless Crown, Rollins
Remise (reh-MEEZ)
noun / verb
In fencing, a quick renewed attack after a parry; more generally, to give up or surrender.
Example: With a deft remise, she struck before her opponent could recover





490
OAuth 2.0 RFC6749
OAuth defines four roles:

   resource owner
      An entity capable of granting access to a protected resource.
      When the resource owner is a person, it is referred to as an
      end-user.

   resource server
   client
   authorization server





491
OAuth 2.0 RFC6749
OAuth defines four roles:

   resource owner
   
   resource server
      The server hosting the protected resources, capable of accepting
      and responding to protected resource requests using access tokens.

   client
   authorization server





492
OAuth 2.0 RFC6749
The OAuth 1.0 protocol ([RFC5849]), published as an informational
   document, was the result of a small ad hoc community effort.  This
   Standards Track specification builds on the OAuth 1.0 deployment
   experience, as well as additional use cases and extensibility
   requirements gathered from the wider IETF community.  The OAuth 2.0
   protocol is not backward compatible with OAuth 1.0.





493
OAuth 2.0 RFC6749
Instead of using the resource owner's credentials to access protected
   resources, the client obtains an access token -- a string denoting a
   specific scope, lifetime, and other access attributes.





494
Azure Developer Associate
Q: In Azure Storage, which SAS type supports Azure AD identity delegation?
A: User delegation SAS (Blob service only)





495
Azure Developer Associate
Consistent Prefix (Cosmos DB Consistency)

Consistent Prefix guarantees that reads see operations in order, but not necessarily up-to-date.
You’ll never see writes out of sequence — if operations happen A, B, C, you might read A–B, but never A–C without B.
It’s the “ordered but possibly stale” level: more relaxed than Session, stricter than Eventual. Perfect when order matters, freshness doesn’t.





496
Azure Developer Associate
OAuth 2.0 On-Behalf-Of Flow (OBO)

Used when an API calls another API using the user’s identity, not its own.
Example: Your front-end calls API A → API A calls Microsoft Graph (API B) on behalf of the user.
API A trades the user’s token for a new one scoped to API B.
It’s the baton pass of OAuth — same runner (the user), different leg of the race (next API).





497
Azure Developer Associate
Service Bus – Multicast Request/Reply Pattern

With topics, one message can fan out to multiple subscribers, each with its own subscription and filters.
That’s the multicast pattern: publisher sends once, multiple consumers receive independently.
Use queues when only one consumer should process the message; use topics for “notify everyone.”
It’s like a group text versus a direct message — same content, different distribution.





498
Python
Q:
What is the default exit code if a Python script ends without calling sys.exit()?

A:
0 (indicating successful execution).





499
Python
Q:
Why is lazy evaluation beneficial when dealing with large datasets?

A:
It reduces memory consumption and can improve performance by avoiding the storage and processing of the entire dataset at once.





500
Python
Q:
What is the purpose of the argparse module in Python?

A:
To parse command-line arguments and options in a user-friendly way.





501
Python
Q:
How do you retrieve the next value from a generator named gen?

A:
Using the built-in next(gen) function.





502
Python
Q:
How can generators be used to process streaming data, such as reading from a live sensor?

A:
By creating a generator that yields data points as they are received, allowing real-time processing without storing the entire stream.

Example:
def sensor_data_stream():
    while True:
        data = get_sensor_data()  # Hypothetical function
        yield data





503
Python
Q:
What is the difference between itertools.accumulate() and itertools.reduce()?

A:
itertools.accumulate() returns an iterator that yields accumulated sums (or results of a specified function), while functools.reduce() applies a function cumulatively to the items of a sequence, reducing it to a single value.





504
Python
Q:
What method do you call to parse the command-line arguments after defining them with argparse?

A:
.parse_args()





505
Python
How do you resolve a relative path to an absolute path using pathlib?

from pathlib import Path
relative_path = Path('some/relative/path')
absolute_path = relative_path.resolve()





506
Python
Q:
Explain the concept of generator pipelines.

A:
Generator pipelines involve chaining multiple generators together, where each generator processes data and passes it to the next, enabling efficient and modular data processing.





507
Python
Q:
How can you measure the performance of a generator function?

A:
By using the timeit module or integrating timing within the generator using time measurements.





508
Python
Q:
How can you create a context manager that suppresses specific exceptions?

A:
By using the contextlib.suppress() context manager.

Example:
from contextlib import suppress

with suppress(FileNotFoundError):
    os.remove('non_existent_file.txt')
# No exception is raised if the file does not exist





509
Python
Q:
How can you use tqdm with file operations, such as reading lines from a file?

A:
By wrapping the file iterator with tqdm to display a progress bar.

Example:
from tqdm import tqdm
for i in tqdm(range(100), desc='Processing'):
    pass





510
Python
Q:
How can decorators be used to modify the behavior of generator functions?

A:
By defining a decorator that wraps the generator function, potentially altering how yield statements are handled or adding additional functionality before and after iteration.





511
Python
Q:
What is the purpose of @functools.wraps in decorator functions?

A:
To preserve the original function’s metadata (such as the name and docstring) when it is wrapped by a decorator.





512
Python
Q:
What is the purpose of the leave parameter in tqdm?

A:
To determine whether to keep the progress bar display after completion (leave=True) or remove it (leave=False).





513
Python
Q:
What does an exit code of 0 typically signify in a Python script?

A:
Successful execution without errors.





514
Python
from functools import wraps

def my_decorator(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        # Pre-processing
        result = func(*args, **kwargs)
        # Post-processing
        return result
    return wrapper





515
FSLogix
During a first-time sign-in, FSLogix creates the container for the user in C:\ProgramData\FSLogix\Cache and mounts the container to the virtual machine. Next, FSLogix sets up all the necessary redirections for the user's profile. Then the User Profile Service creates the user's profile into the local cache.





516
FSLogix
Cloud Cache uses the locally mounted container to provide periodic updates to the remote storage providers. Cloud Cache is designed to insulate users from short-term or intermittent local (inner-region, close proximity) storage issues.





517
FSLogix
On a lazy asynchronous operation, Cloud Cache flushes the changes to all storage providers simultaneously as each provider is flushed on its own thread. FSLogix doesn't throttle this operation and utilizes as much throughput as the system will allow.





518
FSLogix
Remote Desktop Services (RDS):
A session-based technology where multiple users share a single server or a pool of servers. RDS provides centralized management and efficient resource sharing, although performance can vary with heavy concurrent usage.





519
FSLogix
Outlook OST Files:
Offline Storage Table files used by Microsoft Outlook to store a synchronized copy of mailbox data locally. They enable offline access to email, calendar, and contact data. Managing these files in an Office Container prevents them from bloating the main user profile.





520
FSLogix
SMB Share (Server Message Block):
A network file-sharing protocol used in Windows environments. SMB shares, like those provided by Azure Files, are commonly used for storing FSLogix Profile Containers, ensuring centralized and efficient access.





521
Asynchronous Python
asyncio.Queue
An async-safe queue in Python used for communication between producer and consumer coroutines.





522
Asynchronous Python
Deadlock
A state in async Python where tasks wait on each other indefinitely, halting progress—usually due to poor coordination.





523
Asynchronous Python
Coroutine
An async def function in Python that can pause at await expressions and resume later, enabling non-blocking asynchronous execution.





524
Asynchronous Python
pytest-asyncio
A Python testing plugin that allows you to write and run tests for asynchronous code using async def and await.





525
Asynchronous Python
asyncio.Semaphore
A concurrency control mechanism in Python’s asyncio used to limit how many coroutines run at once.





526
Asynchronous Python
asyncio.create_task()
Schedules a coroutine to run concurrently as a Task in Python's event loop and starts it immediately.





527
Asynchronous Python
Context Switching
Context switching is the process of storing and restoring the state of a thread so that execution can resume later, which can introduce performance overhead.





528
Asynchronous Python
Timeouts
Techniques like asyncio.wait_for() used in Python to limit how long a coroutine can run before it's cancelled.





529
Asynchronous Python
Thread
A thread is an independent sequence of execution within a program. Multiple threads can run concurrently within the same process.





530
Vocab
Jingo, Pratchett
Crinoline
noun | KRIN-uh-lin
A stiffened or structured fabric or petticoat worn under a skirt to give it a full shape, popular in the 19th century.
Example: Her gown was supported by a wide crinoline that swayed as she walked.





531
Vocab
Something Rotten, Fforde
Bête noire
noun | BET NWAHR
A person or thing that one particularly dislikes or avoids.
Example: Bureaucracy was his bête noire.





532
Vocab
Something Rotten, Fforde
Thylacine
noun | THY-luh-seen
A now-extinct carnivorous marsupial native to Tasmania, also known as the Tasmanian tiger.
Example: The thylacine was declared extinct in the 20th century, though sightings are still reported.





533
Vocab
Something Rotten, Fforde
Creosote
noun | KREE-uh-soht
A dark, oily liquid used to preserve wood, especially in railway ties and fences.
Example: The fence smelled strongly of creosote after being treated.





534
Vocab
Well of Lost Plots, Fforde
Insouciance
noun | in-SOO-see-ance
Casual lack of concern; indifference.
Example: His insouciance about deadlines frustrated his teammates.





535
Vocab
Something Rotten, Fforde
Brocade (dress)
noun | bro-KAYD
A rich fabric woven with a raised pattern, often in gold or silver thread, used in formal garments.
Example: Her brocade dress shimmered under the ballroom lights.





536
Vocab
Well of Lost Plots, Fforde
(naval) Pinnance
noun | PIN-ans
A small boat carried aboard a larger ship, used for transporting personnel or light cargo.
Example: The admiral boarded the pinnance for his trip ashore.





537
Vocab
Well of Lost Plots, Fforde
Pinafore
noun | PIN-uh-for

A sleeveless garment worn over a dress, like an apron.

A light sleeveless dress.
Example: She wore a blue gingham pinafore while painting in the studio.





538
Vocab
Red Side Story, FForde
Probity
Pronunciation: PROB-ih-tee
Definition: Adherence to the highest principles and ideals; uprightness and integrity.





539
Vocab
How to Sell a Haunted House, Hendrix
Tulle
Pronunciation: tool
Definition: A lightweight, fine netting often used in veils, gowns, and tutus, typically made from silk, nylon, or rayon.





540
Vocab
Jingo, Pratchett
Windlass
noun | WIND-luhs
A mechanical device used for lifting or hauling, typically consisting of a horizontal cylinder turned by a crank or motor.
Example: The sailors used a windlass to raise the anchor.





541
Vocab
Jingo, Pratchett
Cruet
noun | KROO-it
A small container or bottle for holding liquids like oil or vinegar, often part of a dining set.
Example: The table was set with a cruet of balsamic vinegar and olive oil.





542
Vocab
Lacunary
adjective
SPA: LACK-yoo-nary
IPA: /ˈlækjʊnəri/

Characterized by gaps or missing portions, particularly in texts or manuscripts.
Example: The ancient manuscript was lacunary, with several sections of the text lost to time.





543
Vocab
Something Rotten, Fforde
Barnaby Rudge
noun | BAR-nuh-bee RUHJ
A historical novel by Charles Dickens, set during the Gordon Riots of 1780, blending romance, mystery, and political unrest.
Example: “Barnaby Rudge” is one of Dickens’s lesser-known but richly atmospheric novels.





544
Vocab
Well of Lost Plots, Fforde
Foolscap
noun | FOOL-skap
A large sheet of writing paper, traditionally about 13 × 17 inches.
Example: He wrote his thesis on foolscap before transferring it to the computer.





545
Vocab
Something Rotten, Fforde
Owen Wister

An American writer best known for his novel The Virginian (1902), considered the first true Western novel.
Example: Owen Wister’s work laid the foundation for cowboy fiction.





546
PnP PowerShell
Invoke-WebRequest (Microsoft.PowerShell.Utility)
Sends HTTP and HTTPS requests to web pages or web services. Similar to Invoke-RestMethod but provides more detailed response information.





547
PnP PowerShell
Set-PnPFileCheckedIn (PnP.PowerShell)
Checks in a previously uploaded file in SharePoint, optionally adding comments. Essential for managing document versions and maintaining collaboration workflows.





548
PnP PowerShell
Chained Cmdlets
Using multiple cmdlets in a sequence where each cmdlet processes data output from the previous one. Enhances script efficiency and readability.





549
PnP PowerShell
System.IO.Stream (System.IO)
Represents a sequence of bytes, such as a file. Used in PowerShell to handle file data streams for operations like uploading files to SharePoint.





550
PnP PowerShell
Import-PnPProvisioningTemplate (PnP.PowerShell)
Imports a provisioning template into a SharePoint site, applying configurations and structures defined in the template. Enables automated site setup and customization.





551
PnP PowerShell
JSON Conversion
Transforms PowerShell objects to JSON format and vice versa using ConvertTo-Json and ConvertFrom-Json. Essential for handling REST API payloads and responses.





552
PnP PowerShell
SecureString (System.Security)
Represents text that should be kept confidential, such as passwords. Provides methods to encrypt and handle sensitive information securely in scripts.





553
PnP PowerShell
OAuth 2.0 Client Credentials Flow
An authentication method where applications authenticate using a client ID and client secret, enabling server-to-server interactions without user involvement.





554
PnP PowerShell
SharePoint CSOM (Client-Side Object Model)
A programming model that allows interaction with SharePoint data from client applications. Provides an alternative to REST API for performing SharePoint operations.





555
PnP PowerShell
Add-PnPField (PnP.PowerShell)
Adds a new field (column) to a SharePoint list or library. Supports various field types and configurations for customized data structures.





556
PnP PowerShell
Throttling in SharePoint
Limits the number of API requests to prevent abuse and ensure service stability. Requires implementing retry logic and handling throttling responses in scripts.





557
PnP PowerShell
ConvertFrom-SecureString (Microsoft.PowerShell.Security)
Transforms a secure string object back into plain text. Should be used cautiously to avoid exposing sensitive information.





558
VMWare
Storage vMotion

The ability to migrate virtual machine disk files from one datastore to another without downtime, essential for managing storage resources across a cluster.





559
VMWare
Host Failure

When a physical ESXi host becomes unavailable due to hardware failure, power loss, or other issues, potentially affecting the VMs running on it.





560
VMWare
VMware Horizon

A VMware product used for Virtual Desktop Infrastructure (VDI), enabling the delivery of virtual desktops and applications.





561
VMWare
ESXi Host

A physical server that runs the VMware ESXi hypervisor to host virtual machines (VMs).





562
VMWare
VMFS (Virtual Machine File System)

A high-performance file system used by VMware ESXi to store virtual machine disk files (VMDKs) on shared storage. VMFS is optimized for virtual machine workloads and allows multiple ESXi hosts to access the same datastore simultaneously.





563
VMWare
ESXi Lockdown Mode

A security feature that restricts access to an ESXi host to only a few trusted sources, such as the vCenter Server or specific administrators. When Lockdown Mode is enabled, direct access to the ESXi host (such as via SSH or the vSphere Client) is disabled, except for users who have administrative privileges.





564
VMWare
Shared Storage

A storage system that is accessible by multiple ESXi hosts in a cluster, essential for vMotion, HA, and Storage vMotion.





565
VMWare
ESXi Virtual Machine Monitor (VMM)

A component of VMware ESXi that manages virtual machine execution, including CPU, memory, and I/O operations. It ensures that VMs are isolated from each other and allows each VM to operate independently of the host.





566
VMWare
vSphere Cluster

A group of ESXi hosts that work together as a single entity, allowing for resource pooling and the management of VMs in a unified way.





567
VMWare
VMkernel

The core operating system that VMware ESXi uses to manage physical resources, such as CPU, memory, and storage. The VMkernel is responsible for creating and managing virtual machines, handling I/O operations, and providing resource management.





568
VMWare
vMotion Compatibility

The requirement for shared storage and network configuration to allow seamless migration of virtual machines between hosts without downtime.





569
VMWare
ESXi Datastore

A storage container used by ESXi hosts to store virtual machine disk files (VMDKs), ISO images, templates, and other data related to virtual machines. Datastores can be backed by shared storage solutions, such as SAN (Storage Area Network), NFS (Network File System), or vSAN.





570
JavaScript Concepts
Template Literals: Enhanced string syntax using backticks, allowing embedded expressions and multi-line strings for better readability.





571
JavaScript Concepts
Object.assign(): This method can be used to copy the values of all enumerable own properties from one or more source objects to a target object.

const obj = { key1: "value1", key2: "value2" };
Object.assign(obj, { key3: "value3" }); // Adds key3 with value3





572
JavaScript Concepts
Callback functions are functions passed as arguments. This programming pattern creates a sequence of function calls in both synchronous and asynchronous programming. Writing a callback function is no different from writing a function; however, the callback function must match the signature defined by the calling function.





573
JavaScript Concepts
Many operators coerce the operands into numbers (if necessary) according to the logic of the Number function explained above.
    Arithmetic operators: + (if no string is involved), -, *, /, %, **
    Unary plus and unary negation operators: +, -
    Relational operators (for non-string operands): >, >=, <, <=
    Bitwise operators: |, &, ^, ~





574
JavaScript Concepts
Prototype-Based Inheritance: JavaScript uses prototype-based inheritance, meaning objects can inherit properties and methods from other objects. This is achieved through the prototype chain3.

195
Azure Private DNS
Automatic DNS Record Management
Definition: A feature of Azure Private DNS that automatically manages DNS records for Azure resources.
Feature: Automatic DNS Record Management makes it easier to manage internal DNS records by automatically registering records for Azure resources such as VMs or load balancers in the Private DNS Zone.





575
JavaScript Concepts
Array slice Function: The slice method returns a shallow copy of a portion of an array into a new array object.
let array = [1, 2, 3, 4, 5];
let slicedArray = array.slice(1, 4); // Output: [2, 3, 4]





576
JavaScript Concepts
Arrow Functions: Arrow functions provide a concise syntax for writing functions. They are especially useful for short functions and callbacks. For example:

const add = (a, b) => a + b;





577
JavaScript Concepts
Prototype-Based Inheritance: JavaScript uses prototype-based inheritance, meaning objects can inherit properties and methods from other objects. This is achieved through the prototype chain3.





578
JavaScript Concepts
Using Object.entries(): The Object.entries() method returns an array of the object's own enumerable property [key, value] pairs. You can use the for...of loop to iterate over these pairs1.





579
JavaScript Concepts
To create a deep copy of an object in JavaScript, you can use the JSON.parse(JSON.stringify(object)) method. This approach works well for simple objects, such as those with string:number pairs, and ensures that the original object remains unmodified.





580
JavaScript Concepts
The basic syntax for a string template in JavaScript uses backticks (`) and ${} for embedding expressions.
  const name = 'Jay';
  const greeting = `Hello, ${name}!`;
  console.log(greeting); // Output: Hello, Jay!





581
JavaScript Concepts
Front: What are tagged templates and how do you use them?

Back: Tagged templates allow you to parse template literals with a function. The function receives the template string and the values as arguments.
  function tag(strings, ...values) {
  console.log(strings); // Array of string segments
  console.log(values);  // Array of values
  return 'Tagged template result';
}
const result = tag`Hello, ${name}!`;
console.log(result); // Output: Tagged template result





582
JavaScript Concepts
Logical AND (&&) and OR (||) Statements
if (condition1 && condition2) {
    // Code to execute if both condition1 and condition2 are true
}

if (condition1 || condition2) {
    // Code to execute if either condition1 or condition2 is true
}





583
JavaScript Concepts
Context API: A React feature that provides a way to pass data through the component tree without prop drilling, useful for simple state management.





584
JavaScript Concepts
Key-Value Pairs: Objects in JavaScript are collections of key-value pairs. Each key is a string (or symbol) and each value can be any data type, including other objects2.





585
JavaScript Concepts
Component-Based Architecture: Building applications by encapsulating functionality into independent, reusable components, commonly used in frontend frameworks.





586
JavaScript Concepts
Webpack: A powerful module bundler that compiles JavaScript modules into a single bundle, optimizing assets for production.





587
JavaScript Concepts
By default, all parameters defined in the function declaration are optional in JavaScript. If you provide fewer arguments than there are parameters, the missing arguments will be undefined inside the function, see Null and Undefined.





588
JavaScript Concepts
setTimeout / setImmediate / process.nextTick
Node/browser scheduling APIs:

    setTimeout(fn, 0): next macrotask

    setImmediate(fn): “check” phase in Node (after I/O)

    process.nextTick(fn): before the next event‑loop phase (Node only)





589
JavaScript Concepts
Fetch API
Modern browser API for HTTP requests, returning a Promise:

  fetch(url)
    .then(res => res.json())
    .then(data => console.log(data))
    .catch(err => console.error(err));





590
JavaScript Concepts
Callback Hell / Pyramid of Doom
Deeply nested callbacks that become hard to read and maintain. Promises and async/await help flatten this.





591
JavaScript Concepts
Promise.all() / allSettled() / race() / any()
Utilities to coordinate multiple promises:

  all: wait for all to succeed (or fail-fast)

  allSettled: wait for all to settle, regardless of outcome

  race: settle as soon as one settles

  any: succeed as soon as one fulfills (rejects if all reject)





592
JavaScript Concepts
Generate distinct arrays with fill() + map()
  new Array(3).fill().map(() => [])  
  // → [[], [], []]





593
JavaScript Concepts
Create N empty sub-arrays via Array.from
  let cols = Array.from({ length: n }, () => [])





594
Terraform
Meta-Arguments:
Definition: Special arguments like count, depends_on, and lifecycle that control resource behavior and relationships.
Count: Enables creating multiple instances of a resource.

resource "aws_instance" "web" {
  count = var.instance_count
  # Other configuration...
}





595
Terraform
Expressions and Operators:
Definition: Terraform uses expressions to compute values. These support arithmetic operations, string concatenation, and comparisons.
Usage: Allows dynamic configuration based on variable values or conditions.

Example:


"${var.a + var.b}"
"${var.env == "prod" ? "Production" : "Staging"}"





596
Terraform
Dynamic Blocks:
Definition: Allow you to construct nested blocks dynamically based on complex data structures.
Usage: Ideal for when the number of nested blocks is not fixed and depends on variable data.

Example:

dynamic "ingress" {
  for_each = var.ingress_rules
  content {
    from_port = ingress.value.from
    to_port   = ingress.value.to
    protocol  = ingress.value.protocol
  }
}





597
TSQL
Transactions and Isolation Levels:

Use BEGIN TRANSACTION, COMMIT, and ROLLBACK to group related SQL statements, ensuring data integrity.
Isolation levels (e.g., READ COMMITTED) manage concurrency and data consistency.





598
TSQL
Stored Procedures:

Precompiled TSQL routines that encapsulate one or more SQL statements, enhancing reusability, performance, and security.





599
TSQL
Indexing Considerations:

Ensure columns used in JOINs or WHERE clauses are indexed for better performance.





600
TSQL
Q: How do window functions differ from aggregate functions with GROUP BY?
A: Window functions (like SUM(...) OVER (...)) calculate values across sets of rows without collapsing them into a single row, preserving the full row data.





601
TSQL
Q: When should you use window functions instead of GROUP BY?
A: When you want to calculate totals, ranks, or running sums without reducing the number of rows in your result set.





602
TSQL
Window Functions:

Functions like ROW_NUMBER(), RANK(), LEAD(), and LAG() perform calculations across sets of rows related to the current row without collapsing the result set.





603
TSQL
Q: What does SUM(x) OVER (PARTITION BY y) do?
A: It sums the values of x for each group of rows where y has the same value, but keeps each row intact in the result set.





604
TSQL
JOIN Types and Conditions:

FULL OUTER JOIN: Returns rows when there is a match in either table, useful for capturing unmatched records.
Self-Joins: Joining a table to itself using different aliases to handle relationships within the same table.





605
Azure Compute Gallery
ACG	Azure Compute Gallery
AIB	Azure Image Builder
RBAC	Role-Based Access Control
SAS	Shared Access Signature





606
Azure Compute Gallery
Azure Image Builder (AIB) – A managed service that automates image creation by defining customizations (e.g., software installations, updates, configurations).





607
Azure Compute Gallery
Shared Image – An image in ACG that is accessible across multiple subscriptions with proper RBAC configuration.





608
Azure Compute Gallery
Image Definition – A logical representation of an image, specifying OS type, publisher, and general metadata.





609
Azure Compute Gallery
Image Retention Policy – A strategy for keeping or removing older image versions to manage storage costs and subscription quotas.





610
Azure Compute Gallery
Cross-Tenant Sharing – Not supported in ACG; images cannot be shared between different Azure Active Directory (Azure AD) tenants.





611
Azure Compute Gallery
Subscription Quotas – Limits on the number of image versions, definitions, and replication regions.





612
Azure Compute Gallery
Maximum Image Versions Per Definition – Each image definition can store up to 1,000 versions.





613
Azure Compute Gallery
Managed Image – A single, region-bound image stored in Azure, lacking versioning and replication features found in ACG.





614
C# Basics
Generics allow you to define classes, methods, or data structures with type parameters, enabling type safety and reusability.
Example:
public class Box<T> {
    public T Value { get; set; }
}

var intBox = new Box<int> { Value = 10 };





615
C# Basics
What are the key access modifiers in C#?

public: Accessible anywhere.
private: Accessible only within the same class.
protected: Accessible within the same class and derived classes.
internal: Accessible within the same assembly.





616
C# Basics
Inheritance allows one class to inherit members (fields, properties, methods) from another class.
Example:
public class Animal {
    public void Speak() {
        Console.WriteLine("Animal speaks");
    }
}





617
C# Basics
An enum is a distinct value type that defines a set of named constants.
Example:
public enum Day { Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday }

Day today = Day.Monday;





618
C# Basics
What is the syntax for a for loop in C#?

C#:
for (int i = 0; i < 5; i++) {
    Console.WriteLine(i);
}





619
C# Basics
How do you use LINQ methods like Select, Where, and OrderBy in C#?

C#: LINQ methods provide a concise way to query and manipulate collections.
Example:
var numbers = new List<int> { 1, 2, 3, 4, 5 };
var evenNumbers = numbers.Where(n => n % 2 == 0).OrderBy(n => n);





620
C# Basics
How do you handle exceptions in C#?

C#:
try {
    int x = 1 / 0;
}
catch (DivideByZeroException) {
    Console.WriteLine("Cannot divide by zero");
}





621
Azure VM + Developer
Startup Script / Bootstrap Script
A script (Bash or PowerShell) that sets up tools, environment variables, or dependencies on a VM right after it is created or logged into for the first time.





622
Azure VM + Developer
Port Forwarding
An SSH feature that lets you tunnel remote ports (e.g., a web app running on port 5000 on a VM) to your local machine for testing and access.





623
Azure VM + Developer
12-Factor App
A set of best practices for building cloud-native apps, including stateless processes, config via environment variables, and dev/prod parity.





624
Azure VM + Developer
Inbound NAT Rule
A networking rule used with load balancers to map a public-facing port to a specific VM's internal port, enabling external access to individual VMs in backend pools.





625
Azure VM + Developer
Remote - SSH (VS Code)
A VS Code extension that allows seamless editing, terminal access, and debugging on a remote machine via SSH, making a remote system feel local.





626
Azure VM + Developer
Formatter
A tool that automatically reformats source code to follow a defined style guide, improving consistency and readability (e.g., Prettier, Black).





627
Azure VM + Developer
Systemd Service
A background service on Linux managed by `systemctl`, which can run your app as a daemon, restart on failure, and start automatically on boot.





628
Azure VM + Developer
Debug Adapter Protocol
A VS Code protocol that enables consistent debugging experiences across languages by abstracting debugger backends from the editor interface.





629
Azure VM + Developer
VS Code Workspace (.code-workspace)
A VS Code config file that defines multi-root folders, editor settings, and extension recommendations for a consistent project layout and experience.





630
Azure VM + Developer
Makefile / Task Runner
A scriptable command list (via `make` or tools like `npm run`) used to automate tasks such as builds, tests, or environment setup in a dev workflow.





631
Azure DevOps Pipelines
What is the purpose of the 'checkout' step in an Azure DevOps YAML pipeline?
Answer: It checks out the source code from the repository for use in the pipeline.





632
Azure DevOps Pipelines
How do you specify a deployment environment like 'staging' or 'production' in a YAML pipeline?
Answer: Use the environment keyword, e.g., environment: 'staging'.





633
Microsoft Purview
For organization-wide data consumers:
    Data discovery - helps you easily find the data you need.
    Secure access - facilitates safe access to your data.
    Data understanding - providing what you need to know about the data.





634
Microsoft Purview
OKRs (objectives and key results) in Microsoft Purview are trackable business objectives tied to governance domains and data products to emphasize the value of business data.





635
Microsoft Purview
Microsoft Purview includes:
Sensitive information 
Trainable classifiers 
Data classification provides a graphical identification of items in your organization that have a sensitivity label, a retention label, or have been classified and the actions your users are taking on them





636
Microsoft Purview
DLP reports a vast amount of information to Microsoft Purview from monitoring policy matches and actions, to user activities. You need to consume and act on that information to tune your policies and triage actions taken on sensitive items. The telemetry goes into the Microsoft 365 audit Logs first, is processed, and makes its way to different reporting tools.





637
Microsoft Purview
In Microsoft Purview, you implement data loss prevention by defining and applying DLP policies. A DLP policy can help you identify, monitor, and automatically protect sensitive data-at-rest, data-in-motion, and data-in-use. DLP policies act on a variety of locations, methods of data transmission, and types of user activities.





638
Microsoft Purview
Run the policy in simulation mode, without Policy Tips and then use the DLP reports, and any incident reports, to assess the impact of the policies. You can use DLP reports to view the number, location, type, and severity of policy matches. Based on the results, you can fine-tune your policies as needed.





639
Microsoft Purview
You can apply just one sensitivity label to an item such as a document, email, or container. If you use the option that requires your users to provide a justification for changing a label to a lower sensitivity for files, emails, and meetings, the order of this list identifies the lower sensitivity.





640
Microsoft Purview
For data owners and stewards:
    Data curation and management - helps you deliver high quality data that's easy to understand and safely access for organization-wide applications.
    Responsible data use - helps you ensure that your data is used by intended users for intended purposes.
    Impact analysis - understand actions on the data that may impact your data.





641
Microsoft Purview
After you create a DLP policy, it's stored in a central policy store and then synced to the various content sources, including:
    • Exchange, and from there to Outlook on the web and Outlook
    • OneDrive
    • SharePoint sites
    • Office desktop programs (Excel, PowerPoint, and Word)
    Microsoft Teams channels and chat messages.





642
Microsoft Purview
When you create your DLP policies, you should consider rolling them out gradually, so you can assess their impact and test their effectiveness before fully enforcing them. For example, you don't want a new DLP policy to unintentionally block access to thousands of documents or to break an existing business process.





643
Microsoft Purview
DLP policies are how you monitor the activities that users take on sensitive items at rest, sensitive items in transit, or sensitive items in use and then take protective actions. For example, when a user attempts a prohibited action, like copying a sensitive item to an unapproved location or sharing medical information in an email, DLP can:

show a pop-up policy tip to the user that warns them that they might be trying to share a sensitive item inappropriately





644
Microsoft Purview
Administrative units in Microsoft Entra ID enable you to restrict administrative permissions to specific parts of your Microsoft Entra organization. You can create, delete, and edit administrative units in Microsoft Entra.





645
Microsoft Purview
Microsoft Purview Privileged Access Management helps protect your organization from breaches and helps to meet compliance best practices by limiting standing access to sensitive data or access to critical configuration settings. Instead of administrators having constant access, just-in-time access rules are implemented for tasks that need elevated permissions.





646
Microsoft Purview
Related to business domains are data products. A data product is a business construct with a name, description, owners, and most importantly a list of associated data assets. The data product provides context for the assets that are included within it, and provides a use case for data consumers.





647
Microsoft Purview
Choose administrative scoping - DLP supports assigning Administrative Units to policies. Administrators who are assigned to an administrative unit can only create and manage policies for the users, groups, distribution groups, accounts, and sites that they're assigned to.





648
Microsoft Purview
Extend SharePoint protection when files are downloaded when you configure a default sensitivity label for SharePoint document libraries and select the option to extend protection for unencrypted files. Then, when these files are downloaded, the current SharePoint permissions travel with the labeled file.





649
Azure Functions + PP365
Async Programming (Asyncio)
A programming paradigm in Python that enables concurrent execution of code using asynchronous functions and event loops. In Azure Functions, leveraging asyncio can improve performance and scalability by allowing Python functions to handle multiple tasks simultaneously without blocking.





650
Azure Functions + PP365
Function App Secrets
Sensitive information required by Azure Functions, such as API keys or connection strings. Python Azure Functions manage secrets through environment variables, Azure Key Vault integrations, or managed identities, ensuring that sensitive data is stored securely and accessed only by authorized functions.





651
Azure Functions + PP365
Service Bus Triggers
Triggers that activate Azure Functions in response to messages in Azure Service Bus queues or topics. Python functions with Service Bus triggers can process asynchronous messages, enabling decoupled and scalable communication between different parts of an application or between services.





652
Azure Functions + PP365
HTTP Triggers
A type of function trigger that activates an Azure Function in response to HTTP requests. Python Azure Functions with HTTP triggers can handle RESTful API calls, webhooks, and other HTTP-based interactions, making them suitable for building APIs and integrating with web services.





653
CCH Axcess
You can create teams in Staff Manager that mirror the working groups, departments, reporting relationships, or other groupings used in your firm. Grouping staff into teams can simplify Staff Manager since administrative tasks, such as assigning staff to projects, can be performed for all team members at one time. You can also organize reports by teams.





654
CCH Axcess
Client IDs can have up to 15 characters and can include spaces.





655
CCH Axcess
You can customize some of the functional options and design features of CCH Axcess™ modules you have installed by accessing User Options from the Application menu located in the upper-left corner of the window. Customizations are applied to the modules available under your personal login.





656
CCH Axcess
Custom identification number types are defined in Global Lists and are used to store identification numbers that are in addition to the identification numbers used for tax-specific client types.





657
CCH Axcess
Your client's information is managed in profiles containing details you enter about them. For example, in addition to the client's ID and name, a client's profile may include tax filing type, addresses, phone numbers, and classification in your firm.





658
CCH Axcess
In Client Manager, opened from the links on the Application Links window in Dashboard, you can manage information about your clients and client groups. When you set up client profiles, the information about each client is available in all CCH Axcess products and pre-populates whenever applicable.





659
CCH Axcess
To quickly add an item to the Quick Access Toolbar, right-click any ribbon command, ribbon group command, or Application menu command and select Add to Quick Access Toolbar from the menu.





660
CCH Axcess
You can select records across multiple pages in Clients, Staff, and Shared views. There is no restriction on the maximum number of records that can be selected; however, the Open option is available only for a maximum of ten selected Clients or Staff records. To clear all selected records across multiple pages, click Clear Selection in the Grid View group on the Home tab.





661
CCH Axcess
The ribbon is used throughout CCH Axcess™. It replaces the menus used in previous product versions. You no longer have to navigate menus or open multiple toolbars to locate the commands you need. Each ribbon can have multiple tabs. Commands displayed on each tab vary by module. On each tab, commands are grouped by similar functions.





662
Terraform Codebox
The base64encode() function is used in Terraform to convert the rendered cloud-init template into the format expected by the custom_data field of a VM resource.





663
Terraform Codebox
swapon / mkswap
mkswap formats a file to be used as swap space. swapon activates it, allowing the system to treat it like virtual memory. Useful on VMs with low RAM to avoid crashing during memory spikes.





664
Terraform Codebox
Data sources in Terraform let you read existing cloud resources without managing them. You use them when you want to reference things created outside of Terraform.


hcl
data "azurerm_client_config" "current" {}





665
Terraform Codebox
Terraform modules allow you to organize and reuse code. You can define a VM, network, or storage module once and use it in multiple places with different variables passed in.

Example root call:

hcl
module "ephemeral" {
  source = "./modules/ephemeral"
  vm_name = "devbox"
}





666
Terraform Codebox
Terraform provider blocks declare which cloud or service you're configuring. You must include a provider block like azurerm in the root module, even if the actual resources are defined in submodules.


hcl
provider "azurerm" {
  features {}
  use_cli = true
}





667
Terraform Codebox
Output values expose key info (like public IPs) after apply. They can be used to chain modules or help humans connect to deployed infrastructure.


hcl
output "ip" {
  value = azurerm_public_ip.this.ip_address
}





668
Terraform Codebox
path.module in Terraform refers to the directory containing the module being evaluated. It is used when loading template files (e.g., cloud-init.yaml.tpl) from the same folder.


hcl
templatefile("${path.module}/cloud-init.yaml.tpl", {...})





669
Terraform Codebox
Resource Naming: Use formatdate() or timestamp() to dynamically add creation dates to resources like VMs.


hcl
locals {
  creation_date = formatdate("YYYYMMDD", timestamp())
}





670
Terraform Codebox
ARM Template vs Terraform: Both are infrastructure-as-code for Azure, but Terraform is multi-cloud, more modular, and readable. ARM is native to Azure and more verbose.





671
Terraform Codebox
The .terraform/ directory stores provider binaries and module cache for your Terraform project. It should never be committed to version control, as it may contain large files or local-only paths.





672
Terraform Codebox
CIFS (Common Internet File System)
A network file-sharing protocol used by Windows and supported on Linux via cifs-utils. It's used in Azure File Shares to mount a remote storage directory into a Linux VM as if it were a local folder.





673
Terraform Codebox
Lifecycle blocks let you fine-tune resource behavior — for example, prevent Terraform from destroying something with prevent_destroy = true.


hcl
lifecycle {
  prevent_destroy = true
}





674
Terraform Codebox
file command
Used to inspect the type of a file based on its content, not its extension. Helpful when downloading files with tools like curl to check whether a .tar.gz is really a binary or an HTML error page.





675
Terraform Codebox
Terraform apply -target= allows you to apply or destroy specific modules. Useful when testing or when you want to keep persistent components like storage.


bash
terraform apply -target=module.ephemeral





676
Terraform Codebox
In Terraform, the output block allows you to print values after apply. Outputs can include public IP addresses, SSH commands, or resource IDs for chaining with other systems.


hcl
output "ssh_command" {
  value = "ssh azureuser@${azurerm_public_ip.main.ip_address}"
}





677
Terraform Codebox
The cloud-init mechanism in Azure allows Terraform to provision the VM on first boot, such as installing software, mounting storage, or configuring files.

Example inside VM block:

hcl
custom_data = base64encode(templatefile("${path.module}/cloud-init.yaml.tpl", {...}))





678
Power BI
Q: Why is a 200 K-row table (40 MB PBIX) unlikely to be “too large” for Power BI Desktop?
A: Power BI regularly handles multi-million-row tables under 100 MB if well-modeled; a 200 K-row table is small. Performance issues usually stem from query complexity or broken folding, not raw size.





679
Power BI
Q: How can you increase the SQL connector’s command timeout in M?
A: In the Sql.Database(...) step, add CommandTimeout=#duration(0,0,20,0) (for 20 minutes), e.g.:

m
Source = Sql.Database("server", "db", [ Query="...", CommandTimeout=#duration(0,0,20,0) ])





680
Power BI
Q: What are common pitfalls when manually partitioning with two queries?
A: Forgetting to disable History after its catch-up refresh (causes full pull), mismatched schemas between History & Recent, and letting the Historical table outgrow available memory.





681
Power BI
Q: What are the risks of using a static RangeStart parameter over a long period?
A: If you never update RangeStart, new “late-arriving” or back‐dated changes older than that date won’t be captured. You risk permanently missing updates unless you periodically advance the boundary.





682
Power BI
Q: Name one alternative to the SQL connector when connecting to Dataverse that can improve folding and avoid timeouts.
A: Use the built-in Dataverse (OData/CDS) connector via Get Data → Dataverse. It often auto-folds better into Dataverse’s paging model than the SQL (TDS) endpoint.





683
Power BI
Why can’t you reference a newly added column alias in the same SUMMARIZECOLUMNS call?
DAX processes each expression in a single SUMMARIZECOLUMNS call in isolation, so the engine doesn’t know aliases until after all expressions are parsed. You must either inline the logic or add the column in a separate step.





684
Power BI
Q: In a Pro workspace, which Service-side feature that profiles per-table/partition timings is unavailable?
A: The Query Inspector (Query performance pane) in the Power BI Service is only available on Premium or Premium Per User. Pro users only see basic Refresh History.





685
Power BI
Q: Why might “Rows Loaded” in Refresh History show fewer rows than expected even when the status is “Succeeded”?
A: A query may have partially timed out or a partition returned 0 rows (e.g., due to filter/timeout). “Succeeded” can hide warnings about QueryTimeout or skipped partitions.





686
Power BI
When would you use GENERATESERIES in DAX?
GENERATESERIES(start, end, increment) produces a single-column table of numeric values at the specified step size. It’s useful for creating bins or ranges (for example, percentage buckets) for frequency analysis.





687
Power BI
Q: How do you use Performance Analyzer in Power BI Desktop?
A: In Report view, go to View → Performance Analyzer → Start Recording → Refresh Visuals. It shows DAX query times, visual rendering times, etc., for each visual.





688
Power BI
Q: What role does Data Profiling in Power Query play when troubleshooting refresh issues?
A:

    Data Profiling (enable under View → Column quality/Column distribution) lets you see values, error rates, and distinct counts.

    Helps identify unexpected nulls, data type mismatches, or outliers that could increase transformation complexity or break folding.





689
Pandas
What does the unstack() function do in Pandas?

unstack() "unpivots" a DataFrame by converting the index into columns.

    Example:
df.groupby(['category', 'sub_category']).sum().unstack()





690
Azure Files Documentation
You can enable identity-based authentication over SMB using one of three identity sources: On-premises Active Directory Domain Services (AD DS), Microsoft Entra Domain Services, or Microsoft Entra Kerberos (hybrid identities only). You can only use one identity source for file access authentication per storage account.





691
Azure Files Documentation
To register your storage account with AD DS, you create a computer account (or service logon account) representing it in your AD DS. Think of this process as if it were like creating an account representing an on-premises Windows file server in your AD DS.





692
Azure Files Documentation
Ensure port 445 is open: The SMB protocol requires TCP port 445 to be open. Connections will fail if port 445 is blocked. You can check if your firewall or ISP is blocking port 445 by using the Test-NetConnection PowerShell cmdlet. For more information, see Port 445 is blocked.





693
Azure Files Documentation
Azure Files supports identity-based authentication for Windows file shares over Server Message Block (SMB) using the Kerberos authentication protocol through the following methods:

    On-premises Active Directory Domain Services (AD DS)
    Microsoft Entra Domain Services
    Microsoft Entra Kerberos for hybrid user identities





694
Azure Files Documentation
The amount of storage, IOPS, and throughput you provision can be dynamically scaled up or down as your needs change. However, you can only decrease a provisioned quantity after 24 hours have elapsed since your last quantity increase.





695
Azure Files Documentation
If you're keeping your primary file storage on-premises, Azure Files is an ideal solution for backup and DR to improve business continuity. You can use Azure file shares to back up your file servers while preserving Windows discretionary access control lists (DACLs).





696
Azure Files Documentation
Quota is a limit on the size of the file share. The quota property is used in the provisioned v2 and provisioned v1 models to mean "provisioned storage capacity", however, in the pay-as-you-go model, quota has no direct impact on bill.





697
Azure Files Documentation
SMB Multichannel enables clients to use multiple network connections that provide increased performance while lowering the cost of ownership. Increased performance is achieved through bandwidth aggregation over multiple NICs and utilizing Receive Side Scaling (RSS) support for NICs to distribute the I/O load across multiple CPUs.





698
Azure Files Documentation
Azure AD Connect V1 has been retired as of August 31, 2022 and is no longer supported. Azure AD Connect V1 installations may stop working unexpectedly. If you are still using an Azure AD Connect V1 you need to upgrade to Microsoft Entra Connect V2 immediately.





699
Azure Files Documentation
Azure file shares use the Kerberos protocol to authenticate with an identity source. When an identity associated with a user or application running on a client attempts to access data in Azure file shares, the request is sent to the identity source to authenticate the identity.





700
Python + Oauth2.0
handler.end_headers()

Finalizes the HTTP response headers. It must be called after `handler.send_response()` and before writing any content to the response body.
handler is an instance of OAuthHandler, which inherits from http.server.SimpleHTTPRequestHandler





701
Python + Oauth2.0
("localhost", 8080)

The address tuple passed to `TCPServer`. It tells the server to listen on port 8080 of the local machine. This must match the `redirect_uri` registered with the OAuth provider.
with socketserver.TCPServer(("localhost", 8080), OAuthHandler) as httpd:
    ...





702
Python + Oauth2.0
redirect_uri

The URL where the OAuth provider sends the user after login. It must match the one registered with the provider. In this script, it's `http://localhost:8080/callback`, which points to a local server waiting to catch the redirect.





703
Python + Oauth2.0
handler.wfile.write()

Writes a response back to the browser window. In this script, it sends a simple message like “You may close this window” after the code is received.
handler is an instance of OAuthHandler, which inherits from http.server.SimpleHTTPRequestHandler





704
Python + Oauth2.0
http.server.SimpleHTTPRequestHandler

A built-in Python class that handles HTTP GET requests and serves files from the current directory. It can be subclassed to customize how requests are processed — like extracting query parameters or sending custom responses.





705
Python + Oauth2.0
Content-Type: application/x-www-form-urlencoded

A header that tells the OAuth token endpoint how the POST data is formatted. This is required for most OAuth token exchanges.





706
Python + Oauth2.0
webbrowser.open()

A Python function that launches the default web browser and navigates to the given URL. Used here to initiate the login process for the user.





707
pfSense
Bogon networks are those which should never be seen on the Internet, including reserved and unassigned IP address space.

If any interfaces are configured to Block Bogon Networks, then shortly after initial installation and once per month after that, pfSense software will contact Netgate servers to obtain an updated list of Bogon Networks.





708
pfSense
There is a wealth of additional information and user experiences available on the various Netgate websites. The best way to search the sites is a Google search appending site:netgate.com to the query. This will search the website, forum, documentation, etc. which are all official sources of information.





709
pfSense
If administrators activate the Netgate Service and Support widget on the pfSense software GUI Dashboard, pfSense software will query Netgate servers to obtain the current support status, a list of web links, and other information to help administrators make the best use of their support options. This query occurs no more than once every 24 hours.





710
pfSense
The standard size IPv6 subnet defined by the IETF is a /64, which contains 2 64 IPs, or 18.4 quintillion addresses. The entire IPv4 space can fit inside a typical IPv6 subnet many times over with room to spare.
https://docs.netgate.com/pfsense/en/latest/network/ipv6/basics.html





711
Accounting
Reconciliation
Comparing records from two sources (e.g., general ledger vs. bank statement) to confirm accuracy.





712
Accounting
Contra-Asset Account
An account that offsets the balance of a related asset account. Example: Accumulated Depreciation reduces Equipment value.





713
Accounting
Audit vs. Review vs. Compilation
Levels of financial statement assurance:

    Audit: highest assurance, with testing and verification.

    Review: limited assurance, primarily analytical procedures.

    Compilation: no assurance, just presenting data in financial statement format.





714
Accounting
Matching Principle
Expenses are recorded in the same period as the revenues they help generate. Example: sales commission tied to December sales is recorded in December, even if paid in January.





715
Accounting
Intangible Assets
Non-physical assets with value, such as patents, trademarks, or customer lists.





716
The Starless Crown, Rollins
Wood and batten

A building style using wide wooden boards with thin battens covering the seams.
Example: The cottage’s wood-and-batten walls gave it a rustic charm.





717
The Starless Crown, Rollins
Lintel (LIN-tuhl)
noun
A horizontal beam spanning the top of a door or window, supporting the structure above.
Example: The ancient stone lintel bore carvings of forgotten kings.





718
The Starless Crown, Rollins
Furlong (FUR-long)
noun
An old measure of distance equal to one-eighth of a mile (about 220 yards).
Example: The horse led by two lengths at the final furlong.





719
The Starless Crown, Rollins
Silage (SY-lij)
noun
Fermented green fodder stored for feeding livestock during winter.
Example: The sweet, sharp smell of silage filled the barn as the farmer opened the silo.





720
The Starless Crown, Rollins
Curried a garment (KUR-eed)
verb phrase
To treat leather with oils or wax to make it supple and durable.
Example: The craftsman curried the hide before cutting it into straps.





721
The Starless Crown, Rollins
Sibilant (SIB-ih-luhnt)
adjective
Producing a hissing sound, as in the letters “s” or “sh.”
Example: The sibilant whisper of the wind moved through the reeds.





722
The Starless Crown, Rollins
Stanchion (STAN-shun)
noun
An upright post or bar supporting a structure or restraining livestock.
Example: The cows stood quietly between the stanchions during milking.





723
The Starless Crown, Rollins
Coif (kwahf)
noun / verb
A close-fitting cap once worn under armor or by women; also, to style or arrange hair neatly.
Example: She coifed her hair before the portrait sitting.





724
The Starless Crown, Rollins
Servitor (SUR-vi-tor)
noun
An attendant or servant, especially one performing humble duties.
Example: The servitor bowed and presented the guests with wine.





725
OAuth 2.0 RFC6749
Access tokens
   are issued to third-party clients by an authorization server with the
   approval of the resource owner.  The client uses the access token to
   access the protected resources hosted by the resource server.





726
OAuth 2.0 RFC6749
For example, an end-user (resource owner) can grant a printing
   service (client) access to her protected photos stored at a photo-
   sharing service (resource server), without sharing her username and
   password with the printing service.  Instead, she authenticates
   directly with a server trusted by the photo-sharing service
   (authorization server), which issues the printing service delegation-
   specific credentials (access token).





727
OAuth 2.0 RFC6749
The authorization code is obtained by using an authorization server
   as an intermediary between the client and resource owner.  Instead of
   requesting authorization directly from the resource owner, the client
   directs the resource owner to an authorization server (via its
   user-agent as defined in [RFC2616]), which in turn directs the
   resource owner back to the client with the authorization code.